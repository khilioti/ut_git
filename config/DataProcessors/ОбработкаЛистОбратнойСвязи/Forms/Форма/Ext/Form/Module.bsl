&НаКлиенте
Перем МеняемоеЗначение;

&НаКлиенте
Перем Закрывать;

&НаСервере
Процедура ПроверкаПравРедактирования()
	 ТабДок = РеквизитФормыВЗначение("Объект").ТабДок;
	 ВыбДокумент = РеквизитФормыВЗначение("Объект").ВыбДокПроверки;
	 РедактированиеДокумента = Ложь;
	 Если ТекущаяДата()-ВыбДокумент.Дата < Константы.КолвоЧасовРедактированияДокумента.Получить()*3600 Тогда
		 РедактированиеДокумента = Истина;
	 КонецЕсли;
	 Если (НЕ РедактированиеДокумента)  И (ВыбДокумент.Автор = ПользователиКлиентСервер.ТекущийПользователь()) Тогда
		 ТабДок.Область("R1C1:R"+ Строка(ТабДок.ВысотаТаблицы) + "C5").Защита = Истина;
	 КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НачальноеЗаполнениеТабДок()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.ДатаПроверки = ТекущаяДата();
	ОбработкаОбъект.Город = Справочники.Города.ПустаяСсылка();
	ОбработкаОбъект.Подразделение = Справочники.Подразделения.ПустаяСсылка();
	ОбработкаОбъект.Управляющий = Справочники.Сотрудники.ПустаяСсылка();
	ОбработкаОбъект.РД = Справочники.Сотрудники.ПустаяСсылка();
	ОбработкаОбъект.НД = Справочники.Сотрудники.ПустаяСсылка();
	ТабДок = ОбработкаОбъект.ТабДок;
	ТабДок.Очистить();
	
	Макет1 = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет1");
	
	Обл = Макет1.ПолучитьОбласть("Шапка");
	
	ТабДок.Вывести(Обл);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Ссылка,
	               |	ВложенныйЗапрос.Родитель,
	               |	ВложенныйЗапрос.ЭтоГруппа,
	               |	ВложенныйЗапрос.ПолнНаименование,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.НомерПоПорядку > 1000
	               |			ТОГДА ВложенныйЗапрос.НомерПоПорядку
	               |		ИНАЧЕ ВложенныйЗапрос.РодительРодительНомерПоПорядку * 100000 + ВложенныйЗапрос.РодительНомерПоПорядку * 1000 + ВложенныйЗапрос.НомерПоПорядку
	               |	КОНЕЦ КАК ОбщийНомерПоПорядку,
	               |	ВложенныйЗапрос.НомерПоПорядку,
	               |	ВложенныйЗапрос.РодительНомерПоПорядку,
	               |	ВложенныйЗапрос.РодительРодительНомерПоПорядку
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КритерииОбратнойСвязиHR.Ссылка КАК Ссылка,
	               |		КритерииОбратнойСвязиHR.Родитель КАК Родитель,
	               |		КритерииОбратнойСвязиHR.ЭтоГруппа КАК ЭтоГруппа,
	               |		КритерииОбратнойСвязиHR.ПолнНаименование КАК ПолнНаименование,
	               |		ВЫБОР
	               |			КОГДА НЕ КритерииОбратнойСвязиHR.ЭтоГруппа
	               |				ТОГДА КритерииОбратнойСвязиHR.НомерПоПорядку
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА КритерииОбратнойСвязиHR.Родитель.Ссылка ЕСТЬ NULL 
	               |						ТОГДА 100000 * КритерииОбратнойСвязиHR.НомерПоПорядку
	               |					ИНАЧЕ 100000 * КритерииОбратнойСвязиHR.Родитель.НомерПоПорядку + 1000 * КритерииОбратнойСвязиHR.НомерПоПорядку
	               |				КОНЕЦ
	               |		КОНЕЦ КАК НомерПоПорядку,
	               |		ВЫБОР
	               |			КОГДА КритерииОбратнойСвязиHR.Родитель.Ссылка ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ КритерииОбратнойСвязиHR.Родитель.НомерПоПорядку
	               |		КОНЕЦ КАК РодительНомерПоПорядку,
	               |		ВЫБОР
	               |			КОГДА КритерииОбратнойСвязиHR.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ КритерииОбратнойСвязиHR.Родитель.Родитель.НомерПоПорядку
	               |		КОНЕЦ КАК РодительРодительНомерПоПорядку
	               |	ИЗ
	               |		Справочник.КритерииОбратнойСвязиHR КАК КритерииОбратнойСвязиHR
	               |	ГДЕ
	               |		НЕ КритерииОбратнойСвязиHR.ПометкаУдаления) КАК ВложенныйЗапрос
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ОбщийНомерПоПорядку";
				   
	тз = Запрос.Выполнить().Выгрузить();
	
	Нпп = 0;
	Для Каждого стр из тз цикл
		Если стр.ЭтоГруппа тогда
			Если ЗначениеЗаполнено(стр.Родитель) тогда  // подгруппа
				Обл = Макет1.ПолучитьОбласть("Группа");
				Обл.Параметры.СтрГруппа = стр.ПолнНаименование;
				Обл.Параметры.Родитель = стр.Родитель;
				Обл.Параметры.БалГруппа = 0;
				ТабДок.Вывести(Обл);

			иначе  // раздел
				Обл = Макет1.ПолучитьОбласть("Раздел");
				Обл.Параметры.СтрРаздел = стр.ПолнНаименование;
				Обл.Параметры.Родитель = "Сам";
				Обл.Параметры.БалРаздел = 0;
				ТабДок.Вывести(Обл);

			КонецЕсли;
			
		иначе // строка
			
			Нпп = Нпп + 1;

			Обл = Макет1.ПолучитьОбласть("Строка");
			Обл.Параметры.Нпп = Нпп;
			Обл.Параметры.СтрНаим = стр.ПолнНаименование;
			//Обл.Параметры.СтрБал=1;
			Обл.Параметры.Родитель = стр.Родитель;
		    Обл.Параметры.ТекКритерий = стр.Ссылка;
			Обл.Параметры.ТекКритерий = стр.Ссылка;
			
			ТабДок.Вывести(Обл);
		КонецЕсли;

	КонецЦикла;
	КолвоКритериев = Нпп;
	ОблПодвал = Макет1.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОблПодвал);
	ОблПусто = Макет1.ПолучитьОбласть("Пусто");
	ТабДок.Вывести(ОблПусто);
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");

	ТабДок.ФиксацияСверху = 7;
КонецПроцедуры

&НаСервере
Процедура ПроверитьХранилище()
	Если ХранилищеНастроекДанныхФорм.Загрузить("HR","ТЗзаполнения") <> Неопределено 
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("HR","Город") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("HR","Управляющий") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("HR","Подразделение") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("HR","РД") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("HR","НД") <> Неопределено ТОГДА
			ЕстьДанныеВХранилище = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилище(НомСтроки)
	Если НЕ ЗначениеЗаполнено(Объект.ВыбДокПроверки) Тогда
		ТЗ = ХранилищеНастроекДанныхФорм.Загрузить("HR","ТЗзаполнения");
		Если ТипЗнч(ТЗ) <> Тип("ТаблицаЗначений") Тогда
			ТЗ = Новый ТаблицаЗначений;
			ТЗ.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число"));
			ТЗ.Колонки.Добавить("Бал",Новый ОписаниеТипов("Число"));
			ТЗ.Колонки.Добавить("Комментарий",Новый ОписаниеТипов("Строка"));
			ТЗ.Колонки.Добавить("Срок",Новый ОписаниеТипов("Дата"));
		КонецЕсли;
		СтрокаТаблицы = ТЗ.Найти(НомСтроки,"НомерСтроки");
		Если СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы = ТЗ.Добавить();
			СтрокаТаблицы.НомерСтроки = НомСтроки;
		КонецЕсли;
		СтрокаТаблицы.Бал = Число(Булево(Объект.ТабДок.Область("R"+НомСтроки+"C3").Значение));
		СтрокаТаблицы.Комментарий=Объект.ТабДок.Область("R"+НомСтроки+"C4").Значение;
		СтрокаТаблицы.Срок = Объект.ТабДок.Область("R"+НомСтроки+"C5").Значение;
		ТЗ.Сортировать("НомерСтроки");
		ХранилищеНастроекДанныхФорм.Сохранить("HR","ТЗзаполнения",ТЗ);
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Процедура ОчиститьХранилище()
	ХранилищеНастроекДанныхФорм.Удалить("HR","ТЗзаполнения",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("HR","Город",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("HR","Управляющий",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("HR","Подразделение",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("HR","РД",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("HR","НД",ПользователиКлиентСервер.ТекущийПользователь());
КонецПроцедуры

&НаСервере
Процедура ВосстановитьИзХранилища()
	ПолеГород = ХранилищеНастроекДанныхФорм.Загрузить("HR","Город");
	Если ПолеГород <> Неопределено Тогда
		Объект.Город = ПолеГород;
	КонецЕсли;
	
	ПолеУправляющий = ХранилищеНастроекДанныхФорм.Загрузить("HR","Управляющий");
	Если ПолеУправляющий <> Неопределено Тогда
		Объект.Управляющий = ПолеУправляющий;
	КонецЕсли;
	
	ПолеПодразделение = ХранилищеНастроекДанныхФорм.Загрузить("HR","Подразделение");
	Если ПолеПодразделение <> Неопределено Тогда
		Объект.Подразделение = ПолеПодразделение;
	КонецЕсли;
	
	ПолеРД = ХранилищеНастроекДанныхФорм.Загрузить("HR","РД");
	Если ПолеРД <> Неопределено Тогда
		Объект.РД = ПолеРД;
	КонецЕсли;
	
	ПолеНД = ХранилищеНастроекДанныхФорм.Загрузить("HR","НД");
	Если ПолеНД <> Неопределено Тогда
		Объект.НД = ПолеНД;
	КонецЕсли;
	
	ТЗзаполнения = ХранилищеНастроекДанныхФорм.Загрузить("HR","ТЗзаполнения");
	Если ТЗзаполнения <> Неопределено Тогда
		Для Каждого СтрокаТаблицы из ТЗзаполнения Цикл
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C3").Значение = СтрокаТаблицы.Бал;
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C3").Формат = "ЧН=0"; 
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C4").Значение = СтрокаТаблицы.Комментарий;
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C5").Значение = СтрокаТаблицы.Срок;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПересчетСуммРазделов()
	
	ОбщСумма = 0;
	Для НомСтр = 8 по Объект.ТабДок.ВысотаТаблицы - 5 цикл
		//Предварительное обнуление разделов и групп
		Если Объект.ТабДок.Область("R" + Строка(НомСтр) + "C1").Текст = "" Тогда
			 Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение = 0;
		КонецЕсли;
		Поиск = Объект.ТабДок.Область("R" + Строка(НомСтр) + "C1").Расшифровка;
		Родитель = Объект.ТабДок.НайтиТекст(Строка(Поиск),,,,Истина);
		Если Родитель <>Неопределено Тогда
			Объект.ТабДок.Область("R" + Родитель.Верх + "C3").Значение = Число(Объект.ТабДок.Область("R" + Родитель.Верх + "C3").Значение) +  Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);
			ОбщСумма = ОбщСумма +  Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);
			Поиск =  Объект.ТабДок.Область("R" + Родитель.Верх + "C1").Расшифровка;
			РодительРодитель = Объект.ТабДок.НайтиТекст(Строка(Поиск),,,,Истина);
			
			Если РодительРодитель <> Неопределено И РодительРодитель.Текст <> "Сам" Тогда 
				Объект.ТабДок.Область("R" + РодительРодитель.Верх + "C3").Значение = Число(Объект.ТабДок.Область("R" + РодительРодитель.Верх + "C3").Значение) +  Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);	
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	Объект.ТабДок.Область("R4C3").Значение	= ОбщСумма;
	Если КолвоКритериев <> 0 Тогда
		Объект.ТабДок.Область("R5C3").Значение	= Строка(Формат((ОбщСумма/КолвоКритериев)*100,"ЧДЦ=2"))+" %";
	Иначе 
		Объект.ТабДок.Область("R5C3").Значение	= Строка(Формат(0,"ЧДЦ=2"))+" %";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммРазделовДляЯчейки(НомСтр,Было,Стало)
	Поиск = Объект.ТабДок.Область("R" + Строка(НомСтр) + "C1").Расшифровка;
	Для НомС = 9 по Объект.ТабДок.ВысотаТаблицы - 5 цикл
		Если Объект.ТабДок.Область("R" + Строка(НомС) + "C2").Текст = Строка(Поиск) Тогда
			РодительСтр = НомС;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	Объект.ТабДок.Область("R" + РодительСтр + "C3").Значение = Число(Объект.ТабДок.Область("R" + РодительСтр + "C3").Значение) - Число(Было) + Число(Стало);
	Поиск =  Объект.ТабДок.Область("R" + РодительСтр + "C1").Расшифровка;
	РодительРодительСтр = Объект.ТабДок.НайтиТекст(Строка(Поиск),,,,Истина).Верх;
	Объект.ТабДок.Область("R" + РодительРодительСтр + "C3").Значение = Число(Объект.ТабДок.Область("R" + РодительРодительСтр + "C3").Значение) - Число(Было) + Число(Стало);
	Объект.ТабДок.Область("R4C3").Значение	= Число(Объект.ТабДок.Область("R4C3").Значение)- Число(Было) + Число(Стало);
	Объект.ТабДок.Область("R5C3").Значение	= Строка(Формат((Объект.ТабДок.Область("R4C3").Значение/КолвоКритериев)*100,"ЧДЦ=2"))+" %";
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НачальноеЗаполнениеТабДок();
	Табл = РеквизитФормыВЗначение("Объект");
	Табл.ТабДок.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
	ЗначениеВРеквизитФормы(Табл,"Объект");
	ПоказатьШапку = Истина;
	ПроверитьХранилище();
КонецПроцедуры

&НаСервере
Функция СохранитьВДокументНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТабДок = ОбработкаОбъект.ТабДок;
	ВыбДокумент = ОбработкаОбъект.ВыбДокПроверки;
	
	Если не ЗначениеЗаполнено(ВыбДокумент) тогда
		//создаем
		ТекДокПроверки = Документы.ЛистОбратнойСвязиHR.СоздатьДокумент();
		
	иначе
		ТекДокПроверки = ВыбДокумент.ПолучитьОбъект();
		ТекДокПроверки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ТекДокПроверки.Результаты.Очистить();
	КонецЕсли;
	
	ТекДокПроверки.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	ТекДокПроверки.Город = ОбработкаОбъект.Город;
	ТекДокПроверки.Подразделение = ОбработкаОбъект.Подразделение;
	ТекДокПроверки.Дата = ОбработкаОбъект.ДатаПроверки;
	Если ТекДокПроверки.Дата =НачалоДня(ТекущаяДата()) Тогда
		ТекДокПроверки.Дата = ТекущаяДата();
	КонецЕсли;
	ТекДокПроверки.Управляющий = ОбработкаОбъект.Управляющий;	
	ТекДокПроверки.РегионДиректор = ОбработкаОбъект.РД;
	ТекДокПроверки.НацДиректор = ОбработкаОбъект.НД;
	ТекДокПроверки.КолвоБаллов = ТабДок.Область("R4C3").Значение;
	ТекДокПроверки.ПроцентСоответствия = Лев(ТабДок.Область("R5C3").Значение,Найти(ТабДок.Область("R5C3").Значение,"%")-2);
	ТекДокПроверки.Записать(РежимЗаписиДокумента.Запись); 
	
	Для НомСтр = 8 по ТабДок.ВысотаТаблицы-5 цикл
		СсылкаНаЭлСпр = ТабДок.Область("R" + Строка(НомСтр) + "C2").Расшифровка;
		
		Если ЗначениеЗаполнено(СсылкаНаЭлСпр) тогда
			нов = ТекДокПроверки.Результаты.Добавить();
			нов.Критерий = СсылкаНаЭлСпр;
			Попытка
				нов.Кво = ТабДок.Область("R" + Строка(НомСтр) + "C3").Текст;
			Исключение
				нов.Кво = 1;
			КонецПопытки;			
			нов.КомментарииПроверяющего = ТабДок.Область("R" + Строка(НомСтр) + "C4").Текст;
			нов.СрокУстранения = ТабДок.Область("R" + Строка(НомСтр) + "C5").Значение;
			
		КонецЕсли;
	КонецЦикла;	
	Попытка
		ТекДокПроверки.Записать(РежимЗаписиДокумента.Проведение);
		ОчиститьХранилище();
	Исключение
		Сообщить("Документ не проведен по причине " + ОписаниеОшибки());
	КонецПопытки;

	Возврат ТекДокПроверки.Ссылка; //***
	
КонецФункции

&НаКлиенте
Процедура СохранитьВДокумент(Команда)
	
	 СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Функция СохранитьНаКлиенте()
	Таб = Объект.ТабДок;
	Если  Строка(Объект.Город)  = "" Тогда
		 ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Город""",БиблиотекаКартинок.Информация32);
		 Возврат Ложь;
	КонецЕсли;
	Если  Строка(Объект.Подразделение)  = "" Тогда
		 ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""ProStor №""",БиблиотекаКартинок.Информация32);
		 Возврат Ложь;
	КонецЕсли; 
	Если  Строка(Объект.Управляющий)  = "" Тогда
		 ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Управляющий""",БиблиотекаКартинок.Информация32);
		 Возврат Ложь;
	КонецЕсли;
	 
	Если  Строка(Объект.РД)  = "" Тогда
		 ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Региональный директор""",БиблиотекаКартинок.Информация32);
		 Возврат Ложь;
	КонецЕсли;
	 
	Если  Строка(Объект.НД)  = "" Тогда
		 ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Национальный директор""",БиблиотекаКартинок.Информация32);
		 Возврат Ложь;
	КонецЕсли;

	
	Для НомСтр = 8 по Таб.ВысотаТаблицы-5 цикл
		СсылкаНаЭлСпр = Таб.Область("R" + Строка(НомСтр) + "C2").Расшифровка;
		Если ЗначениеЗаполнено(СсылкаНаЭлСпр) тогда
			Если Таб.Область("R" + Строка(НомСтр) + "C3").Значение <> 1 Тогда
				ТекстСообщения="";
				Если Таб.Область("R" + Строка(НомСтр) + "C5").Значение = Дата(1,1,1) Тогда
					ТекстСообщения="В строке "+ Таб.Область("R" + Строка(НомСтр) + "C1").Значение + " не указана дата устранения."+Символы.ПС+ "Документ не сохранен";
				КонецЕсли;
				
				Если Таб.Область("R" + Строка(НомСтр) + "C4").Значение = "" Тогда
					ТекстСообщения="В строке "+ Таб.Область("R" + Строка(НомСтр) + "C1").Значение + " не указана задача по устранению."+Символы.ПС+ "Документ не сохранен";
				КонецЕсли;
				
				Если ТекстСообщения<>"" Тогда
					Сообщить(ТекстСообщения);
					Возврат Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	
	Док = СохранитьВДокументНаСервере();    //***
	Объект.ВыбДокПроверки = Док; //***	
	//ВыбДокПроверкиПриИзмененииНаСервере(); //***
	//ПересчетСуммРазделов(Истина);
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ВыбДокПроверкиПриИзмененииНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТабДок = ОбработкаОбъект.ТабДок;	
	
	ТабДок.Очистить();
	
	ВыбДокумент = РеквизитФормыВЗначение("Объект").ВыбДокПроверки;
	
	Если не ЗначениеЗаполнено(ВыбДокумент) тогда
		НачальноеЗаполнениеТабДок();
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъект.ДатаПроверки = ВыбДокумент.Дата;
	ОбработкаОбъект.Подразделение = ВыбДокумент.Подразделение;	      		
	ОбработкаОбъект.Город = ВыбДокумент.Город;			
	ОбработкаОбъект.Управляющий = ВыбДокумент.Управляющий;			
	ОбработкаОбъект.РД = ВыбДокумент.РегионДиректор;			
	ОбработкаОбъект.НД = ВыбДокумент.НацДиректор;

	
	Макет1 = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет1");
	
	Обл = Макет1.ПолучитьОбласть("Шапка");			
	
	ТабДок.Вывести(Обл);
	
	//*** в запрос добавить ЗадачаУправляющемуСсылка	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Ссылка,
	               |	ВложенныйЗапрос.Родитель,
	               |	ВложенныйЗапрос.ЭтоГруппа,
	               |	ВложенныйЗапрос.ПолнНаименование,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.НомерПоПорядку > 1000
	               |			ТОГДА ВложенныйЗапрос.НомерПоПорядку
	               |		ИНАЧЕ ВложенныйЗапрос.РодительРодительНомерПоПорядку * 100000 + ВложенныйЗапрос.РодительНомерПоПорядку * 1000 + ВложенныйЗапрос.НомерПоПорядку
	               |	КОНЕЦ КАК ОбщийНомерПоПорядку,
	               |	ВложенныйЗапрос.НомерПоПорядку,
	               |	ВложенныйЗапрос.РодительНомерПоПорядку,
	               |	ВложенныйЗапрос.РодительРодительНомерПоПорядку,
	               |	СУММА(ВложенныйЗапрос.Кво) КАК Кво,
	               |	МАКСИМУМ(ВложенныйЗапрос.КомментарииПроверяющего) КАК КомментарииПроверяющего,
	               |	МАКСИМУМ(ВложенныйЗапрос.СрокУстранения) КАК СрокУстранения,
	               |	МАКСИМУМ(ВложенныйЗапрос.ОтметкаОбИсполнении) КАК ОтметкаОбИсполнении,
	               |	МАКСИМУМ(ВложенныйЗапрос.ЗадачаУправляющемуСсылка) КАК ЗадачаУправляющемуСсылка
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КритерииОбратнойСвязиHR.Ссылка КАК Ссылка,
	               |		КритерииОбратнойСвязиHR.Родитель КАК Родитель,
	               |		КритерииОбратнойСвязиHR.ЭтоГруппа КАК ЭтоГруппа,
	               |		КритерииОбратнойСвязиHR.ПолнНаименование КАК ПолнНаименование,
	               |		ВЫБОР
	               |			КОГДА НЕ КритерииОбратнойСвязиHR.ЭтоГруппа
	               |				ТОГДА КритерииОбратнойСвязиHR.НомерПоПорядку
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА КритерииОбратнойСвязиHR.Родитель.Ссылка ЕСТЬ NULL 
	               |						ТОГДА 100000 * КритерииОбратнойСвязиHR.НомерПоПорядку
	               |					ИНАЧЕ 100000 * КритерииОбратнойСвязиHR.Родитель.НомерПоПорядку + 1000 * КритерииОбратнойСвязиHR.НомерПоПорядку
	               |				КОНЕЦ
	               |		КОНЕЦ КАК НомерПоПорядку,
	               |		ВЫБОР
	               |			КОГДА КритерииОбратнойСвязиHR.Родитель.Ссылка ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ КритерииОбратнойСвязиHR.Родитель.НомерПоПорядку
	               |		КОНЕЦ КАК РодительНомерПоПорядку,
	               |		ВЫБОР
	               |			КОГДА КритерииОбратнойСвязиHR.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ КритерииОбратнойСвязиHR.Родитель.Родитель.НомерПоПорядку
	               |		КОНЕЦ КАК РодительРодительНомерПоПорядку,
	               |		0 КАК Кво,
	               |		"""" КАК КомментарииПроверяющего,
	               |		&ПустДата КАК СрокУстранения,
	               |		ЛОЖЬ КАК ОтметкаОбИсполнении,
	               |		0 КАК ЗадачаУправляющемуСсылка
	               |	ИЗ
	               |		Справочник.КритерииОбратнойСвязиHR КАК КритерииОбратнойСвязиHR
	               |	ГДЕ
	               |		НЕ КритерииОбратнойСвязиHR.ПометкаУдаления
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		ЛистОбратнойСвязиHRРезультаты.Критерий,
	               |		ЛистОбратнойСвязиHRРезультаты.Критерий.Родитель,
	               |		ЛистОбратнойСвязиHRРезультаты.Критерий.ЭтоГруппа,
	               |		ЛистОбратнойСвязиHRРезультаты.Критерий.ПолнНаименование,
	               |		ЛистОбратнойСвязиHRРезультаты.Критерий.НомерПоПорядку,
	               |		ВЫБОР
	               |			КОГДА ЛистОбратнойСвязиHRРезультаты.Критерий.Родитель.Ссылка ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ ЛистОбратнойСвязиHRРезультаты.Критерий.Родитель.НомерПоПорядку
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ЛистОбратнойСвязиHRРезультаты.Критерий.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ ЛистОбратнойСвязиHRРезультаты.Критерий.Родитель.Родитель.НомерПоПорядку
	               |		КОНЕЦ,
	               |		ЛистОбратнойСвязиHRРезультаты.Кво,
	               |		ЛистОбратнойСвязиHRРезультаты.КомментарииПроверяющего,
	               |		ЛистОбратнойСвязиHRРезультаты.СрокУстранения,
	               |		ЛистОбратнойСвязиHRРезультаты.ОтметкаОбИсполнении,
	               |		ВЫБОР
	               |			КОГДА ЛистОбратнойСвязиHRРезультаты.ЗадачаУправляющему ЕСТЬ NULL 
	               |				ТОГДА 0
	               |			ИНАЧЕ ЛистОбратнойСвязиHRРезультаты.ЗадачаУправляющему
	               |		КОНЕЦ
	               |	ИЗ
	               |		Документ.ЛистОбратнойСвязиHR.Результаты КАК ЛистОбратнойСвязиHRРезультаты
	               |	ГДЕ
	               |		ЛистОбратнойСвязиHRРезультаты.Ссылка = &ВыбДокумент) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Ссылка,
	               |	ВложенныйЗапрос.Родитель,
	               |	ВложенныйЗапрос.ЭтоГруппа,
	               |	ВложенныйЗапрос.ПолнНаименование,
	               |	ВложенныйЗапрос.НомерПоПорядку,
	               |	ВложенныйЗапрос.РодительНомерПоПорядку,
	               |	ВложенныйЗапрос.РодительРодительНомерПоПорядку
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ОбщийНомерПоПорядку";
				   
				   
	Запрос.УстановитьПараметр("ВыбДокумент", ВыбДокумент);
	Запрос.УстановитьПараметр("ПустДата", Дата(2010,1,1));

	
	тз = Запрос.Выполнить().Выгрузить();
	//тз.Сортировать("РодительРодительНомерПоПорядку, РодительНомерПоПорядку, НомерПоПорядку");
	
	Нпп = 0;
	Для Каждого стр из тз цикл
		Если стр.ЭтоГруппа тогда
			Если ЗначениеЗаполнено(стр.Родитель) тогда  // подгруппа
				Обл = Макет1.ПолучитьОбласть("Группа");
				Обл.Параметры.СтрГруппа = стр.ПолнНаименование;
				Обл.Параметры.Родитель = стр.Родитель;
				Обл.Параметры.БалГруппа = 0;
				ТабДок.Вывести(Обл);

			иначе  // раздел
				Обл = Макет1.ПолучитьОбласть("Раздел");
				Обл.Параметры.СтрРаздел = стр.ПолнНаименование;
				Обл.Параметры.Родитель = "Сам";
				Обл.Параметры.БалРаздел = 0;
				ТабДок.Вывести(Обл);

			КонецЕсли;
			
		иначе // строка
			
			Нпп = Нпп + 1;
		

			Обл = Макет1.ПолучитьОбласть("Строка");
			Обл.Параметры.Нпп = Нпп;
			Обл.Параметры.СтрНаим = стр.ПолнНаименование;
			Обл.Параметры.ТекКритерий = стр.Ссылка;
			Обл.Параметры.СтрБал = стр.Кво;					
			Обл.Параметры.СтрКоммент = стр.КомментарииПроверяющего;
			Обл.Параметры.Родитель = стр.Родитель;

			Если стр.СрокУстранения <> Дата(2010,1,1) тогда
				Обл.Параметры.СтрДат = стр.СрокУстранения;
			КонецЕсли;
			ТабДок.Вывести(Обл);
			ТабДок.Область("R"+ТабДок.ВысотаТаблицы+"C3").Формат = "ЧН=0";
		КонецЕсли;

	КонецЦикла;
	
	КолвоКритериев = Нпп;
	ОблПодвал = Макет1.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОблПодвал);
	ОблПусто = Макет1.ПолучитьОбласть("Пусто");
	ТабДок.Вывести(ОблПусто); 
	ПроверкаПравРедактирования();
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	ТабДок.ФиксацияСверху = 6;

КонецПроцедуры

&НаКлиенте
Процедура ВыбДокПроверкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Автор", ПользователиКлиентСервер.ТекущийПользователь());
	ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
	ОткрытьФорму("Документ.ЛистОбратнойСвязиHR.ФормаВыбора",ПараметрыВыбора,,,,, Новый ОписаниеОповещения("ВыбДокПроверкиНачалоВыбораЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВыбДокПроверкиНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда	
		Объект.ВыбДокПроверки = Результат;
		ВыбДокПроверкиПриИзмененииНаСервере();
		ПересчетСуммРазделов();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТаблДокПриИзменении(Элемент)
	ПоместитьВХранилище(Элемент.ТекущаяОбласть.Низ);
	Если Элемент.ТекущаяОбласть.Лево = 3 Тогда
		Элемент.ТекущаяОбласть.Значение = Число(Булево(Элемент.ТекущаяОбласть.Значение));
		Элемент.ТекущаяОбласть.Формат = "ЧН=0";
		ПересчетСуммРазделовДляЯчейки(Элемент.ТекущаяОбласть.Верх,МеняемоеЗначение,Элемент.ТекущаяОбласть.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблДокВыбор(Элемент, Область, СтандартнаяОбработка)
	Если Элемент.ТекущаяОбласть.Лево = 3 Тогда
		МеняемоеЗначение = Элемент.ТекущаяОбласть.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьШапкуПриИзменении(Элемент)
	Элементы.ВыбДокПроверки.Видимость = ПоказатьШапку;
	Элементы.ШапкаДокумента.Видимость = ПоказатьШапку;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если НЕ Закрывать Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект),"Все несохраненные данные будут удалены, сохранить документ?",РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ");
		Отказ = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если СохранитьНаКлиенте() Тогда
			Закрывать = Истина;
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Закрывать = Истина;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Закрывать = Ложь;
	Если ЕстьДанныеВХранилище Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект), "Есть данные заполненные раннее. Восстановить их?   В случае отказа данные будут удалены",РежимДиалогаВопрос.ДаНет,,,"Внимание!!!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВосстановитьИзХранилища();
		ПересчетСуммРазделов();
	Иначе
		ОчиститьХранилище();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	ГородПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГородПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Город) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("HR","Город",Объект.Город);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УправляющийПриИзменении(Элемент)
	УправляющийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УправляющийПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Управляющий) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("HR","Управляющий",Объект.Управляющий);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПодразделениеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("HR","Подразделение",Объект.Подразделение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РДПриИзменении(Элемент)
	РДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РДПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.РД) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("HR","РД",Объект.РД);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НДПриИзменении(Элемент)
	НДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НДПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.НД) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("HR","НД",Объект.НД);
	КонецЕсли;
КонецПроцедуры

