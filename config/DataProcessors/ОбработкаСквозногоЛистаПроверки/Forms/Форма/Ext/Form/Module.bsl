
&НаСервере
Процедура ПроверкаПравРедактирования()
	ТабДок = РеквизитФормыВЗначение("Объект").ТабДок;
	ВыбДокумент = РеквизитФормыВЗначение("Объект").ВыбДокПроверки;
	РедактированиеДокумента = Ложь;
	Если ТекущаяДата()-ВыбДокумент.Дата < Константы.КолвоЧасовРедактированияДокумента.Получить()*3600 Тогда
		РедактированиеДокумента = Истина;
	КонецЕсли;
	Если (НЕ РедактированиеДокумента) И (ВыбДокумент.Автор = ПользователиКлиентСервер.ТекущийПользователь()) Тогда
		ТабДок.Область("R1C1:R"+ Строка(ТабДок.ВысотаТаблицы) + "C6").Защита = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьКритерииВТабДок()
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ТабДок = ОбработкаОбъект.ТабДок;
	ТабДок.Очистить();
	
	Макет1 = ОбработкаОбъект.ПолучитьМакет("Макет1");
	
	Обл = Макет1.ПолучитьОбласть("Шапка");
	
	Обл.Параметры.ВидКритериев = ОбработкаОбъект.ВидКритериев;
	
	ТабДок.Вывести(Обл);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидКритериев", ОбработкаОбъект.ВидКритериев);
	Запрос.Текст = "ВЫБРАТЬ
	|	КритерииПроверкиСквознойЛист.Ссылка КАК Ссылка,
	|	КритерииПроверкиСквознойЛист.Родитель КАК Родитель,
	|	КритерииПроверкиСквознойЛист.ЭтоГруппа КАК ЭтоГруппа,
	|	КритерииПроверкиСквознойЛист.ПолнНаименование КАК ПолнНаименование,
	|	ВЫБОР
	|		КОГДА НЕ КритерииПроверкиСквознойЛист.ЭтоГруппа
	|			ТОГДА КритерииПроверкиСквознойЛист.НомерПоПорядку
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КритерииПроверкиСквознойЛист.Родитель.Ссылка ЕСТЬ NULL
	|					ТОГДА 1000 * КритерииПроверкиСквознойЛист.НомерПоПорядку
	|				ИНАЧЕ 1000 * КритерииПроверкиСквознойЛист.Родитель.НомерПоПорядку + КритерииПроверкиСквознойЛист.НомерПоПорядку
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерПоПорядку,
	|	ВЫБОР
	|		КОГДА КритерииПроверкиСквознойЛист.Родитель.Ссылка ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ КритерииПроверкиСквознойЛист.Родитель.НомерПоПорядку
	|	КОНЕЦ КАК РодительНомерПоПорядку,
	|	КритерииПроверкиСквознойЛист.Описание,
	|	КритерииПроверкиСквознойЛист.Вес
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Справочник.КритерииПроверкиСквознойЛист КАК КритерииПроверкиСквознойЛист
	|ГДЕ
	|	НЕ КритерииПроверкиСквознойЛист.ПометкаУдаления
	|	И (КритерииПроверкиСквознойЛист.ЭтоГруппа
	|			ИЛИ ВЫБОР
	|				КОГДА &ВидКритериев = ЗНАЧЕНИЕ(Перечисление.ВидыКритериевДляСквозногоЛистаПроверки.РД)
	|					ТОГДА КритерииПроверкиСквознойЛист.НуженДляРД
	|				КОГДА &ВидКритериев = ЗНАЧЕНИЕ(Перечисление.ВидыКритериевДляСквозногоЛистаПроверки.НД)
	|					ТОГДА КритерииПроверкиСквознойЛист.НуженДляНД
	|				КОГДА &ВидКритериев = ЗНАЧЕНИЕ(Перечисление.ВидыКритериевДляСквозногоЛистаПроверки.ООК)
	|					ТОГДА КритерииПроверкиСквознойЛист.НуженДляООК
	|				КОГДА &ВидКритериев = ЗНАЧЕНИЕ(Перечисление.ВидыКритериевДляСквозногоЛистаПроверки.ДАИК)
	|					ТОГДА КритерииПроверкиСквознойЛист.НуженДляДАИК
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|	И НЕ ЕСТЬNULL(КритерииПроверкиСквознойЛист.НеИспользоватьКритерий, ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Родитель,
	|	СУММА(1) КАК КолЭлементов
	|ПОМЕСТИТЬ ВТ_колЭлементов
	|ИЗ
	|	ВТ КАК ВТ
	|ГДЕ
	|	ВТ.ЭтоГруппа = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Родитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Родитель,
	|	СУММА(ВТ_колЭлементов.КолЭлементов) КАК КолЭлементов
	|ПОМЕСТИТЬ ВТ_колЭлементовРодитель1
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_колЭлементов КАК ВТ_колЭлементов
	|		ПО ВТ.Ссылка = ВТ_колЭлементов.Родитель
	|ГДЕ
	|	ВТ.ЭтоГруппа = ИСТИНА
	|	И ВТ.Родитель <> ЗНАЧЕНИЕ(Справочник.КритерииПроверкиСквознойЛист.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Родитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Ссылка,
	|	ВТ.Родитель,
	|	ВТ.ЭтоГруппа,
	|	ВТ.ПолнНаименование,
	|	ВЫБОР
	|		КОГДА ВТ.НомерПоПорядку > 1000
	|			ТОГДА ВТ.НомерПоПорядку
	|		ИНАЧЕ ВТ.РодительНомерПоПорядку * 1000 + ВТ.НомерПоПорядку
	|	КОНЕЦ КАК ОбщийНомерПоПорядку,
	|	ВТ.НомерПоПорядку,
	|	ВТ.РодительНомерПоПорядку,
	|	ЕСТЬNULL(ВТ_колЭлементов.КолЭлементов, 0) + ЕСТЬNULL(ВТ_колЭлементовРодитель1.КолЭлементов, 0) КАК КолЭлементов,
	|	ВТ.Описание,
	|	ВТ.Вес
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_колЭлементов КАК ВТ_колЭлементов
	|		ПО ВТ.Ссылка = ВТ_колЭлементов.Родитель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_колЭлементовРодитель1 КАК ВТ_колЭлементовРодитель1
	|		ПО ВТ.Ссылка = ВТ_колЭлементовРодитель1.Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбщийНомерПоПорядку";
	
	тз = Запрос.Выполнить().Выгрузить();
	
	КолвоКритериевМаг = 0;
	ОбщийВесКритериев = 0;
	ОбщийВесКритериевТовароведение = 0;
	//КолвоКритериевОтвДеп = 0;
	
	
	Нпп = 0;
	Для Каждого стр из тз цикл
		Если стр.ЭтоГруппа тогда
			//Если ЗначениеЗаполнено(стр.Родитель) тогда  // подгруппа
			Обл = Макет1.ПолучитьОбласть("Группа");
			Обл.Параметры.СтрГруппа = стр.ПолнНаименование;
			Обл.Параметры.Родитель = стр.Родитель;   //параметр расшифровки в поле НПП
			Обл.Параметры.БалГруппа = стр.КолЭлементов;
			//Обл.Параметры.БалГруппаСлужба = стр.КолЭлементов;
			Обл.Параметры.ТекКритерий = стр.Ссылка;
			
			ТабДок.Вывести(Обл);
			
			
		иначе // строка
			
			Нпп = Нпп + 1;
			
			Обл = Макет1.ПолучитьОбласть("Строка");
			Обл.Параметры.Нпп = стр.НомерПоПорядку;//Нпп;
			Обл.Параметры.СтрБал = 1;
			Обл.Параметры.СтрВес = стр.Вес;
			Обл.Параметры.СтрНаим = стр.ПолнНаименование;
			//Обл.Параметры.СтрОписание = стр.Описание;
			
			//--------------------------------------------------------------------------
			// Хилиоти Н.А. 30.01.2020  НАЧАЛО (
			// Комментарий: решение проблемы: Если Наименование и ПолноеНаименование у группы не соответствуют - не производятся расчеты по ней 
			
			Обл.Параметры.Родитель = стр.Родитель.ПолнНаименование;    //параметр расшифровки в поле НПП
			
			////////////// ЗАКОММЕНТИРОВАНО НАЧАЛО //////////////
			//Обл.Параметры.Родитель = стр.Родитель;    //параметр расшифровки в поле НПП
			////////////// ЗАКОММЕНТИРОВАНО КОНЕЦ  //////////////
			// Хилиоти Н.А. 30.01.2020  КОНЕЦ )
			//--------------------------------------------------------------------------
			
			Обл.Параметры.ТекКритерий = стр.Ссылка;
			ТабДок.Вывести(Обл);
			
			
			КолвоКритериевМаг = КолвоКритериевМаг + 1;
			ОбщийВесКритериев = ОбщийВесКритериев + стр.Вес;
			
			Если стр.Родитель.ПолнНаименование = РодительТовароведение тогда
				ОбщийВесКритериевТовароведение = ОбщийВесКритериевТовароведение + стр.Вес;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	ОблПусто = Макет1.ПолучитьОбласть("Пусто");
	ТабДок.Вывести(ОблПусто);
	//КолвоКритериевМаг = Нпп;
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	ТабДок.ФиксацияСверху = 12;
	
	
	Объект.ТабДок.Область("R8C3").Значение = ОбщийВесКритериев;
	Объект.ТабДок.Область("R9C3").Значение = "100 %";
	
	Объект.ТабДок.Область("R8C6").Значение = ОбщийВесКритериевТовароведение;
	Объект.ТабДок.Область("R9C6").Значение = "100 %";
	
	
	
КонецПроцедуры

&НаСервере
Процедура НачальноеЗаполнениеТабДок()
	
	
	Объект.ДатаПроверки = ТекущаяДата();
	Объект.Город = Справочники.Города.ПустаяСсылка();
	Объект.Подразделение = Справочники.Подразделения.ПустаяСсылка();
	Объект.Управляющий = Справочники.Сотрудники.ПустаяСсылка();
	Объект.РД = Справочники.Сотрудники.ПустаяСсылка();
	Объект.НД = Справочники.Сотрудники.ПустаяСсылка();
	//ОбработкаОбъект.ВидКритериев = Перечисления.ВидыКритериевДляСквозногоЛистаПроверки.РД;
	
	//ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	
	ПерезаполнитьКритерииВТабДок();
	
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьХранилище()
	Если ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","ТЗзаполнения") <> Неопределено 
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","Город") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","Управляющий") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","Подразделение") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","РД") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","НД") <> Неопределено
		ИЛИ ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","ВидКритериев") <> Неопределено ТОГДА
		ЕстьДанныеВХранилище = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилище(НомСтроки)
	Если НЕ ЗначениеЗаполнено(Объект.ВыбДокПроверки) Тогда
		ТЗ = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","ТЗзаполнения");
		Если ТипЗнч(ТЗ) <> Тип("ТаблицаЗначений") Тогда
			ТЗ = Новый ТаблицаЗначений;
			ТЗ.Колонки.Добавить("НомерСтроки",Новый ОписаниеТипов("Число"));
			ТЗ.Колонки.Добавить("Бал",Новый ОписаниеТипов("Число"));
			ТЗ.Колонки.Добавить("Комментарий",Новый ОписаниеТипов("Строка"));
			ТЗ.Колонки.Добавить("Срок",Новый ОписаниеТипов("Дата"));
		КонецЕсли;
		СтрокаТаблицы = ТЗ.Найти(НомСтроки,"НомерСтроки");
		Если СтрокаТаблицы = Неопределено Тогда
			СтрокаТаблицы = ТЗ.Добавить();
			СтрокаТаблицы.НомерСтроки = НомСтроки;
		КонецЕсли;
		СтрокаТаблицы.Бал = Число(Булево(Объект.ТабДок.Область("R"+НомСтроки+"C4").Значение));
		СтрокаТаблицы.Комментарий=Объект.ТабДок.Область("R"+НомСтроки+"C5").Значение;
		СтрокаТаблицы.Срок = Объект.ТабДок.Область("R"+НомСтроки+"C6").Значение;
		
		ТЗ.Сортировать("НомерСтроки");
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","ТЗзаполнения",ТЗ);
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Процедура ОчиститьХранилище()
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "ТЗзаполнения",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "Город",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "Управляющий",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "Подразделение",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "РД",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "НД",ПользователиКлиентСервер.ТекущийПользователь());
	ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "ВидКритериев",ПользователиКлиентСервер.ТекущийПользователь());
КонецПроцедуры

&НаСервере
Процедура ВосстановитьИзХранилища()
	ПолеГород = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","Город");
	Если ПолеГород <> Неопределено Тогда
		Объект.Город = ПолеГород;
	КонецЕсли;
	
	ПолеУправляющий = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","Управляющий");
	Если ПолеУправляющий <> Неопределено Тогда
		Объект.Управляющий = ПолеУправляющий;
	КонецЕсли;
	
	ПолеПодразделение = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","Подразделение");
	Если ПолеПодразделение <> Неопределено Тогда
		Объект.Подразделение = ПолеПодразделение;
	КонецЕсли;
	
	ПолеРД = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","РД");
	Если ПолеРД <> Неопределено Тогда
		Объект.РД = ПолеРД;
	КонецЕсли;
	
	ПолеНД = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","НД");
	Если ПолеНД <> Неопределено Тогда
		Объект.НД = ПолеНД;
	КонецЕсли;
	
	ПолеВидКритериев = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","ВидКритериев");
	Если ПолеВидКритериев <> Неопределено Тогда
		Объект.ВидКритериев = ПолеВидКритериев;
	КонецЕсли;
	
	ПерезаполнитьКритерииВТабДок();
	
	ТЗзаполнения = ХранилищеНастроекДанныхФорм.Загрузить("СквознойЛист","ТЗзаполнения");
	Если ТЗзаполнения <> Неопределено Тогда
		Для Каждого СтрокаТаблицы из ТЗзаполнения Цикл
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C4").Значение = СтрокаТаблицы.Бал;
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C4").Формат = "ЧН=0"; 
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C5").Значение = СтрокаТаблицы.Комментарий;
			Объект.ТабДок.Область("R"+СтрокаТаблицы.НомерСтроки + "C6").Значение = СтрокаТаблицы.Срок;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ПересчетСуммРазделов()
	ОбщСуммаМаг = 0;
	ОбщСуммаПоВесу = 0;
	ОбщСуммаМагТовароведение = 0;
	
	
	Для НомСтр = 13 по Объект.ТабДок.ВысотаТаблицы - 1 цикл
		//Предварительное обнуление разделов и групп
		Если Объект.ТабДок.Область("R" + Строка(НомСтр) + "C1").Текст = "" Тогда
			Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение = 0;
			Объект.ТабДок.Область("R" + Строка(НомСтр) + "C4").Значение = 0;
		КонецЕсли;
		ТекКритерийРодитель = Объект.ТабДок.Область("R" + Строка(НомСтр) + "C1").Расшифровка;   // из поля Нпп
		СтрокаСРодителем = Объект.ТабДок.НайтиТекст(Строка(ТекКритерийРодитель),,,,Истина);
		Если СтрокаСРодителем <>Неопределено Тогда
			Объект.ТабДок.Область("R" + СтрокаСРодителем.Верх + "C3").Значение = Число(Объект.ТабДок.Область("R" + СтрокаСРодителем.Верх + "C3").Значение) +  
			Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);
			
			Объект.ТабДок.Область("R" + СтрокаСРодителем.Верх + "C4").Значение = Число(Объект.ТабДок.Область("R" + СтрокаСРодителем.Верх + "C4").Значение) +  
			(Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение) * Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C4").Значение));
			
			ТекКритерий =  Объект.ТабДок.Область("R" + НомСтр + "C2").Расшифровка;
			
			
			ОбщСуммаПоВесу = ОбщСуммаПоВесу +  Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);
			ОбщСуммаМаг = ОбщСуммаМаг +  Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C4").Значение) * Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);
			//
			
			Если ТекКритерийРодитель = РодительТовароведение тогда
				ОбщСуммаМагТовароведение = ОбщСуммаМагТовароведение +  Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C4").Значение) * 
				Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Значение);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Объект.ТабДок.Область("R8C3").Значение	= ОбщСуммаМаг ;
	Если ОбщийВесКритериев  <> 0 Тогда
		Объект.ТабДок.Область("R9C3").Значение	= Формат((ОбщСуммаМаг / ОбщийВесКритериев  )*100,"ЧДЦ=2; ЧН=0,00") + " %";
	Иначе 
		Объект.ТабДок.Область("R9C3").Значение	= Формат(0,"ЧДЦ=2; ЧН=0,00") + " %";
	КонецЕсли;
	
	Объект.ТабДок.Область("R8C6").Значение	= ОбщСуммаМагТовароведение ;
	Если ОбщийВесКритериевТовароведение  <> 0 Тогда
		Объект.ТабДок.Область("R9C6").Значение	= Формат((ОбщСуммаМагТовароведение / ОбщийВесКритериевТовароведение  )*100,"ЧДЦ=2; ЧН=0,00") + " %";
	Иначе 
		Объект.ТабДок.Область("R9C6").Значение	= Формат(0,"ЧДЦ=2; ЧН=0,00") + " %";
	КонецЕсли;
	
	
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммРазделовДляЯчейки(НомСтр,Было,Стало)
	ТекКритерийРодитель = Объект.ТабДок.Область("R" + Строка(НомСтр) + "C1").Расшифровка;
	ВесВЭтойСтроке = Число(Объект.ТабДок.Область("R" + Строка(НомСтр) + "C3").Текст);
	
	Для НомС = 13 по Объект.ТабДок.ВысотаТаблицы - 1 цикл
		Если Объект.ТабДок.Область("R" + Строка(НомС) + "C2").Текст = Строка(ТекКритерийРодитель) Тогда
			РодительСтр = НомС;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	Объект.ТабДок.Область("R" + РодительСтр + "C4").Значение = Число(Объект.ТабДок.Область("R" + РодительСтр + "C4").Текст) - (Число(Было) * ВесВЭтойСтроке) + (Число(Стало) * ВесВЭтойСтроке);
	// и вес нужно скорректировать
	//Объект.ТабДок.Область("R" + РодительСтр + "C3").Значение = Число(Объект.ТабДок.Область("R" + РодительСтр + "C3").Значение) - (Число(Было) * ВесВЭтойСтроке) + (Число(Стало) * ВесВЭтойСтроке);
	
	
	
	//общий балл
	Объект.ТабДок.Область("R8C3").Значение	= Число(Объект.ТабДок.Область("R8C3").Значение)- (Число(Было) * ВесВЭтойСтроке) + (Число(Стало) * ВесВЭтойСтроке);// Число(Было) + Число(Стало);
	Объект.ТабДок.Область("R9C3").Значение	= Формат((Объект.ТабДок.Область("R8C3").Значение/ОбщийВесКритериев )*100,"ЧДЦ=2; ЧН=0,00")+" %";
	
	Если ТекКритерийРодитель = РодительТовароведение тогда
		Объект.ТабДок.Область("R8C6").Значение	= Число(Объект.ТабДок.Область("R8C6").Значение)- (Число(Было) * ВесВЭтойСтроке) + (Число(Стало) * ВесВЭтойСтроке);// Число(Было) + Число(Стало);
		
		Если ОбщийВесКритериевТовароведение  <> 0 Тогда
			Объект.ТабДок.Область("R9C6").Значение	= Формат((Объект.ТабДок.Область("R8C6").Значение/ОбщийВесКритериевТовароведение )*100,"ЧДЦ=2; ЧН=0,00")+" %";
		Иначе 
			Объект.ТабДок.Область("R9C6").Значение	= Формат(0,"ЧДЦ=2; ЧН=0,00") + " %";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВидКритериев = Перечисления.ВидыКритериевДляСквозногоЛистаПроверки.РД;
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	
	РодительТовароведение = Справочники.КритерииПроверкиСквознойЛист.НайтиПоКоду("000000168").ПолнНаименование;
		
	НачальноеЗаполнениеТабДок();  
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ОбработкаОбъект.ТабДок.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	
	
	
	ПоказатьШапку = Истина;
	ПроверитьХранилище();
КонецПроцедуры

&НаСервере
Функция СохранитьВДокументНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТабДок = ОбработкаОбъект.ТабДок;
	ВыбДокумент = ОбработкаОбъект.ВыбДокПроверки;
	
	Если не ЗначениеЗаполнено(ВыбДокумент) тогда
		//создаем
		ТекДокПроверки = Документы.РезультатыПроверкиСквознойЛист.СоздатьДокумент();
		
	иначе
		ТекДокПроверки = ВыбДокумент.ПолучитьОбъект();
		ТекДокПроверки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		ТекДокПроверки.Результаты.Очистить();
	КонецЕсли;
	
	ТекДокПроверки.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	ТекДокПроверки.Город = ОбработкаОбъект.Город;
	ТекДокПроверки.Подразделение = ОбработкаОбъект.Подразделение;
	ТекДокПроверки.Дата = ОбработкаОбъект.ДатаПроверки;
	Если ТекДокПроверки.Дата =НачалоДня(ТекущаяДата()) Тогда
		ТекДокПроверки.Дата = ТекущаяДата();
	КонецЕсли;
	ТекДокПроверки.Управляющий = ОбработкаОбъект.Управляющий;	
	ТекДокПроверки.РегионДиректор = ОбработкаОбъект.РД;
	ТекДокПроверки.НацДиректор = ОбработкаОбъект.НД;
	ТекДокПроверки.ВидКритериев = ОбработкаОбъект.ВидКритериев;
	ТекДокПроверки.КолвоБаллов = ТабДок.Область("R8C3").Значение;
	ТекДокПроверки.ПроцентСоответствия = Лев(ТабДок.Область("R9C3").Значение,Найти(ТабДок.Область("R9C3").Значение,"%")-2);
	
	ТекДокПроверки.КолвоБалловТовароведение = ТабДок.Область("R8C6").Значение;
	ТекДокПроверки.ПроцентСоответствияТовароведение = Лев(ТабДок.Область("R9C6").Значение,Найти(ТабДок.Область("R9C6").Значение,"%")-2);
	
	ТекДокПроверки.Записать(РежимЗаписиДокумента.Запись); //***
	
	Для НомСтр = 13 по ТабДок.ВысотаТаблицы цикл
		СсылкаНаЭлСпр = ТабДок.Область("R" + Строка(НомСтр) + "C2").Расшифровка;
		
		Если ЗначениеЗаполнено(СсылкаНаЭлСпр) тогда
			Если СсылкаНаЭлСпр.ЭтоГруппа тогда
				ПРодолжить;
			КонецЕсли;
			
			нов = ТекДокПроверки.Результаты.Добавить();
			нов.Критерий = СсылкаНаЭлСпр;
			//нов.Описание = нов.Критерий.Описание;
			
			Попытка
				нов.Кво = Число(ТабДок.Область("R" + Строка(НомСтр) + "C4").Текст);
			Исключение
				нов.Кво = 1;
			КонецПопытки;
			
			//Попытка
			//	нов.КвоСлужба = Число(ТабДок.Область("R" + Строка(НомСтр) + "C4").Текст);
			//Исключение
			//	нов.КвоСлужба = 1;
			//КонецПопытки;
			
			
			нов.КомментарииПроверяющего = ТабДок.Область("R" + Строка(НомСтр) + "C5").Текст;
			нов.СрокУстранения = ТабДок.Область("R" + Строка(НомСтр) + "C6").Значение;
			
		КонецЕсли;
	КонецЦикла;
	
	Попытка
		ТекДокПроверки.Записать(РежимЗаписиДокумента.Проведение);
		ОчиститьХранилище();
	Исключение
		Сообщить("Документ не проведен по причине " + ОписаниеОшибки());
	КонецПопытки;
	Возврат ТекДокПроверки.Ссылка;  
	
КонецФункции

&НаКлиенте
Процедура СохранитьВДокумент(Команда)	
	СохранитьНаКлиенте();	
КонецПроцедуры

&НаКлиенте
Функция СохранитьНаКлиенте()
	Таб = Объект.ТабДок;
	Если  Строка(Объект.Город)  = "" Тогда
		ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Город""",БиблиотекаКартинок.Информация32);
		Возврат Ложь;
	КонецЕсли;
	Если  Строка(Объект.Подразделение)  = "" Тогда
		ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""ProStor №""",БиблиотекаКартинок.Информация32);
		Возврат Ложь;
	КонецЕсли; 
	Если  Строка(Объект.Управляющий)  = "" Тогда
		ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Управляющий""",БиблиотекаКартинок.Информация32);
		Возврат Ложь;
	КонецЕсли;
	
	Если  Строка(Объект.РД)  = "" Тогда
		ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Региональный директор""",БиблиотекаКартинок.Информация32);
		Возврат Ложь;
	КонецЕсли;
	
	Если  Строка(Объект.НД)  = "" Тогда
		ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Национальный директор""",БиблиотекаКартинок.Информация32);
		Возврат Ложь;
	КонецЕсли;
	
	Если  Строка(Объект.ВидКритериев)  = "" Тогда
		ПоказатьОповещениеПользователя("Документ не сохранен",, "Не заполнено поле ""Вид критериев""",БиблиотекаКартинок.Информация32);
		Возврат Ложь;
	КонецЕсли;
	
	
	Для НомСтр = 13 по Таб.ВысотаТаблицы - 1 цикл
		СсылкаНаЭлСпр = Таб.Область("R" + Строка(НомСтр) + "C2").Расшифровка;
		Если ЗначениеЗаполнено(СсылкаНаЭлСпр) тогда
			Если Таб.Область("R" + Строка(НомСтр) + "C4").Значение <> 1 Тогда
				ТекстСообщения="";
				//НомерСтрокиВТаблице = Таб.Область("R" + Строка(НомСтр) + "C1").Значение;
				НомерСтрокиВТаблице = СокрЛП(Таб.Область("R" + Строка(НомСтр) + "C1").Текст);
				//Если НомерСтрокиВТаблице > 0 тогда
				Если НомерСтрокиВТаблице <> "" тогда
					Если Таб.Область("R" + Строка(НомСтр) + "C6").Значение = Дата(1,1,1) Тогда
						ТекстСообщения="В строке "+ НомерСтрокиВТаблице + " не указана дата устранения."+Символы.ПС+ "Документ не сохранен";
					КонецЕсли;
					
					Если Таб.Область("R" + Строка(НомСтр) + "C5").Значение = "" Тогда
						ТекстСообщения="В строке "+ НомерСтрокиВТаблице + " не указана задача по устранению."+Символы.ПС+ "Документ не сохранен";
					КонецЕсли;
				КонецЕсли;
				
				Если ТекстСообщения<>"" Тогда
					Сообщить(ТекстСообщения);
					Возврат Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Док = СохранитьВДокументНаСервере();
	Объект.ВыбДокПроверки = Док;
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ВыбДокПроверкиПриИзмененииНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТабДок = ОбработкаОбъект.ТабДок;
	
	ТабДок.Очистить();
	
	ВыбДокумент = ОбработкаОбъект.ВыбДокПроверки;
	
	Если не ЗначениеЗаполнено(ВыбДокумент) тогда
		НачальноеЗаполнениеТабДок();
		Возврат;
	КонецЕсли;
	
	ОбработкаОбъект.ДатаПроверки = ВыбДокумент.Дата;
	ОбработкаОбъект.Подразделение = ВыбДокумент.Подразделение;	      		
	ОбработкаОбъект.Город = ВыбДокумент.Город;			
	ОбработкаОбъект.Управляющий = ВыбДокумент.Управляющий;			
	ОбработкаОбъект.РД = ВыбДокумент.РегионДиректор;			
	ОбработкаОбъект.НД = ВыбДокумент.НацДиректор;
	ОбработкаОбъект.ВидКритериев = ВыбДокумент.ВидКритериев;
	
	Макет1 = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет1");
	
	Обл = Макет1.ПолучитьОбласть("Шапка");
	Обл.Параметры.ВидКритериев = ВыбДокумент.ВидКритериев;
	
	ТабДок.Вывести(Обл);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидКритериев", ОбработкаОбъект.ВидКритериев);
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РезультатыПроверкиСквознойЛистРезультаты.НомерСтроки КАК НомерСтроки,
	|	РезультатыПроверкиСквознойЛистРезультаты.Критерий КАК Ссылка,
	|	РезультатыПроверкиСквознойЛистРезультаты.Кво КАК Кво,
	|	РезультатыПроверкиСквознойЛистРезультаты.КвоСлужба КАК КвоСлужба,
	|	РезультатыПроверкиСквознойЛистРезультаты.КомментарииПроверяющего КАК КомментарииПроверяющего,
	|	РезультатыПроверкиСквознойЛистРезультаты.СрокУстранения КАК СрокУстранения,
	|	РезультатыПроверкиСквознойЛистРезультаты.ЗадачаУправляющему КАК ЗадачаУправляющему,
	|	РезультатыПроверкиСквознойЛистРезультаты.КомментарийИсполнителя КАК КомментарийИсполнителя,
	|	РезультатыПроверкиСквознойЛистРезультаты.ОтметкаОбИсполнении КАК ОтметкаОбИсполнении
	|ПОМЕСТИТЬ вт_документ
	|ИЗ
	|	Документ.РезультатыПроверкиСквознойЛист.Результаты КАК РезультатыПроверкиСквознойЛистРезультаты
	|ГДЕ
	|	РезультатыПроверкиСквознойЛистРезультаты.Ссылка = &ВыбДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КритерииПроверкиСквознойЛист.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втГруппы
	|ИЗ
	|	вт_документ КАК вт_документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КритерииПроверкиСквознойЛист КАК КритерииПроверкиСквознойЛист
	|		ПО вт_документ.Ссылка.Родитель = КритерииПроверкиСквознойЛист.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КритерииПроверкиСквознойЛист.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_документ.Ссылка КАК Ссылка,
	|	вт_документ.Кво КАК Кво,
	|	вт_документ.КомментарииПроверяющего КАК КомментарииПроверяющего,
	|	ВЫБОР
	|		КОГДА вт_документ.СрокУстранения = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &ПустДата
	|		ИНАЧЕ вт_документ.СрокУстранения
	|	КОНЕЦ КАК СрокУстранения,
	|	вт_документ.ОтметкаОбИсполнении КАК ОтметкаОбИсполнении,
	|	вт_документ.КомментарийИсполнителя КАК КомментарийИсполнителя,
	|	вт_документ.ЗадачаУправляющему КАК ЗадачаУправляющему,
	|	вт_документ.КвоСлужба КАК КвоСлужба
	|ПОМЕСТИТЬ втКритерииСГруппами
	|ИЗ
	|	вт_документ КАК вт_документ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втГруппы.Ссылка,
	|	0,
	|	"""",
	|	&ПустДата,
	|	ЛОЖЬ,
	|	"""",
	|	0,
	|	0
	|ИЗ
	|	втГруппы КАК втГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКритерииСГруппами.Ссылка КАК Ссылка,
	|	КритерииПроверкиСквознойЛист.Родитель КАК Родитель,
	|	КритерииПроверкиСквознойЛист.ЭтоГруппа КАК ЭтоГруппа,
	|	КритерииПроверкиСквознойЛист.ПолнНаименование КАК ПолнНаименование,
	|	ВЫБОР
	|		КОГДА КритерииПроверкиСквознойЛист.ЭтоГруппа
	|			ТОГДА 1000 * КритерииПроверкиСквознойЛист.НомерПоПорядку
	|		ИНАЧЕ 1000 * КритерииПроверкиСквознойЛист.Родитель.НомерПоПорядку + КритерииПроверкиСквознойЛист.НомерПоПорядку
	|	КОНЕЦ КАК ОбщийНомерПоПорядку,
	|	ВЫБОР
	|		КОГДА КритерииПроверкиСквознойЛист.ЭтоГруппа
	|			ТОГДА 1000 * КритерииПроверкиСквознойЛист.НомерПоПорядку
	|		ИНАЧЕ КритерииПроверкиСквознойЛист.НомерПоПорядку
	|	КОНЕЦ КАК НомерПоПорядку,
	|	ЕСТЬNULL(КритерииПроверкиСквознойЛист.Родитель.НомерПоПорядку, 0) КАК РодительНомерПоПорядку,
	|	втКритерииСГруппами.Кво КАК Кво,
	|	втКритерииСГруппами.КомментарииПроверяющего КАК КомментарииПроверяющего,
	|	втКритерииСГруппами.СрокУстранения КАК СрокУстранения,
	|	втКритерииСГруппами.ОтметкаОбИсполнении КАК ОтметкаОбИсполнении,
	|	втКритерииСГруппами.КомментарийИсполнителя КАК КомментарийИсполнителя,
	|	втКритерииСГруппами.ЗадачаУправляющему КАК ЗадачаУправляющему,
	|	КритерииПроверкиСквознойЛист.Описание КАК Описание,
	|	КритерииПроверкиСквознойЛист.ПризнакОтветственныеДепартаменты КАК ПризнакОтветственныеДепартаменты,
	|	втКритерииСГруппами.КвоСлужба КАК КвоСлужба,
	|	КритерииПроверкиСквознойЛист.Вес КАК Вес
	|ИЗ
	|	втКритерииСГруппами КАК втКритерииСГруппами
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КритерииПроверкиСквознойЛист КАК КритерииПроверкиСквознойЛист
	|		ПО втКритерииСГруппами.Ссылка = КритерииПроверкиСквознойЛист.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбщийНомерПоПорядку";
	
	Запрос.УстановитьПараметр("ВыбДокумент", ВыбДокумент);
	Запрос.УстановитьПараметр("ПустДата", Дата(2010,1,1));
	
	
	тз = Запрос.Выполнить().Выгрузить();
	//тз.Сортировать("РодительРодительНомерПоПорядку, РодительНомерПоПорядку, НомерПоПорядку");
	
	
	ОбщийВесКритериев = 0;
	ОбщийВесКритериевТовароведение = 0;
	
	Нпп = 0;
	Для Каждого стр из тз цикл
		Если стр.ЭтоГруппа тогда
			//Если ЗначениеЗаполнено(стр.Родитель) тогда  // подгруппа
			Обл = Макет1.ПолучитьОбласть("Группа");
			Обл.Параметры.СтрГруппа = стр.ПолнНаименование;
			Обл.Параметры.Родитель = стр.Родитель;   // расшифровка в поле Нпп
			Обл.Параметры.ТекКритерий = стр.Ссылка;
			
			Обл.Параметры.БалГруппа = 0;
			//Обл.Параметры.БалГруппаСлужба = 0;
			
			ТабДок.Вывести(Обл);
			
			//иначе  // раздел
			//Обл = Макет1.ПолучитьОбласть("Раздел");
			//Обл.Параметры.СтрРаздел = стр.ПолнНаименование;
			//Обл.Параметры.Родитель = "Сам";
			//Обл.Параметры.БалРаздел = 0;
			//ТабДок.Вывести(Обл);
			
			//КонецЕсли;
			
		иначе // строка
			
			Нпп = Нпп + 1;
			Обл = Макет1.ПолучитьОбласть("Строка");
			Обл.Параметры.Нпп = стр.НомерПоПорядку;//Нпп;
			Обл.Параметры.СтрНаим = стр.ПолнНаименование;
			//Обл.Параметры.СтрОписание = стр.Описание;
			
			Обл.Параметры.ТекКритерий = стр.Ссылка;
			Обл.Параметры.СтрБал = Число(Булево(стр.Кво));
			Обл.Параметры.СтрВес = Число(стр.Вес);
			Обл.Параметры.СтрКоммент = стр.КомментарииПроверяющего;	
			
			//--------------------------------------------------------------------------
			// Хилиоти Н.А. 30.01.2020  НАЧАЛО (
			// Комментарий: решение проблемы: Если Наименование и ПолноеНаименование у группы не соответствуют - не производятся расчеты по ней 
			
			Обл.Параметры.Родитель = стр.Родитель.ПолнНаименование;    //параметр расшифровки в поле НПП
			
			////////////// ЗАКОММЕНТИРОВАНО НАЧАЛО //////////////
			//Обл.Параметры.Родитель = стр.Родитель;    //параметр расшифровки в поле НПП
			////////////// ЗАКОММЕНТИРОВАНО КОНЕЦ  //////////////
			// Хилиоти Н.А. 30.01.2020  КОНЕЦ )
			//--------------------------------------------------------------------------
			
			Если стр.СрокУстранения <> Дата(2010,1,1) тогда
				Обл.Параметры.СтрДат = стр.СрокУстранения;
			КонецЕсли;
			ТабДок.Вывести(Обл);
			ТабДок.Область("R"+ТабДок.ВысотаТаблицы+"C3").Формат = "ЧН=0";
			ТабДок.Область("R"+ТабДок.ВысотаТаблицы+"C4").Формат = "ЧН=0";
			
			КолвоКритериевМаг = КолвоКритериевМаг + 1;
			ОбщийВесКритериев = ОбщийВесКритериев + стр.Вес;
			
			Если стр.Родитель.ПолнНаименование = РодительТовароведение тогда
				ОбщийВесКритериевТовароведение = ОбщийВесКритериевТовароведение + стр.Вес;
			КонецЕсли;
			
			
			
		КонецЕсли;
	КонецЦикла;
	ТабДок.ФиксацияСверху = 12;
	ОблПусто = Макет1.ПолучитьОбласть("Пусто");
	ТабДок.Вывести(ОблПусто);
	ПроверкаПравРедактирования();
	//КолвоКритериевМаг = Нпп;
	ЗначениеВРеквизитФормы(ОбработкаОбъект,"Объект");
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбДокПроверкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗначениеОтбора = Новый Структура("Автор", ПользователиКлиентСервер.ТекущийПользователь());
	ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
	ОткрытьФорму("Документ.РезультатыПроверкиСквознойЛист.ФормаВыбора",ПараметрыВыбора,,,,, Новый ОписаниеОповещения("ВыбДокПроверкиНачалоВыбораЗавершение", ЭтотОбъект));	
КонецПроцедуры

&НаКлиенте
Процедура ВыбДокПроверкиНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Объект.ВыбДокПроверки = Результат;
		ВыбДокПроверкиПриИзмененииНаСервере();
		ПересчетСуммРазделов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблДокПриИзменении(Элемент)
	ПоместитьВХранилище(Элемент.ТекущаяОбласть.Низ);
	Если Элемент.ТекущаяОбласть.Лево = 4 Тогда
		Элемент.ТекущаяОбласть.Значение = Число(Булево(Элемент.ТекущаяОбласть.Значение));
		Элемент.ТекущаяОбласть.Формат = "ЧН=0";
		ПересчетСуммРазделовДляЯчейки(Элемент.ТекущаяОбласть.Верх,МеняемоеЗначение,Элемент.ТекущаяОбласть.Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблДокВыбор(Элемент, Область, СтандартнаяОбработка)
	Если Элемент.ТекущаяОбласть.Лево = 4 Тогда
		МеняемоеЗначение = Элемент.ТекущаяОбласть.Значение;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьШапкуПриИзменении(Элемент)
	Элементы.ВыбДокПроверки.Видимость = ПоказатьШапку;
	Элементы.ШапкаДокумента.Видимость = ПоказатьШапку;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если НЕ Закрывать Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект),"Все несохраненные данные будут удалены, сохранить документ?",РежимДиалогаВопрос.ДаНет,,,"ВНИМАНИЕ");
		Отказ = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если СохранитьНаКлиенте() Тогда
			Закрывать = Истина;
			ЭтаФорма.Закрыть();
		КонецЕсли;
	Иначе
		Закрывать = Истина;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Закрывать = Ложь;
	МеняемоеЗначение = 0;
	
	Если ЕстьДанныеВХранилище Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект), "Есть данные заполненные раннее. Восстановить их?   В случае отказа данные будут удалены",РежимДиалогаВопрос.ДаНет,,,"Внимание!!!");
	иначе
		ПересчетСуммРазделов();
	КонецЕсли;
	//ТаблДокПриИзменении(Элементы.ТаблДок);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВосстановитьИзХранилища();
		//ПересчетСуммРазделов();
	Иначе
		ОчиститьХранилище();
	КонецЕсли;
	ПересчетСуммРазделов();
	
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	ГородПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ГородПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Город) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","Город",Объект.Город);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УправляющийПриИзменении(Элемент)
	УправляющийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УправляющийПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Управляющий) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","Управляющий",Объект.Управляющий);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПодразделениеПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","Подразделение",Объект.Подразделение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РДПриИзменении(Элемент)
	РДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РДПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.РД) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","РД",Объект.РД);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НДПриИзменении(Элемент)
	НДПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура НДПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.НД) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","НД",Объект.НД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВидКритериевПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ВидКритериев) Тогда
		ХранилищеНастроекДанныхФорм.Сохранить("СквознойЛист","ВидКритериев",Объект.ВидКритериев);
		
		ПерезаполнитьКритерииВТабДок();
		
		Табл = РеквизитФормыВЗначение("Объект");
		Табл.ТабДок.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
		ЗначениеВРеквизитФормы(Табл,"Объект");
		
		ХранилищеНастроекДанныхФорм.Удалить("СквознойЛист", "ТЗзаполнения",ПользователиКлиентСервер.ТекущийПользователь());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКритериевПриИзменении(Элемент)
	ВидКритериевПриИзмененииНаСервере();
	
	ПересчетСуммРазделов();
	МеняемоеЗначение = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидКритериевНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры


