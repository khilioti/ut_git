
// СтандартныеПодсистемы

// Хранилище глобальных переменных.
//
// ПараметрыПриложения - Соответствие - хранилище переменных, где:
//   * Ключ - Строка - имя переменной в формате "ИмяБиблиотеки.ИмяПеременной";
//   * Значение - Произвольный - значение переменной.
//
// Инициализация (на примере СообщенияДляЖурналаРегистрации):
//   ИмяПараметра = "СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации";
//   Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
//     ПараметрыПриложения.Вставить(ИмяПараметра, Новый СписокЗначений);
//   КонецЕсли;
//  
// Использование (на примере СообщенияДляЖурналаРегистрации):
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"].Добавить(...);
//   ПараметрыПриложения["СтандартныеПодсистемы.СообщенияДляЖурналаРегистрации"] = ...;
Перем ПараметрыПриложения Экспорт;

// Конец СтандартныеПодсистемы


#Область ОбработчикиСобытий

Процедура ПередНачаломРаботыСистемы()
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередНачаломРаботыСистемы();
	// Конец СтандартныеПодсистемы
	
	#Если Клиент тогда
		Если не ПользователиСлужебныйВызовСервера.ПроверкаЗаполненияСоотвСотрудникаУТекПользователя() тогда
			Предупреждение("Для текущего пользователя не выставлен соотвествующий сотрудник!
			|Обратитесь к администратору.");
			
			ЗавершитьРаботуСистемы(ложь);

		КонецЕсли;
			
	#КонецЕсли
	
	
	НастройкаПанелей.ВыполнитьНастройкуПанелей();
	ОбновитьИнтерфейс();
	;
	
КонецПроцедуры

Процедура ПриНачалеРаботыСистемы()
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПриНачалеРаботыСистемы();
	// Конец СтандартныеПодсистемы
	//ОткрытьФорму("Обработка.СменаПароля.Форма");
	Если ПользователиСлужебныйВызовСервера.ВыводСменыПароля() Тогда
		 ОткрытьФорму("Обработка.СменаПароля.Форма");
	КонецЕсли;
	//Если РегламентныеЗадачиПоЗагрузкеДанных.МожноЗапускРегламентныхЗаданий() Тогда
	//	//РегламентныеЗадачиПоЗагрузкеДанных.ОбновлениеПользователей();
	//	ПодключитьОбработчикОжидания("НачалоРегламентныхЗаданий", 30);	
	//КонецЕсли;	 
КонецПроцедуры

//Процедура НачалоРегламентныхЗаданий() Экспорт
//	ВыполнитьОбработкуЗаданий();
//КонецПроцедуры

Процедура ПередЗавершениемРаботыСистемы(Отказ)
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыКлиент.ПередЗавершениемРаботыСистемы(Отказ);
	// Конец СтандартныеПодсистемы
	
КонецПроцедуры

#КонецОбласти