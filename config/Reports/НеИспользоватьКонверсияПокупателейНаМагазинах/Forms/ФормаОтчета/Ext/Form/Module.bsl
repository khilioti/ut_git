
&НаСервере
Процедура СформироватьОтчетНаСервере(ДатаНачала,ДатаОкончания,ВидОтчета,Магазин)
	ОбработкаОбъект = РеквизитФормыВЗначение("Отчет"); //ДанныеФормыВЗначение("Отчет");
	
	РезультатОтчета.Очистить();
	РезОтчета.Очистить();
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	ТаблицаДанныхРозницы = ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета);
	ТаблицаДанныхСчетчиков = ПолучитьТаблицуДанныхСчетчиков(ДатаНачала,ДатаОкончания,ВидОтчета,Магазин);
	
	Если ТаблицаДанныхРозницы.Количество()=0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось получить данные по чекам!!! Выполнение отчета невозможно!"; 
		СообщениеПользователю.Сообщить();
		возврат;
	КонецЕсли;
	
	Если ВидОтчета = 0 Тогда
		//ТаблицаДанныхУТ = ПолучитьТаблицуДанныхУТ(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета,ТаблицаДанныхРозницы); 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеРозницы.КодУТ КАК КодУТ,
		               |	ДанныеРозницы.Магазин,
		               |	ДанныеРозницы.Дата,
		               |	ДанныеРозницы.КвоШт,
		               |	ДанныеРозницы.КвоЧеков,
		               |	ДанныеРозницы.Сумма
		               |ПОМЕСТИТЬ ЧекиРозницы
		               |ИЗ
		               |	&ДанныеРозницы КАК ДанныеРозницы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСчетчиков.Магазин,
		               |	ДанныеСчетчиков.Дата,
		               |	ДанныеСчетчиков.КвоПосетителей
		               |ПОМЕСТИТЬ СчетчикиПосетителей
		               |ИЗ
		               |	&ДанныеСчетчиков КАК ДанныеСчетчиков
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Подразделения.Ссылка КАК Подразделение,
		               |	ЧекиРозницы.Дата,
		               |	ЧекиРозницы.КвоШт,
		               |	ЧекиРозницы.КвоЧеков,
		               |	ЧекиРозницы.Сумма,
		               |	ЕСТЬNULL(СчетчикиПосетителей.КвоПосетителей,0) КАК КвоПосетителей
		               |ПОМЕСТИТЬ ВсеДанные
		               |ИЗ
		               |	ЧекиРозницы КАК ЧекиРозницы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
		               |		ПО ЧекиРозницы.КодУТ = Подразделения.КодПодразделенияУТ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ СчетчикиПосетителей КАК СчетчикиПосетителей
		               |		ПО ЧекиРозницы.Магазин = СчетчикиПосетителей.Магазин
		               |			И ЧекиРозницы.Дата = СчетчикиПосетителей.Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата,
					   |	ВЫБОР
					   |		КОГДА ВсеДанные.КвоЧеков >= ВсеДанные.КвоПосетителей
					   |			ТОГДА 0
					   |		ИНАЧЕ ВсеДанные.КвоЧеков
					   |	КОНЕЦ КАК КвоЧеков,
		               |	ВсеДанные.КвоШт,
		               |	ВсеДанные.Сумма,
					   |	ВЫБОР
					   |		КОГДА ВсеДанные.КвоЧеков >= ВсеДанные.КвоПосетителей
					   |			ТОГДА 0
					   |		ИНАЧЕ ВсеДанные.КвоПосетителей
					   |	КОНЕЦ КАК КвоПосетителей
		               |ИЗ
		               |	ВсеДанные КАК ВсеДанные"    ;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеРозницы.КодУТ КАК КодУТ,
		               |	ДанныеРозницы.Магазин,
		               |	ДанныеРозницы.Дата,
		               |	ДанныеРозницы.КвоЧеков,
		               |	ДанныеРозницы.КвоШт,
		               |	ДанныеРозницы.Сумма,
		               |	ДанныеРозницы.Час
		               |ПОМЕСТИТЬ ЧекиРозницы
		               |ИЗ
		               |	&ДанныеРозницы КАК ДанныеРозницы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСчетчиков.Магазин,
		               |	ДанныеСчетчиков.Дата,
		               |	ДанныеСчетчиков.Час,
		               |	ДанныеСчетчиков.КвоПосетителей
		               |ПОМЕСТИТЬ СчетчикиПосетителей
		               |ИЗ
		               |	&ДанныеСчетчиков КАК ДанныеСчетчиков
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Подразделения.Ссылка КАК Подразделение,
		               |	ЧекиРозницы.Дата,
		               |	ЧекиРозницы.Час,
		               |	ЧекиРозницы.КвоЧеков,
		               |	ЧекиРозницы.КвоШт,
		               |	ЧекиРозницы.Сумма,
		               |	СчетчикиПосетителей.КвоПосетителей
		               |ПОМЕСТИТЬ ВсеДанные
		               |ИЗ
		               |	ЧекиРозницы КАК ЧекиРозницы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
		               |		ПО ЧекиРозницы.КодУТ = Подразделения.КодПодразделенияУТ
		               |		ЛЕВОЕ СОЕДИНЕНИЕ СчетчикиПосетителей КАК СчетчикиПосетителей
		               |		ПО ЧекиРозницы.Магазин = СчетчикиПосетителей.Магазин
		               |			И ЧекиРозницы.Дата = СчетчикиПосетителей.Дата
		               |			И ЧекиРозницы.Час = СчетчикиПосетителей.Час
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата,
		               |	СУММА(ВсеДанные.КвоЧеков) КАК КвоЧеков,
		               |	СУММА(ВсеДанные.КвоПосетителей) КАК КвоПосетителей
		               |ПОМЕСТИТЬ ГруппПоДате
		               |ИЗ
		               |	ВсеДанные КАК ВсеДанные
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ГруппПоДате.Подразделение,
		               |	ГруппПоДате.Дата,
		               |	ВЫБОР
		               |		КОГДА ГруппПоДате.КвоЧеков >= ГруппПоДате.КвоПосетителей
		               |			ТОГДА 0
		               |		ИНАЧЕ ГруппПоДате.КвоПосетителей
		               |	КОНЕЦ КАК КвоПосетителейЗаДень
		               |ПОМЕСТИТЬ КорректирПосетителей
		               |ИЗ
		               |	ГруппПоДате КАК ГруппПоДате
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата,
		               |	ВсеДанные.Час,
		               |	ВсеДанные.КвоЧеков,
		               |	ВсеДанные.КвоШт,
		               |	ВсеДанные.Сумма,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(КорректирПосетителей.КвоПосетителейЗаДень, 0) = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ВсеДанные.КвоПосетителей
		               |	КОНЕЦ КАК КвоПосетителей
		               |ИЗ
		               |	ВсеДанные КАК ВсеДанные
		               |		ЛЕВОЕ СОЕДИНЕНИЕ КорректирПосетителей КАК КорректирПосетителей
		               |		ПО ВсеДанные.Подразделение = КорректирПосетителей.Подразделение
		               |			И ВсеДанные.Дата = КорректирПосетителей.Дата"    ;
	КонецЕсли; 
	Запрос.УстановитьПараметр("ДанныеРозницы",ТаблицаДанныхРозницы);				   
	Запрос.УстановитьПараметр("ДанныеСчетчиков",ТаблицаДанныхСчетчиков);				   
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();				   
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетКонверсияПокупателей");   //СхемаКомпоновкиДанных;   	
	
	Если ВидОтчета = 0 Тогда	
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезультатОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		
		// Диаграмма по дням конверсия
		Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[3].Настройки;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Иначе
		Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[1].Настройки;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезультатОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
				
		// Диаграмма по чекам
		Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[2].Настройки;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	Если ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) И ЗначениеЗаполнено(ПериодОтчета.ДатаОкончания) Тогда
		//ЭтаФорма.Элементы.ДиаграммаПоЧекам.Видимость = ВидОтчета;
		СформироватьОтчетНаСервере(ПериодОтчета.ДатаНачала,ПериодОтчета.ДатаОкончания,ВидОтчета,Магазин);
	Иначе
		Сообщить("Не заполнены параметры!!! Выполнение отчета невозможно!!!");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета)

	РезТаблица = Новый ТаблицаЗначений;
	СоединениеРозница = Новый COMОбъект("V83.COMConnector");
	ИмяСервера = "cl-as-03";
	ИмяБазы = "roznica";
	ПользБазы  = "Почтальон";
	ПарольБазы = "zaq123";   
	//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
	СоединениеРозница.PoolTimeout = 60;
	MaxConnections = 10 ;
	PoolCapacity = 10;
	Попытка  
		Розница = СоединениеРозница.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
		//Розница = СоединениеРозница.Connect(СтрокаПодключения);
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	КонецПопытки;
	
	СпискоДоступныхПодразделений = ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин);	
	Если СпискоДоступныхПодразделений = Неопределено Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось определить вашу должность в компании.Выполнение отчета невозможно!!!"; 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	Иначе
		МассивРозницы = Розница.NewObject("Массив");
		Для каждого ЭлМассива Из СпискоДоступныхПодразделений Цикл
			МассивРозницы.Добавить(ЭлМассива);
		КонецЦикла;	
	КонецЕсли;
	
	ЗапросРозница = Розница.NewObject("Запрос");
	ЗапросРозница.УстановитьПараметр("НачалоПериода",ДатаНачала);
	ЗапросРозница.УстановитьПараметр("КонецПериода",ДатаОкончания); 
	ЗапросРозница.УстановитьПараметр("ДоступныеПодразделения",МассивРозницы); // И Подразделение.НомерМагазина = 566
	
	Резтаблица.Колонки.Добавить("КодУТ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(5)));
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КвоЧеков", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("КвоШт", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Если ВидОтчета = 0 Тогда //По дням
		ЗапросРозница.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПродажиОбороты.Подразделение.Код КАК КодУТ,
		|	ПродажиОбороты.Подразделение.НомерМагазина КАК Магазин,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Дата,
		|	ПродажиОбороты.Регистратор.КассаККМ КАК КассаККМ,
		|	ПродажиОбороты.Регистратор.НомерЧекаККМ КАК НомерЧекаККМ,
		|	СУММА(ПродажиОбороты.КоличествоОборот) КАК КвоШт,
		|	СУММА(ПродажиОбороты.СуммаОборот) КАК Сумма
		|ПОМЕСТИТЬ ВсеЧеки
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Продажа)
		|				И Подразделение.Код В (&ДоступныеПодразделения)) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Подразделение.Код,
		|	ПродажиОбороты.Подразделение.НомерМагазина,
		|	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ),
		|	ПродажиОбороты.Регистратор.НомерЧекаККМ,
		|	ПродажиОбороты.Регистратор.КассаККМ,
		|	ПродажиОбороты.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеЧеки.КодУТ,
		|	ВсеЧеки.Магазин,
		|	ВсеЧеки.Дата,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВсеЧеки.НомерЧекаККМ) КАК КвоЧеков,
		|	СУММА(ВсеЧеки.КвоШт) КАК КвоШт,
		|	СУММА(ВсеЧеки.Сумма) КАК Сумма
		|ИЗ
		|	ВсеЧеки КАК ВсеЧеки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеЧеки.КодУТ,
		|	ВсеЧеки.Магазин,
		|	ВсеЧеки.Дата";		
	Иначе //по часам
		Резтаблица.Колонки.Добавить("Час", Новый ОписаниеТипов("Число"));
			ЗапросРозница.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПродажиОбороты.Подразделение.Код КАК КодУТ,
			|	ПродажиОбороты.Подразделение.НомерМагазина КАК Магазин,
			|	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Дата,
			|	ЧАС(ПродажиОбороты.Период) КАК Час,
			|	ПродажиОбороты.Регистратор.НомерЧекаККМ КАК НомерЧекаККМ,
			|	ПродажиОбороты.Регистратор.КассаККМ КАК КассаККМ,
			|	ПродажиОбороты.КоличествоОборот КАК КвоШт,
			|	ПродажиОбороты.СуммаОборот КАК Сумма
			|ПОМЕСТИТЬ ВсеЧеки
			|ИЗ
			|	РегистрНакопления.Продажи.Обороты(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			Регистратор,
			|			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Продажа)
			|				И Подразделение.Код В (&ДоступныеПодразделения)) КАК ПродажиОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВсеЧеки.КодУТ,
			|	ВсеЧеки.Магазин,
			|	ВсеЧеки.Дата,
			|	ВсеЧеки.Час,
			|	СУММА(ВсеЧеки.КвоШт) КАК КвоШт,
			|	СУММА(ВсеЧеки.Сумма) КАК Сумма,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВсеЧеки.НомерЧекаККМ) КАК КвоЧеков
			|
			|ИЗ
			|	ВсеЧеки КАК ВсеЧеки
			|
			|СГРУППИРОВАТЬ ПО
			|	ВсеЧеки.КодУТ,
			|	ВсеЧеки.Магазин,
			|	ВсеЧеки.Дата,
			|	ВсеЧеки.Час";		
		КонецЕсли;

	Выборка = ЗапросРозница.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = РезТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
	КонецЦикла;	
	
	СоединениеРозница = "";
	Соединение = "";
	
	возврат РезТаблица;
	
КонецФункции	

&НаСервере
Функция ПолучитьТаблицуДанныхСчетчиков(ДатаНачала,ДатаОкончания,ВидОтчета,Магазин)
	
	РезТаблица = Новый ТаблицаЗначений;
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КвоПосетителей", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Час", Новый ОписаниеТипов("Число"));
	
	ИмяСервера              = "cl-http-01";
	ИмяБазы                 = "regsys";
	ИмяПользователяSQL      = "svc_bi";
	ПарольПользователяSQL   = "Svc2018";
	
	СтрокаПодключения = "Driver={MySQL ODBC 5.3 ANSI Driver};Server="+ИмяСервера+";Port=3306;DataBase="+ИмяБазы+";Uid="+ИмяПользователяSQL+";Pwd="+ПарольПользователяSQL;	
	Попытка
		БазаСчетчиков = Новый COMОбъект("ADODB.Connection");
		БазаСчетчиков.ConnectionString = СтрокаПодключения;
		БазаСчетчиков.ConnectionTimeOut = 15;
		БазаСчетчиков.CommandTimeout = 600 ;
		БазаСчетчиков.Open();   		
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		БазаСчетчиков = неопределено;
		Возврат РезТаблица;
	КонецПопытки;
	
	СтрокаНачалоПериода = "'"+Формат(ДатаНачала,"ДФ=yyyy-MM-dd")+"'";
	СтрокаКонецПериода = "'"+Формат(ДатаОкончания,"ДФ=yyyy-MM-dd")+"'";  // and stat.id_counter = '595'  
	Если ЗначениеЗаполнено(Магазин) Тогда 
		НомерМагазина = СокрЛП(Сред(Магазин.Наименование,9,4));
		СтрокаМагазина =  " and groups.name_group like '"+НомерМагазина+"%'";     
	Иначе
		НомерМагазина = ""; 
		СтрокаМагазина = "";
	КонецЕсли;
	
	Если ВидОтчета = 0 Тогда // по дням	
		ТекстЗапроса = "
		|	select SUM(stat.count_stat),groups.name_group,stat.date_stat,COUNT(distinct zone.type_zone) from stat 
		|	inner join zonec on stat.id_counter = zonec.id_counter 
		|	inner join zone on zone.id_zone = zonec.id_zone
		|	inner join counter on stat.id_counter = counter.id_counter and stat.date_stat between :НачалоПериода AND :КонецПериода and stat.time_stat between 7 and 23
		|	inner join store on store.id_store = counter.id_store 
		|	inner join groups on store.id_group = groups.id_group :СтрокаМагазина
		|	group by groups.name_group,stat.date_stat";
	Иначе
		
		ТекстЗапроса = "
		|	select SUM(stat.count_stat),groups.name_group,stat.date_stat,COUNT(distinct zone.type_zone),stat.time_stat from stat 
		|	inner join zonec on stat.id_counter = zonec.id_counter 
		|	inner join zone on zone.id_zone = zonec.id_zone
		|	inner join counter on stat.id_counter = counter.id_counter and stat.date_stat between :НачалоПериода AND :КонецПериода and stat.time_stat between 7 and 23
		|	inner join store on store.id_store = counter.id_store 
		|	inner join groups on store.id_group = groups.id_group :СтрокаМагазина
		|	group by groups.name_group,stat.date_stat,stat.time_stat";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,":НачалоПериода",СтрокаНачалоПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,":КонецПериода",СтрокаКонецПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,":СтрокаМагазина",СтрокаМагазина);
	
	//Выборка = Новый COMОбъект("ADODB.RecordSet");
	//Выборка.Open(ТекстЗапроса,БазаСчетчиков,3,1);
	
	Выборка = Новый COMОбъект("ADODB.RecordSet"); 
    Выборка.ActiveConnection = БазаСчетчиков;

    Выборка.Open(ТекстЗапроса);
	
	Если ВидОтчета = 0 Тогда
		Пока не Выборка.Eof() Цикл
			//ОбработкаПрерыванияПользователя();
			Попытка
				ДатаСчетчиков 			= Выборка.Fields(2).Value;
				НомерМагазина       	= ПолучитьНомерМагазина(Выборка.Fields(1).Value);
				КвоПосетителей          = Выборка.Fields(0).Value/Выборка.Fields(3).Value;
			Исключение 
				Выборка.MoveNext();
				продолжить;	
			КонецПопытки;	
			
			Если НомерМагазина = 0 Тогда
				Выборка.MoveNext();			
				продолжить;
			КонецЕсли;	
			
			НоваяСтрока = РезТаблица.Добавить();
			
			НоваяСтрока.Дата 			= ДатаСчетчиков;
			НоваяСтрока.Магазин 		= НомерМагазина;
			НоваяСтрока.КвоПосетителей	= Окр(КвоПосетителей,0);
			Выборка.MoveNext();
		КонецЦикла;
	Иначе
		Пока не Выборка.Eof() Цикл
			//ОбработкаПрерыванияПользователя();
			Попытка
				ДатаСчетчиков 			= Выборка.Fields(2).Value;
				НомерМагазина       	= ПолучитьНомерМагазина(Выборка.Fields(1).Value);
				КвоПосетителей          = Выборка.Fields(0).Value/Выборка.Fields(3).Value;
			Исключение 
				Выборка.MoveNext();
				продолжить;	
			КонецПопытки;	
			
			Если НомерМагазина = 0 Тогда
				Выборка.MoveNext();			
				продолжить;
			КонецЕсли;	
			
			НоваяСтрока = РезТаблица.Добавить();
			
			НоваяСтрока.Дата 			= ДатаСчетчиков;
			НоваяСтрока.Магазин 		= НомерМагазина;
			НоваяСтрока.КвоПосетителей	= Выборка.Fields(0).Value;
			НоваяСтрока.Час				= Выборка.Fields(4).Value;
			Выборка.MoveNext();
		КонецЦикла;
	КонецЕсли;
	Выборка.Close();

    БазаСчетчиков.Close();
	
	БазаСчетчиков = Неопределено;
	РезТаблица.Свернуть("Магазин,Дата,Час","КвоПосетителей");
	
	возврат РезТаблица;
КонецФункции	

&НаСервере
Функция СформироватьДату(СтрокаДата)
	ЧастьГод = Лев(СтрокаДата,4);
	ЧастьМесяц = Сред(СтрокаДата,6,2);
	ЧастьДень = Прав(СтрокаДата,2);
	ДатаДень = ЧастьГод + ЧастьМесяц + ЧастьДень; 
	Попытка
		Возврат Дата(ДатаДень); 
	Исключение
		Возврат Неопределено;	
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция ПолучитьНомерМагазина(ИмяМагазина)
	
	НомерЗапятой = Найти(ИмяМагазина,",");
	Если НомерЗапятой <> 0 Тогда
		Попытка
			Возврат Число(СокрЛП(Лев(ИмяМагазина,НомерЗапятой-1)));
		Исключение
			возврат 0;
		КонецПопытки;	
	Иначе
		возврат 0;
	КонецЕсли;	
	
КонецФункции	

&НаСервере
Функция ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин)
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		СписокДоступныхПодразделений = Новый Массив;
		СписокДоступныхПодразделений.Добавить(Магазин.КодПодразделенияУТ);
		Возврат СписокДоступныхПодразделений;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") или РольДоступна("Директора") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Подразделения.КодПодразделенияУТ
		               |ИЗ
		               |	Справочник.Подразделения КАК Подразделения
		               |ГДЕ
		               |	НЕ Подразделения.ЭтоГруппа
		               |	И НЕ Подразделения.ПометкаУдаления" ;
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КодПодразделенияУТ");
	ИначеЕсли РольДоступна("РД") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Подразделения.КодПодразделенияУТ
		               |ИЗ
		               |	Справочник.Подразделения КАК Подразделения
		               |ГДЕ
		               |	НЕ Подразделения.ЭтоГруппа
		               |	И НЕ Подразделения.ПометкаУдаления
		               |	И Подразделения.НД = &ТекПользователь" ;
		Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
		ТЗПодразделений = Запрос.Выполнить().Выгрузить();
		Если ТЗПодразделений.Количество() > 0 Тогда
			Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это НД
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Подразделения.КодПодразделенияУТ
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	НЕ Подразделения.ЭтоГруппа
			|	И НЕ Подразделения.ПометкаУдаления
			|	И Подразделения.РД = &ТекПользователь" ;
			Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
			ТЗПодразделений = Запрос.Выполнить().Выгрузить();
			Если ТЗПодразделений.Количество() > 0 Тогда
				Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это РД
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли РольДоступна("УправляющиеМагазинами") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Подразделения.КодПодразделенияУТ
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	НЕ Подразделения.ЭтоГруппа
			|	И НЕ Подразделения.ПометкаУдаления
			|	И Подразделения.Управляющий = &ТекПользователь" ;
			Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
			ТЗПодразделений = Запрос.Выполнить().Выгрузить();
			Если ТЗПодразделений.Количество() > 0 Тогда
				Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это управляющий
			Иначе
				Возврат Неопределено;
			КонецЕсли;
	Иначе
			Возврат Неопределено;	
	КонецЕсли;	
	
КонецФункции	


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТекПользовательУправляющий() Тогда
		ЭтаФорма.Элементы.Магазин.Доступность = Ложь;
		Магазин = ОпределитьУправляющегоМагазина();
	Иначе
		ЭтаФорма.Элементы.Магазин.Доступность = Истина;
	КонецЕсли;
	ПериодОтчета.ДатаНачала = НачалоМесяца(ТекущаяДата());
	ПериодОтчета.ДатаОкончания = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Функция ОпределитьУправляющегоМагазина()
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Подразделения.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	НЕ Подразделения.ЭтоГруппа
	|	И НЕ Подразделения.ПометкаУдаления
	|	И Подразделения.Управляющий = &ТекПользователь" ;
	Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Магазин ;
	Иначе	
		Возврат Справочники.Подразделения.ПустаяСсылка();
	КонецЕсли;	
КонецФункции	

&НаСервере
Функция ТекПользовательУправляющий()
	
	Возврат РольДоступна("УправляющиеМагазинами") ;
	
КонецФункции	

&НаСервере
Функция ПолучитьТаблицуДанныхУТ(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета,ТаблицаДанныхРозницы)
	
	РезТаблица = Новый ТаблицаЗначений;
	Резтаблица.Колонки.Добавить("КодУТ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(5)));
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КвоЧеков", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Если ВидОтчета = 0 Тогда
		
		СоединениеУТ = Новый COMОбъект("V83.COMConnector");
		ИмяСервера = "cl-as-01";
		ИмяБазы = "office";
		ПользБазы  = "1CConnect";
		ПарольБазы = "zaq123";   
		//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
		СоединениеУТ.PoolTimeout = 60;
		MaxConnections = 10 ;
		PoolCapacity = 10;
		Попытка  
			УТ = СоединениеУТ.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
			//Розница = СоединениеРозница.Connect(СтрокаПодключения);
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки(); 
			СообщениеПользователю.Сообщить();
			СоединениеУТ = "";
			Соединение = "";
			Возврат РезТаблица;
		КонецПопытки;
		
		СпискоДоступныхПодразделений = ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин);	
		Если СпискоДоступныхПодразделений = Неопределено Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Не удалось определить вашу должность в компании.Выполнение отчета невозможно!!!"; 
			СообщениеПользователю.Сообщить();
			СоединениеРозница = "";
			Соединение = "";
			Возврат РезТаблица;
		Иначе
			МассивУТ = УТ.NewObject("Массив");
			Для каждого ЭлМассива Из СпискоДоступныхПодразделений Цикл
				МассивУТ.Добавить(ЭлМассива);
			КонецЦикла;	
		КонецЕсли;
		
		ЗапросУТ = УТ.NewObject("Запрос");
		НачалоПредыдущегоМесяца = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);  // Чтобы не грузить более ранние периоды. Чеки раньше должны быть выравнены с УТ
		ДваДняНазад = НачалоДня(ТекущаяДата()) - 86401; // Данные по чекам сегодня и вчера берем только из розницы
		
		ЗапросУТ.УстановитьПараметр("НачалоПериода",Макс(ДатаНачала,НачалоПредыдущегоМесяца));
		ЗапросУТ.УстановитьПараметр("КонецПериода",Мин(ДатаОкончания,ДваДняНазад)); 
		ЗапросУТ.УстановитьПараметр("ДоступныеПодразделения",МассивУТ); // И Подразделение.НомерМагазина = 566
		
		ЗапросУТ.Текст ="ВЫБРАТЬ
		|	ПОДСТРОКА(ОтчетОРозничныхПродажах.Подразделение.Наименование, 9, 4) КАК НомерМагазина,
		|	ОтчетОРозничныхПродажах.Подразделение.Код КАК КодУТ,
		|	НАЧАЛОПЕРИОДА(ОтчетОРозничныхПродажах.Дата, ДЕНЬ) КАК Дата,
		|	СУММА(ОтчетОРозничныхПродажах.СуммаДокумента) КАК СуммаДокумента,
		|	СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""1""
		|				ТОГДА 1000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""2""
		|				ТОГДА 2000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""3""
		|				ТОГДА 3000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""4""
		|				ТОГДА 4000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""5""
		|				ТОГДА 5000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""6""
		|				ТОГДА 6000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""7""
		|				ТОГДА 7000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""8""
		|				ТОГДА 8000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""9""
		|				ТОГДА 9000
		|		КОНЕЦ) + СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""1""
		|				ТОГДА 100
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""2""
		|				ТОГДА 200
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""3""
		|				ТОГДА 300
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""4""
		|				ТОГДА 400
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""5""
		|				ТОГДА 500
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""6""
		|				ТОГДА 600
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""7""
		|				ТОГДА 700
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""8""
		|				ТОГДА 800
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""9""
		|				ТОГДА 900
		|		КОНЕЦ) + СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""1""
		|				ТОГДА 10
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""2""
		|				ТОГДА 20
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""3""
		|				ТОГДА 30
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""4""
		|				ТОГДА 40
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""5""
		|				ТОГДА 50
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""6""
		|				ТОГДА 60
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""7""
		|				ТОГДА 70
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""8""
		|				ТОГДА 80
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""9""
		|				ТОГДА 90
		|		КОНЕЦ) + СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""1""
		|				ТОГДА 1
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""2""
		|				ТОГДА 2
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""3""
		|				ТОГДА 3
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""4""
		|				ТОГДА 4
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""5""
		|				ТОГДА 5
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""6""
		|				ТОГДА 6
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""7""
		|				ТОГДА 7
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""8""
		|				ТОГДА 8
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""9""
		|				ТОГДА 9
		|		КОНЕЦ) КАК КолвоЧеков
		|ПОМЕСТИТЬ ВсеПродажи
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|ГДЕ
		|   Подразделение.Код В (&ДоступныеПодразделения) 
		|	И ОтчетОРозничныхПродажах.Проведен
		|	И ОтчетОРозничныхПродажах.Комментарий ПОДОБНО
		|	И ОтчетОРозничныхПродажах.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтчетОРозничныхПродажах.Подразделение,
		|	ОтчетОРозничныхПродажах.Дата,
		|	НАЧАЛОПЕРИОДА(ОтчетОРозничныхПродажах.Дата, ДЕНЬ),
		|	ПОДСТРОКА(ОтчетОРозничныхПродажах.Подразделение.Наименование, 9, 4),
		|	ОтчетОРозничныхПродажах.Подразделение.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеПродажи.НомерМагазина,
		|	ВсеПродажи.КодУТ,
		|	ВсеПродажи.Дата,
		|	СУММА(ВсеПродажи.СуммаДокумента) КАК СуммаДокумента,
		|	СУММА(ВсеПродажи.КолвоЧеков) КАК КолвоЧеков
		|ИЗ
		|	ВсеПродажи КАК ВсеПродажи
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеПродажи.НомерМагазина,
		|	ВсеПродажи.КодУТ,
		|	ВсеПродажи.Дата";
		
		Выборка = ЗапросУТ.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрокаТаблицы = РезТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
			Попытка
				РезТаблица.НомерМагазина = Число(СокрЛП(Выборка.НомерМагазина));
			Исключение
				РезТаблица.НомерМагазина = 0;
			КонецПопытки;	
		КонецЦикла;	
		
		СоединениеУТ = "";
		Соединение = "";
	КонецЕсли;	
	возврат РезТаблица;
	
КонецФункции	

