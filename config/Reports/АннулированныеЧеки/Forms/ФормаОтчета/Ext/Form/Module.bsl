
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТекПользовательУправляющий() Тогда
		ЭтаФорма.Элементы.Магазин.Доступность = Ложь;
		ЭтаФорма.Элементы.Магазин.Доступность = Ложь;
		Магазин = ОпределитьУправляющегоМагазина();
	Иначе
		ЭтаФорма.Элементы.Магазин.Доступность = Истина;
	КонецЕсли;
	ПериодОтчета.ДатаНачала = НачалоМесяца(ТекущаяДата());
	ПериодОтчета.ДатаОкончания = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Функция ОпределитьУправляющегоМагазина()
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Подразделения.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	НЕ Подразделения.ЭтоГруппа
	|	И НЕ Подразделения.ПометкаУдаления
	|	И Подразделения.Управляющий = &ТекПользователь" ;
	Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Магазин ;
	Иначе	
		Возврат Справочники.Подразделения.ПустаяСсылка();
	КонецЕсли;	
КонецФункции	

&НаСервере
Функция ТекПользовательУправляющий()
	
	Возврат РольДоступна("УправляющиеМагазинами") ;
	
КонецФункции	

&НаСервере
Процедура СформироватьАннулированныеТоварыНаСервере(ДатаНачала,ДатаОкончания,Магазин)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Отчет"); //ДанныеФормыВЗначение("Отчет");
	
	РезультатАннулированныеТовары.Очистить();
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	//ДатаОкончания = ТекущаяДата();
	//ДатаНачала = НачалоМесяца(ДатаОкончания);
	ТаблицаДанныхРозницы = ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,Магазин);
	
	Если ТаблицаДанныхРозницы.Количество()=0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось получить данные по чекам!!! Выполнение отчета невозможно!"; 
		СообщениеПользователю.Сообщить();
		возврат;
	КонецЕсли;

	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетАннулированныеТовары");   //СхемаКомпоновкиДанных;   	
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанныхРозницы);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатАннулированныеТовары);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьАннулированныеТовары(Команда)
	
	Если ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) И ЗначениеЗаполнено(ПериодОтчета.ДатаОкончания) Тогда
		СформироватьАннулированныеТоварыНаСервере(ПериодОтчета.ДатаНачала,ПериодОтчета.ДатаОкончания,Магазин);
	Иначе
		Сообщить("Не заполнен период отчета!!! Выполнение отчета невозможно!!!");
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,Магазин)

	РезТаблица = Новый ТаблицаЗначений;
	СоединениеРозница = Новый COMОбъект("V83.COMConnector");
	ИмяСервера = "cl-as-03";
	ИмяБазы = "roznica";
	ПользБазы  = "Почтальон";
	ПарольБазы = "zaq123";   
	//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
	СоединениеРозница.PoolTimeout = 60;
	MaxConnections = 10 ;
	PoolCapacity = 10;
	Попытка  
		Розница = СоединениеРозница.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
		//Розница = СоединениеРозница.Connect(СтрокаПодключения);
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	КонецПопытки;
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	СпискоДоступныхПодразделений = ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин);	
	Если СпискоДоступныхПодразделений = Неопределено Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось определить вашу должность в компании.Выполнение отчета невозможно!!!"; 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	Иначе
		МассивРозницы = Розница.NewObject("Массив");
		Для каждого ЭлМассива Из СпискоДоступныхПодразделений Цикл
			МассивРозницы.Добавить(ЭлМассива);
		КонецЦикла;	
	КонецЕсли;

	ЗапросРозница = Розница.NewObject("Запрос");
	ЗапросРозница.УстановитьПараметр("НачалоПериода",ДатаНачала);
	ЗапросРозница.УстановитьПараметр("КонецПериода",ДатаОкончания); 
	ЗапросРозница.УстановитьПараметр("Подразделение",МассивРозницы); // И Подразделение.НомерМагазина = 566
	
	Резтаблица.Колонки.Добавить("ДатаОперации", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КассаККМ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(20)));
	Резтаблица.Колонки.Добавить("Кассир", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(20)));
	Резтаблица.Колонки.Добавить("НомерЧека", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	Резтаблица.Колонки.Добавить("НомерСтрокиЧека",Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(6)));
	Резтаблица.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(200)));
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(6)));
	
	Резтаблица.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	ЗапросРозница.Текст =  "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЧекККМТЧ_Товары.Ссылка.Дата,День) КАК ДатаОперации,
	|	ЧекККМТЧ_Товары.Ссылка.КассаККМ.Наименование КАК КассаККМ,
	|	ВЫБОР
	|		КОГДА ЧекККМТЧ_Товары.Ответственный = """"
	|			ТОГДА ЧекККМТЧ_Товары.Ссылка.Кассир
	|		ИНАЧЕ ЧекККМТЧ_Товары.Ответственный
	|	КОНЕЦ КАК Кассир,
	|	ЧекККМТЧ_Товары.Ссылка.НомерЧекаККМ КАК НомерЧека,
	|	ЧекККМТЧ_Товары.НомерСтроки КАК НомерСтрокиЧека,
	|	ЧекККМТЧ_Товары.Ссылка.Подразделение.НомерМагазина КАК Магазин,
	|	ЧекККМТЧ_Товары.Номенклатура.Код КАК Код,
	|	ЧекККМТЧ_Товары.Номенклатура.Наименование КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЧекККМТЧ_Товары.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЧекККМТЧ_Товары.Количество
	|	КОНЕЦ КАК Количество,
	|	ЧекККМТЧ_Товары.Цена КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.ТЧ_Товары КАК ЧекККМТЧ_Товары
	|ГДЕ
	|	ЧекККМТЧ_Товары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЧекККМТЧ_Товары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Аннуляция)
	|	И ЧекККМТЧ_Товары.Ссылка.Проведен
	|	И ЧекККМТЧ_Товары.Ссылка.СостояниеЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СостояниеЧекаККМ.Закрыт)
	|	И ЧекККМТЧ_Товары.Ссылка.Подразделение.Код В(&Подразделение)";	
	
	Выборка = ЗапросРозница.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = РезТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
	КонецЦикла;	
	
	СоединениеРозница = "";
	Соединение = "";
	
	возврат РезТаблица;
	
КонецФункции	

&НаСервере
Функция ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин)
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		СписокДоступныхПодразделений = Новый Массив;
		СписокДоступныхПодразделений.Добавить(Магазин.КодПодразделенияУТ);
		Возврат СписокДоступныхПодразделений;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") или РольДоступна("Директора") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Подразделения.КодПодразделенияУТ
		               |ИЗ
		               |	Справочник.Подразделения КАК Подразделения
		               |ГДЕ
		               |	НЕ Подразделения.ЭтоГруппа
		               |	И НЕ Подразделения.ПометкаУдаления" ;
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КодПодразделенияУТ");
	ИначеЕсли РольДоступна("РД") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Подразделения.КодПодразделенияУТ
		               |ИЗ
		               |	Справочник.Подразделения КАК Подразделения
		               |ГДЕ
		               |	НЕ Подразделения.ЭтоГруппа
		               |	И НЕ Подразделения.ПометкаУдаления
		               |	И Подразделения.НД = &ТекПользователь" ;
		Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
		ТЗПодразделений = Запрос.Выполнить().Выгрузить();
		Если ТЗПодразделений.Количество() > 0 Тогда
			Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это НД
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Подразделения.КодПодразделенияУТ
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	НЕ Подразделения.ЭтоГруппа
			|	И НЕ Подразделения.ПометкаУдаления
			|	И Подразделения.РД = &ТекПользователь" ;
			Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
			ТЗПодразделений = Запрос.Выполнить().Выгрузить();
			Если ТЗПодразделений.Количество() > 0 Тогда
				Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это РД
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли РольДоступна("УправляющиеМагазинами") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Подразделения.КодПодразделенияУТ
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	НЕ Подразделения.ЭтоГруппа
			|	И НЕ Подразделения.ПометкаУдаления
			|	И Подразделения.Управляющий = &ТекПользователь" ;
			Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
			ТЗПодразделений = Запрос.Выполнить().Выгрузить();
			Если ТЗПодразделений.Количество() > 0 Тогда
				Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это управляющий
			Иначе
				Возврат Неопределено;
			КонецЕсли;
	Иначе
			Возврат Неопределено;	
	КонецЕсли;	
	
КонецФункции	





