
&НаСервере
Процедура СформироватьОтчетНаСервере(ДатаНачала,ДатаОкончания,ВидОтчета,Магазин)
	ОбработкаОбъект = РеквизитФормыВЗначение("Отчет"); //ДанныеФормыВЗначение("Отчет");
	
	РезультатОтчета.Очистить();
	РезОтчета.Очистить();
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	ТаблицаДанныхРозницы = ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета);
	ТаблицаДанныхСчетчиков = ПолучитьТаблицуДанныхСчетчиков(ДатаНачала,ДатаОкончания,ВидОтчета,Магазин);
	
	Если ТаблицаДанныхРозницы.Количество()=0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось получить данные по чекам!!! Выполнение отчета невозможно!"; 
		СообщениеПользователю.Сообщить();
		возврат;
	КонецЕсли;
	
	Если ВидОтчета = 0 Тогда
		//ТаблицаДанныхУТ = ПолучитьТаблицуДанныхУТ(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета,ТаблицаДанныхРозницы); 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеРозницы.КодУТ КАК КодУТ,
		               |	ДанныеРозницы.Магазин,
		               |	ДанныеРозницы.Дата,
		               |	ДанныеРозницы.КвоШт,
		               |	ДанныеРозницы.КвоЧеков,
		               |	ДанныеРозницы.Сумма,
		               |	ДанныеРозницы.СуммаВозврата
		               |ПОМЕСТИТЬ ЧекиРозницы
		               |ИЗ
		               |	&ДанныеРозницы КАК ДанныеРозницы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСчетчиков.Магазин,
		               |	ДанныеСчетчиков.Дата,
		               |	ДанныеСчетчиков.КвоПосетителей
		               |ПОМЕСТИТЬ СчетчикиПосетителей
		               |ИЗ
		               |	&ДанныеСчетчиков КАК ДанныеСчетчиков
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Подразделения.Ссылка КАК Подразделение,
		               |	ЧекиРозницы.Дата,
		               |	ЧекиРозницы.КвоШт,
		               |	ЧекиРозницы.КвоЧеков,
		               |	ЧекиРозницы.Сумма,
		               |	ЧекиРозницы.СуммаВозврата,
		               |	ЕСТЬNULL(СчетчикиПосетителей.КвоПосетителей, 0) КАК КвоПосетителей
		               |ПОМЕСТИТЬ ВсеДанные
		               |ИЗ
		               |	ЧекиРозницы КАК ЧекиРозницы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
		               |		ПО ЧекиРозницы.КодУТ = Подразделения.КодПодразделенияУТ
		               |			И (НЕ Подразделения.ПометкаУдаления)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ СчетчикиПосетителей КАК СчетчикиПосетителей
		               |		ПО ЧекиРозницы.Магазин = СчетчикиПосетителей.Магазин
		               |			И ЧекиРозницы.Дата = СчетчикиПосетителей.Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата,
		               |	ВЫБОР
		               |		КОГДА ВсеДанные.КвоЧеков >= ВсеДанные.КвоПосетителей
		               |			ТОГДА 0
		               |		ИНАЧЕ ВсеДанные.КвоЧеков
		               |	КОНЕЦ КАК КвоЧеков,
		               |	ВсеДанные.КвоШт,
		               |	ВсеДанные.Сумма,
		               |	ВсеДанные.СуммаВозврата,
		               |	ВЫБОР
		               |		КОГДА ВсеДанные.КвоЧеков >= ВсеДанные.КвоПосетителей
		               |			ТОГДА 0
		               |		ИНАЧЕ ВсеДанные.КвоПосетителей
		               |	КОНЕЦ КАК КвоПосетителей
		               |ИЗ
		               |	ВсеДанные КАК ВсеДанные"    ;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДанныеРозницы.КодУТ КАК КодУТ,
		               |	ДанныеРозницы.Магазин,
		               |	ДанныеРозницы.Дата,
		               |	ДанныеРозницы.КвоЧеков,
		               |	ДанныеРозницы.КвоШт,
		               |	ДанныеРозницы.Сумма,
		               |	ДанныеРозницы.СуммаВозврата,
		               |	ДанныеРозницы.Час
		               |ПОМЕСТИТЬ ЧекиРозницы
		               |ИЗ
		               |	&ДанныеРозницы КАК ДанныеРозницы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеСчетчиков.Магазин,
		               |	ДанныеСчетчиков.Дата,
		               |	ДанныеСчетчиков.Час,
		               |	ДанныеСчетчиков.КвоПосетителей
		               |ПОМЕСТИТЬ СчетчикиПосетителей
		               |ИЗ
		               |	&ДанныеСчетчиков КАК ДанныеСчетчиков
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Подразделения.Ссылка КАК Подразделение,
		               |	ЧекиРозницы.Дата,
		               |	ЧекиРозницы.Час,
		               |	ЧекиРозницы.КвоЧеков,
		               |	ЧекиРозницы.КвоШт,
		               |	ЧекиРозницы.Сумма,
		               |	ЧекиРозницы.СуммаВозврата,
		               |	СчетчикиПосетителей.КвоПосетителей
		               |ПОМЕСТИТЬ ВсеДанные
		               |ИЗ
		               |	ЧекиРозницы КАК ЧекиРозницы
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
		               |		ПО ЧекиРозницы.КодУТ = Подразделения.КодПодразделенияУТ
		               |			И (НЕ Подразделения.ПометкаУдаления)
		               |		ЛЕВОЕ СОЕДИНЕНИЕ СчетчикиПосетителей КАК СчетчикиПосетителей
		               |		ПО ЧекиРозницы.Магазин = СчетчикиПосетителей.Магазин
		               |			И ЧекиРозницы.Дата = СчетчикиПосетителей.Дата
		               |			И ЧекиРозницы.Час = СчетчикиПосетителей.Час
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата,
		               |	СУММА(ВсеДанные.КвоЧеков) КАК КвоЧеков,
		               |	СУММА(ВсеДанные.КвоПосетителей) КАК КвоПосетителей
		               |ПОМЕСТИТЬ ГруппПоДате
		               |ИЗ
		               |	ВсеДанные КАК ВсеДанные
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ГруппПоДате.Подразделение,
		               |	ГруппПоДате.Дата,
		               |	ВЫБОР
		               |		КОГДА ГруппПоДате.КвоЧеков >= ГруппПоДате.КвоПосетителей
		               |			ТОГДА 0
		               |		ИНАЧЕ ГруппПоДате.КвоПосетителей
		               |	КОНЕЦ КАК КвоПосетителейЗаДень
		               |ПОМЕСТИТЬ КорректирПосетителей
		               |ИЗ
		               |	ГруппПоДате КАК ГруппПоДате
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВсеДанные.Подразделение,
		               |	ВсеДанные.Дата,
		               |	ВсеДанные.Час,
		               |	ВсеДанные.КвоЧеков,
		               |	ВсеДанные.КвоШт,
		               |	ВсеДанные.Сумма,
		               |	ВсеДанные.СуммаВозврата,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(КорректирПосетителей.КвоПосетителейЗаДень, 0) = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ВсеДанные.КвоПосетителей
		               |	КОНЕЦ КАК КвоПосетителей
		               |ИЗ
		               |	ВсеДанные КАК ВсеДанные
		               |		ЛЕВОЕ СОЕДИНЕНИЕ КорректирПосетителей КАК КорректирПосетителей
		               |		ПО ВсеДанные.Подразделение = КорректирПосетителей.Подразделение
		               |			И ВсеДанные.Дата = КорректирПосетителей.Дата"    ;
	КонецЕсли; 
	Запрос.УстановитьПараметр("ДанныеРозницы",ТаблицаДанныхРозницы);				   
	Запрос.УстановитьПараметр("ДанныеСчетчиков",ТаблицаДанныхСчетчиков);				   
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();				   
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетКонверсияПокупателей");   //СхемаКомпоновкиДанных;   	
	
	Если ВидОтчета = 0 Тогда	
		Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезультатОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		
		// Диаграмма по дням конверсия
		Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[3].Настройки;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	Иначе
		Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[1].Настройки;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезультатОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
				
		// Диаграмма по чекам
		Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[2].Настройки;
		ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
		
		//Формируем макет, с помощью компоновщика макета
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		//Передаем в макет компоновки схему, настройки и данные расшифровки
		МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
		
		ВнешниеНаборыДанных = Новый Структура;	
		ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
		
		//Выполним компоновку с помощью процессора компоновки
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
		
		//Выводим результат в табличный документ
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		ПроцессорВывода.УстановитьДокумент(РезОтчета);
		
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	Если ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) И ЗначениеЗаполнено(ПериодОтчета.ДатаОкончания) Тогда
		//ЭтаФорма.Элементы.ДиаграммаПоЧекам.Видимость = ВидОтчета;
		СформироватьОтчетНаСервере(ПериодОтчета.ДатаНачала,ПериодОтчета.ДатаОкончания,ВидОтчета,Магазин);
	Иначе
		Сообщить("Не заполнены параметры!!! Выполнение отчета невозможно!!!");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета,УчитыватьВозврат = Ложь)

	РезТаблица = Новый ТаблицаЗначений;
	СоединениеРозница = Новый COMОбъект("V83.COMConnector");
	ИмяСервера = "cl-as-03";
	ИмяБазы = "roznica";
	ПользБазы  = "Почтальон";
	ПарольБазы = "zaq123";   
	//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
	СоединениеРозница.PoolTimeout = 60;
	MaxConnections = 10 ;
	PoolCapacity = 10;
	Попытка  
		Розница = СоединениеРозница.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
		//Розница = СоединениеРозница.Connect(СтрокаПодключения);
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	КонецПопытки;
	
	СпискоДоступныхПодразделений = ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин);	
	Если СпискоДоступныхПодразделений = Неопределено Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось определить вашу должность в компании.Выполнение отчета невозможно!!!"; 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	Иначе
		МассивРозницы = Розница.NewObject("Массив");
		Для каждого ЭлМассива Из СпискоДоступныхПодразделений Цикл
			МассивРозницы.Добавить(ЭлМассива);
		КонецЦикла;	
	КонецЕсли;
	
	ЗапросРозница = Розница.NewObject("Запрос");
	ЗапросРозница.УстановитьПараметр("НачалоПериода",ДатаНачала);
	ЗапросРозница.УстановитьПараметр("КонецПериода",ДатаОкончания); 
	ЗапросРозница.УстановитьПараметр("ДоступныеПодразделения",МассивРозницы); // И Подразделение.НомерМагазина = 566
	
	Резтаблица.Колонки.Добавить("КодУТ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(5)));
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КвоЧеков", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("КвоШт", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("СуммаВозврата", Новый ОписаниеТипов("Число"));
	
	Если ВидОтчета = 0 Тогда //По дням
		ЗапросРозница.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		                      |	ПродажиОбороты.Подразделение.Код КАК КодУТ,
		                      |	ПродажиОбороты.Подразделение.НомерМагазина КАК Магазин,
		                      |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Дата,
		                      |	ПродажиОбороты.Регистратор.КассаККМ КАК КассаККМ,
		                      |	ПродажиОбороты.Регистратор.НомерЧекаККМ КАК НомерЧекаККМ,
		                      |	СУММА(ПродажиОбороты.КоличествоОборот) КАК КвоШт,
		                      |	СУММА(ПродажиОбороты.СуммаОборот) КАК Сумма
		                      |ПОМЕСТИТЬ ВсеЧеки
		                      |ИЗ
		                      |	РегистрНакопления.Продажи.Обороты(
		                      |			&НачалоПериода,
		                      |			&КонецПериода,
		                      |			Регистратор,
		                      |			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Продажа)
		                      |				И Подразделение.Код В (&ДоступныеПодразделения)) КАК ПродажиОбороты
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ПродажиОбороты.Подразделение.Код,
		                      |	ПродажиОбороты.Подразделение.НомерМагазина,
		                      |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ),
		                      |	ПродажиОбороты.Регистратор.НомерЧекаККМ,
		                      |	ПродажиОбороты.Регистратор.КассаККМ,
		                      |	ПродажиОбороты.Регистратор
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВсеЧеки.КодУТ,
		                      |	ВсеЧеки.Магазин,
		                      |	ВсеЧеки.КассаККМ,
		                      |	ВсеЧеки.Дата,
		                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВсеЧеки.НомерЧекаККМ) КАК КвоЧеков,
		                      |	СУММА(ВсеЧеки.КвоШт) КАК КвоШт,
		                      |	СУММА(ВсеЧеки.Сумма) КАК Сумма
		                      |ПОМЕСТИТЬ ГруппЧеки
		                      |ИЗ
		                      |	ВсеЧеки КАК ВсеЧеки
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ВсеЧеки.КодУТ,
		                      |	ВсеЧеки.Магазин,
		                      |	ВсеЧеки.Дата,
		                      |	ВсеЧеки.КассаККМ
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
		                      |	ПродажиОбороты.Подразделение.Код КАК КодУТ,
		                      |	ПродажиОбороты.Подразделение.НомерМагазина КАК Магазин,
		                      |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Дата,
		                      |	СУММА(ПродажиОбороты.СуммаОборот) КАК Сумма
		                      |ПОМЕСТИТЬ ВсеВозвраты
		                      |ИЗ
		                      |	РегистрНакопления.Продажи.Обороты(
		                      |			&НачалоПериода,
		                      |			&КонецПериода,
		                      |			День,
		                      |			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Возврат)
		                      |				И Подразделение.Код В (&ДоступныеПодразделения)) КАК ПродажиОбороты
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ПродажиОбороты.Подразделение.Код,
		                      |	ПродажиОбороты.Подразделение.НомерМагазина,
		                      |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ)
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ГруппЧеки.КодУТ,
		                      |	ГруппЧеки.Магазин,
		                      |	ГруппЧеки.Дата,
		                      |	СУММА(ГруппЧеки.КвоЧеков) КАК КвоЧеков,
		                      |	СУММА(ГруппЧеки.КвоШт) КАК КвоШт,
		                      |	СУММА(ГруппЧеки.Сумма) КАК Сумма
		                      |ПОМЕСТИТЬ ВсеДанные
		                      |ИЗ
		                      |	ГруппЧеки КАК ГруппЧеки
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ГруппЧеки.КодУТ,
		                      |	ГруппЧеки.Магазин,
		                      |	ГруппЧеки.Дата
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВсеДанные.КодУТ,
		                      |	ВсеДанные.Магазин,
		                      |	ВсеДанные.Дата,
		                      |	ВсеДанные.КвоЧеков,
		                      |	ВсеДанные.КвоШт,
		                      |	ВсеДанные.Сумма,
		                      |	ЕСТЬNULL(ВсеВозвраты.Сумма, 0) КАК СуммаВозврата
		                      |ИЗ
		                      |	ВсеДанные КАК ВсеДанные
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВсеВозвраты КАК ВсеВозвраты
		                      |		ПО ВсеДанные.КодУТ = ВсеВозвраты.КодУТ
		                      |			И ВсеДанные.Магазин = ВсеВозвраты.Магазин
		                      |			И ВсеДанные.Дата = ВсеВозвраты.Дата";		
	Иначе //по часам
		Резтаблица.Колонки.Добавить("Час", Новый ОписаниеТипов("Число"));
				ЗапросРозница.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
				                      |	ПродажиОбороты.Подразделение.Код КАК КодУТ,
				                      |	ПродажиОбороты.Подразделение.НомерМагазина КАК Магазин,
				                      |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Дата,
				                      |	ЧАС(ПродажиОбороты.Период) КАК Час,
				                      |	ПродажиОбороты.Регистратор.НомерЧекаККМ КАК НомерЧекаККМ,
				                      |	ПродажиОбороты.Регистратор.КассаККМ КАК КассаККМ,
				                      |	ПродажиОбороты.КоличествоОборот КАК КвоШт,
				                      |	ПродажиОбороты.СуммаОборот КАК Сумма
				                      |ПОМЕСТИТЬ ВсеЧеки
				                      |ИЗ
				                      |	РегистрНакопления.Продажи.Обороты(
				                      |			&НачалоПериода,
				                      |			&КонецПериода,
				                      |			Регистратор,
				                      |			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Продажа)
				                      |				И Подразделение.Код В (&ДоступныеПодразделения)) КАК ПродажиОбороты
				                      |;
				                      |
				                      |////////////////////////////////////////////////////////////////////////////////
				                      |ВЫБРАТЬ
				                      |	ВсеЧеки.КодУТ,
				                      |	ВсеЧеки.Магазин,
				                      |	ВсеЧеки.КассаККМ,
				                      |	ВсеЧеки.Дата,
				                      |	ВсеЧеки.Час,
				                      |	СУММА(ВсеЧеки.КвоШт) КАК КвоШт,
				                      |	СУММА(ВсеЧеки.Сумма) КАК Сумма,
				                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВсеЧеки.НомерЧекаККМ) КАК КвоЧеков
				                      |ПОМЕСТИТЬ ГруппЧеки
				                      |ИЗ
				                      |	ВсеЧеки КАК ВсеЧеки
				                      |
				                      |СГРУППИРОВАТЬ ПО
				                      |	ВсеЧеки.КодУТ,
				                      |	ВсеЧеки.Магазин,
				                      |	ВсеЧеки.Дата,
				                      |	ВсеЧеки.Час,
				                      |	ВсеЧеки.КассаККМ
				                      |;
				                      |
				                      |////////////////////////////////////////////////////////////////////////////////
				                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
				                      |	ПродажиОбороты.Подразделение.Код КАК КодУТ,
				                      |	ПродажиОбороты.Подразделение.НомерМагазина КАК Магазин,
				                      |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Дата,
				                      |	ЧАС(ПродажиОбороты.Период) КАК Час,
				                      |	СУММА(ПродажиОбороты.СуммаОборот) КАК Сумма
				                      |ПОМЕСТИТЬ Возвраты
				                      |ИЗ
				                      |	РегистрНакопления.Продажи.Обороты(
				                      |			&НачалоПериода,
				                      |			&КонецПериода,
				                      |			Регистратор,
				                      |			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Возврат)
				                      |				И Подразделение.Код В (&ДоступныеПодразделения)) КАК ПродажиОбороты
									  | СГРУППИРОВАТЬ ПО
									  |	ПродажиОбороты.Подразделение.Код,
									  |	ПродажиОбороты.Подразделение.НомерМагазина,
									  |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ),
									  |	ЧАС(ПродажиОбороты.Период)
				                      |;
				                      |
				                      |////////////////////////////////////////////////////////////////////////////////
				                      |ВЫБРАТЬ
				                      |	ГруппЧеки.КодУТ,
				                      |	ГруппЧеки.Магазин,
				                      |	ГруппЧеки.Дата,
				                      |	ГруппЧеки.Час,
				                      |	СУММА(ГруппЧеки.КвоШт) КАК КвоШт,
				                      |	СУММА(ГруппЧеки.Сумма) КАК Сумма,
				                      |	СУММА(ГруппЧеки.КвоЧеков) КАК КвоЧеков
				                      |ПОМЕСТИТЬ ВсеДанные
				                      |ИЗ
				                      |	ГруппЧеки КАК ГруппЧеки
				                      |
				                      |СГРУППИРОВАТЬ ПО
				                      |	ГруппЧеки.КодУТ,
				                      |	ГруппЧеки.Магазин,
				                      |	ГруппЧеки.Дата,
				                      |	ГруппЧеки.Час
				                      |;
				                      |
				                      |////////////////////////////////////////////////////////////////////////////////
				                      |ВЫБРАТЬ
				                      |	ВсеДанные.КодУТ,
				                      |	ВсеДанные.Магазин,
				                      |	ВсеДанные.Дата,
				                      |	ВсеДанные.Час,
				                      |	ВсеДанные.КвоШт,
				                      |	ВсеДанные.Сумма,
				                      |	ВсеДанные.КвоЧеков,
				                      |	ЕСТЬNULL(Возвраты.Сумма,0) КАК СуммаВозврата
				                      |ИЗ
				                      |	ВсеДанные КАК ВсеДанные
				                      |		ЛЕВОЕ СОЕДИНЕНИЕ Возвраты КАК Возвраты
				                      |		ПО ВсеДанные.КодУТ = Возвраты.КодУТ
				                      |			И ВсеДанные.Магазин = Возвраты.Магазин
				                      |			И ВсеДанные.Дата = Возвраты.Дата
				                      |			И ВсеДанные.Час = Возвраты.Час";		
		КонецЕсли;

	Выборка = ЗапросРозница.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = РезТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
	КонецЦикла;	
	
	СоединениеРозница = "";
	Соединение = "";
	
	возврат РезТаблица;
	
КонецФункции	

&НаСервере
Функция ПолучитьТаблицуДанныхСчетчиков(ДатаНачала,ДатаОкончания,ВидОтчета,Магазин)
	
	РезТаблица = Новый ТаблицаЗначений;
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КвоПосетителей", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Час", Новый ОписаниеТипов("Число"));
	
	ИмяСервера              = "cl-http-01";
	ИмяБазы                 = "regsys";
	ИмяПользователяSQL      = "svc_bi";
	ПарольПользователяSQL   = "Svc2018";
	
	СтрокаПодключения = "Driver={MySQL ODBC 5.3 ANSI Driver};Server="+ИмяСервера+";Port=3306;DataBase="+ИмяБазы+";Uid="+ИмяПользователяSQL+";Pwd="+ПарольПользователяSQL;	
	Попытка
		БазаСчетчиков = Новый COMОбъект("ADODB.Connection");
		БазаСчетчиков.ConnectionString = СтрокаПодключения;
		БазаСчетчиков.ConnectionTimeOut = 15;
		БазаСчетчиков.CommandTimeout = 600 ;
		БазаСчетчиков.Open();   		
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		БазаСчетчиков = неопределено;
		Возврат РезТаблица;
	КонецПопытки;
	
	СтрокаНачалоПериода = "'"+Формат(ДатаНачала,"ДФ=yyyy-MM-dd")+"'";
	СтрокаКонецПериода = "'"+Формат(ДатаОкончания,"ДФ=yyyy-MM-dd")+"'";  // and stat.id_counter = '595'  
	Если ЗначениеЗаполнено(Магазин) Тогда 
		НомерМагазина = СокрЛП(Сред(Магазин.Наименование,9,4));
		СтрокаМагазина =  " and groups.name_group like '"+НомерМагазина+"%'";     
	Иначе
		НомерМагазина = ""; 
		СтрокаМагазина = "";
	КонецЕсли;
	
	Если ВидОтчета = 0 Тогда // по дням	
		ТекстЗапроса = "
		|	select SUM(stat.count_stat),groups.name_group,stat.date_stat,COUNT(distinct zone.type_zone) from stat 
		|	inner join zonec on stat.id_counter = zonec.id_counter 
		|	inner join zone on zone.id_zone = zonec.id_zone
		|	inner join counter on stat.id_counter = counter.id_counter and stat.date_stat between :НачалоПериода AND :КонецПериода and stat.time_stat between 7 and 23
		|	inner join store on store.id_store = counter.id_store 
		|	inner join groups on store.id_group = groups.id_group :СтрокаМагазина
		|	group by groups.name_group,stat.date_stat";
	Иначе
		
		ТекстЗапроса = "
		|	select SUM(stat.count_stat),groups.name_group,stat.date_stat,COUNT(distinct zone.type_zone),stat.time_stat from stat 
		|	inner join zonec on stat.id_counter = zonec.id_counter 
		|	inner join zone on zone.id_zone = zonec.id_zone
		|	inner join counter on stat.id_counter = counter.id_counter and stat.date_stat between :НачалоПериода AND :КонецПериода and stat.time_stat between 7 and 23
		|	inner join store on store.id_store = counter.id_store 
		|	inner join groups on store.id_group = groups.id_group :СтрокаМагазина
		|	group by groups.name_group,stat.date_stat,stat.time_stat";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,":НачалоПериода",СтрокаНачалоПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,":КонецПериода",СтрокаКонецПериода);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,":СтрокаМагазина",СтрокаМагазина);
	
	//Выборка = Новый COMОбъект("ADODB.RecordSet");
	//Выборка.Open(ТекстЗапроса,БазаСчетчиков,3,1);
	
	Выборка = Новый COMОбъект("ADODB.RecordSet"); 
    Выборка.ActiveConnection = БазаСчетчиков;

    Выборка.Open(ТекстЗапроса);
	
	Если ВидОтчета = 0 Тогда
		Пока не Выборка.Eof() Цикл
			//ОбработкаПрерыванияПользователя();
			Попытка
				ДатаСчетчиков 			= Выборка.Fields(2).Value;
				НомерМагазина       	= ПолучитьНомерМагазина(Выборка.Fields(1).Value);
				КвоПосетителей          = Выборка.Fields(0).Value/Выборка.Fields(3).Value;
			Исключение 
				Выборка.MoveNext();
				продолжить;	
			КонецПопытки;	
			
			Если НомерМагазина = 0 Тогда
				Выборка.MoveNext();			
				продолжить;
			КонецЕсли;	
			
			НоваяСтрока = РезТаблица.Добавить();
			
			НоваяСтрока.Дата 			= ДатаСчетчиков;
			НоваяСтрока.Магазин 		= НомерМагазина;
			НоваяСтрока.КвоПосетителей	= Окр(КвоПосетителей,0);
			Выборка.MoveNext();
		КонецЦикла;
	Иначе
		Пока не Выборка.Eof() Цикл
			//ОбработкаПрерыванияПользователя();
			Попытка
				ДатаСчетчиков 			= Выборка.Fields(2).Value;
				НомерМагазина       	= ПолучитьНомерМагазина(Выборка.Fields(1).Value);
				КвоПосетителей          = Выборка.Fields(0).Value/Выборка.Fields(3).Value;
			Исключение 
				Выборка.MoveNext();
				продолжить;	
			КонецПопытки;	
			
			Если НомерМагазина = 0 Тогда
				Выборка.MoveNext();			
				продолжить;
			КонецЕсли;	
			
			НоваяСтрока = РезТаблица.Добавить();
			
			НоваяСтрока.Дата 			= ДатаСчетчиков;
			НоваяСтрока.Магазин 		= НомерМагазина;
			НоваяСтрока.КвоПосетителей	= Окр(КвоПосетителей,0);
			НоваяСтрока.Час				= Выборка.Fields(4).Value;
			Выборка.MoveNext();
		КонецЦикла;
	КонецЕсли;
	Выборка.Close();

    БазаСчетчиков.Close();
	
	БазаСчетчиков = Неопределено;
	РезТаблица.Свернуть("Магазин,Дата,Час","КвоПосетителей");
	//Сообщить("Итого посетителей="+Строка(РезТаблица.Итог("КвоПосетителей")));
	возврат РезТаблица;
КонецФункции	

&НаСервере
Функция СформироватьДату(СтрокаДата)
	ЧастьГод = Лев(СтрокаДата,4);
	ЧастьМесяц = Сред(СтрокаДата,6,2);
	ЧастьДень = Прав(СтрокаДата,2);
	ДатаДень = ЧастьГод + ЧастьМесяц + ЧастьДень; 
	Попытка
		Возврат Дата(ДатаДень); 
	Исключение
		Возврат Неопределено;	
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция ПолучитьНомерМагазина(ИмяМагазина)
	
	НомерЗапятой = Найти(ИмяМагазина,",");
	Если НомерЗапятой <> 0 Тогда
		Попытка
			Возврат Число(СокрЛП(Лев(ИмяМагазина,НомерЗапятой-1)));
		Исключение
			возврат 0;
		КонецПопытки;	
	Иначе
		возврат 0;
	КонецЕсли;	
	
КонецФункции	

&НаСервере
Функция ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин)
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		СписокДоступныхПодразделений = Новый Массив;
		СписокДоступныхПодразделений.Добавить(Магазин.КодПодразделенияУТ);
		Возврат СписокДоступныхПодразделений;
	КонецЕсли;
	
	Если РольДоступна("ПолныеПрава") или РольДоступна("Директора") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Подразделения.КодПодразделенияУТ
		               |ИЗ
		               |	Справочник.Подразделения КАК Подразделения
		               |ГДЕ
		               |	НЕ Подразделения.ЭтоГруппа
		               |	И НЕ Подразделения.ПометкаУдаления" ;
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КодПодразделенияУТ");
	ИначеЕсли РольДоступна("РД") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Подразделения.КодПодразделенияУТ
		               |ИЗ
		               |	Справочник.Подразделения КАК Подразделения
		               |ГДЕ
		               |	НЕ Подразделения.ЭтоГруппа
		               |	И НЕ Подразделения.ПометкаУдаления
		               |	И Подразделения.НД = &ТекПользователь" ;
		Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
		ТЗПодразделений = Запрос.Выполнить().Выгрузить();
		Если ТЗПодразделений.Количество() > 0 Тогда
			Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это НД
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Подразделения.КодПодразделенияУТ
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	НЕ Подразделения.ЭтоГруппа
			|	И НЕ Подразделения.ПометкаУдаления
			|	И Подразделения.РД = &ТекПользователь" ;
			Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
			ТЗПодразделений = Запрос.Выполнить().Выгрузить();
			Если ТЗПодразделений.Количество() > 0 Тогда
				Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это РД
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли РольДоступна("УправляющиеМагазинами") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	Подразделения.КодПодразделенияУТ
			|ИЗ
			|	Справочник.Подразделения КАК Подразделения
			|ГДЕ
			|	НЕ Подразделения.ЭтоГруппа
			|	И НЕ Подразделения.ПометкаУдаления
			|	И Подразделения.Управляющий = &ТекПользователь" ;
			Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
			ТЗПодразделений = Запрос.Выполнить().Выгрузить();
			Если ТЗПодразделений.Количество() > 0 Тогда
				Возврат ТЗПодразделений.ВыгрузитьКолонку("КодПодразделенияУТ"); // Это управляющий
			Иначе
				Возврат Неопределено;
			КонецЕсли;
	Иначе
			Возврат Неопределено;	
	КонецЕсли;	
	
КонецФункции	


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТекПользовательУправляющий() Тогда
		ЭтаФорма.Элементы.Магазин.Доступность = Ложь;
		ЭтаФорма.Элементы.МагазинДляКз.Доступность = Ложь;
		ЭтаФорма.Элементы.МагазинДляДинамики.Доступность = Ложь;
		Магазин = ОпределитьУправляющегоМагазина();
	Иначе
		ЭтаФорма.Элементы.Магазин.Доступность = Истина;
	КонецЕсли;
	ПериодОтчета.ДатаНачала = НачалоМесяца(ТекущаяДата());
	ПериодОтчета.ДатаОкончания = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Функция ОпределитьУправляющегоМагазина()
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Подразделения.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	НЕ Подразделения.ЭтоГруппа
	|	И НЕ Подразделения.ПометкаУдаления
	|	И Подразделения.Управляющий = &ТекПользователь" ;
	Запрос.УстановитьПараметр("ТекПользователь",ТекПользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Магазин ;
	Иначе	
		Возврат Справочники.Подразделения.ПустаяСсылка();
	КонецЕсли;	
КонецФункции	

&НаСервере
Функция ТекПользовательУправляющий()
	
	Возврат РольДоступна("УправляющиеМагазинами") ;
	
КонецФункции	

&НаСервере
Функция ПолучитьТаблицуДанныхУТ(ДатаНачала,ДатаОкончания,ТекПользователь,ВидОтчета,ТаблицаДанныхРозницы)
	
	РезТаблица = Новый ТаблицаЗначений;
	Резтаблица.Колонки.Добавить("КодУТ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(5)));
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("КвоЧеков", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Если ВидОтчета = 0 Тогда
		
		СоединениеУТ = Новый COMОбъект("V83.COMConnector");
		ИмяСервера = "cl-as-01";
		ИмяБазы = "office";
		ПользБазы  = "1CConnect";
		ПарольБазы = "zaq123";   
		//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
		СоединениеУТ.PoolTimeout = 60;
		MaxConnections = 10 ;
		PoolCapacity = 10;
		Попытка  
			УТ = СоединениеУТ.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
			//Розница = СоединениеРозница.Connect(СтрокаПодключения);
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки(); 
			СообщениеПользователю.Сообщить();
			СоединениеУТ = "";
			Соединение = "";
			Возврат РезТаблица;
		КонецПопытки;
		
		СпискоДоступныхПодразделений = ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин);	
		Если СпискоДоступныхПодразделений = Неопределено Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Не удалось определить вашу должность в компании.Выполнение отчета невозможно!!!"; 
			СообщениеПользователю.Сообщить();
			СоединениеРозница = "";
			Соединение = "";
			Возврат РезТаблица;
		Иначе
			МассивУТ = УТ.NewObject("Массив");
			Для каждого ЭлМассива Из СпискоДоступныхПодразделений Цикл
				МассивУТ.Добавить(ЭлМассива);
			КонецЦикла;	
		КонецЕсли;
		
		ЗапросУТ = УТ.NewObject("Запрос");
		НачалоПредыдущегоМесяца = НачалоМесяца(НачалоМесяца(ТекущаяДата())-1);  // Чтобы не грузить более ранние периоды. Чеки раньше должны быть выравнены с УТ
		ДваДняНазад = НачалоДня(ТекущаяДата()) - 86401; // Данные по чекам сегодня и вчера берем только из розницы
		
		ЗапросУТ.УстановитьПараметр("НачалоПериода",Макс(ДатаНачала,НачалоПредыдущегоМесяца));
		ЗапросУТ.УстановитьПараметр("КонецПериода",Мин(ДатаОкончания,ДваДняНазад)); 
		ЗапросУТ.УстановитьПараметр("ДоступныеПодразделения",МассивУТ); // И Подразделение.НомерМагазина = 566
		
		ЗапросУТ.Текст ="ВЫБРАТЬ
		|	ПОДСТРОКА(ОтчетОРозничныхПродажах.Подразделение.Наименование, 9, 4) КАК НомерМагазина,
		|	ОтчетОРозничныхПродажах.Подразделение.Код КАК КодУТ,
		|	НАЧАЛОПЕРИОДА(ОтчетОРозничныхПродажах.Дата, ДЕНЬ) КАК Дата,
		|	СУММА(ОтчетОРозничныхПродажах.СуммаДокумента) КАК СуммаДокумента,
		|	СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""1""
		|				ТОГДА 1000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""2""
		|				ТОГДА 2000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""3""
		|				ТОГДА 3000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""4""
		|				ТОГДА 4000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""5""
		|				ТОГДА 5000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""6""
		|				ТОГДА 6000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""7""
		|				ТОГДА 7000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""8""
		|				ТОГДА 8000
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 20, 1) = ""9""
		|				ТОГДА 9000
		|		КОНЕЦ) + СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""1""
		|				ТОГДА 100
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""2""
		|				ТОГДА 200
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""3""
		|				ТОГДА 300
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""4""
		|				ТОГДА 400
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""5""
		|				ТОГДА 500
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""6""
		|				ТОГДА 600
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""7""
		|				ТОГДА 700
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""8""
		|				ТОГДА 800
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 21, 1) = ""9""
		|				ТОГДА 900
		|		КОНЕЦ) + СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""1""
		|				ТОГДА 10
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""2""
		|				ТОГДА 20
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""3""
		|				ТОГДА 30
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""4""
		|				ТОГДА 40
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""5""
		|				ТОГДА 50
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""6""
		|				ТОГДА 60
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""7""
		|				ТОГДА 70
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""8""
		|				ТОГДА 80
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 22, 1) = ""9""
		|				ТОГДА 90
		|		КОНЕЦ) + СУММА(ВЫБОР
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""0""
		|				ТОГДА 0
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""1""
		|				ТОГДА 1
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""2""
		|				ТОГДА 2
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""3""
		|				ТОГДА 3
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""4""
		|				ТОГДА 4
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""5""
		|				ТОГДА 5
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""6""
		|				ТОГДА 6
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""7""
		|				ТОГДА 7
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""8""
		|				ТОГДА 8
		|			КОГДА ПОДСТРОКА(ОтчетОРозничныхПродажах.Комментарий, 23, 1) = ""9""
		|				ТОГДА 9
		|		КОНЕЦ) КАК КолвоЧеков
		|ПОМЕСТИТЬ ВсеПродажи
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|ГДЕ
		|   Подразделение.Код В (&ДоступныеПодразделения) 
		|	И ОтчетОРозничныхПродажах.Проведен
		|	И ОтчетОРозничныхПродажах.Комментарий ПОДОБНО
		|	И ОтчетОРозничныхПродажах.Дата МЕЖДУ &ДатаНач И &ДатаКон
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтчетОРозничныхПродажах.Подразделение,
		|	ОтчетОРозничныхПродажах.Дата,
		|	НАЧАЛОПЕРИОДА(ОтчетОРозничныхПродажах.Дата, ДЕНЬ),
		|	ПОДСТРОКА(ОтчетОРозничныхПродажах.Подразделение.Наименование, 9, 4),
		|	ОтчетОРозничныхПродажах.Подразделение.Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеПродажи.НомерМагазина,
		|	ВсеПродажи.КодУТ,
		|	ВсеПродажи.Дата,
		|	СУММА(ВсеПродажи.СуммаДокумента) КАК СуммаДокумента,
		|	СУММА(ВсеПродажи.КолвоЧеков) КАК КолвоЧеков
		|ИЗ
		|	ВсеПродажи КАК ВсеПродажи
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсеПродажи.НомерМагазина,
		|	ВсеПродажи.КодУТ,
		|	ВсеПродажи.Дата";
		
		Выборка = ЗапросУТ.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрокаТаблицы = РезТаблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
			Попытка
				РезТаблица.НомерМагазина = Число(СокрЛП(Выборка.НомерМагазина));
			Исключение
				РезТаблица.НомерМагазина = 0;
			КонецПопытки;	
		КонецЦикла;	
		
		СоединениеУТ = "";
		Соединение = "";
	КонецЕсли;	
	возврат РезТаблица;
	
КонецФункции	

&НаСервере
Процедура СформироватьПланФактКЗНаСервере(Магазин,ДатаПоследнегоОбновления)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Отчет"); //ДанныеФормыВЗначение("Отчет");
	
	РезультатОтчетаПоПланФактКз.Очистить();
	
	ДатаОтчета = ТекущаяДата();
	ЧасОтчета = Час(ДатаОтчета - 1800) ; // с запасом 30 мин
	
	ПрошлаяДата1 = НачалоДня(ДатаОтчета - 7*86400);
	ПрошлаяДата2 = НачалоДня(ДатаОтчета - 14*86400);
	ПрошлаяДата3 = НачалоДня(ДатаОтчета - 21*86400);
	
	//МассивСКЮБрендовДляКассы = ПолучитьСписокНоменклатурыБрендовКассы();
	МассивСКЮБрендовДляКассы = Новый Массив;
	
	ТаблицаДанныхПланПоКЗ = ПолучитьТаблицуДанныхПланПоКЗ(Магазин.КодПодразделенияУТ,ДатаОтчета,ПрошлаяДата1,ПрошлаяДата2,ПрошлаяДата3,МассивСКЮБрендовДляКассы);
	Если ТаблицаДанныхПланПоКЗ.Количество()=0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось получить данные по плану продаж!!! Выполнение отчета невозможно!"; 
		СообщениеПользователю.Сообщить();
		возврат;
	КонецЕсли;
	
	ТаблицаДанныхФактПоКЗ = ПолучитьТаблицуДанныхФактПоКЗ(Магазин.КодПодразделенияУТ,НачалоДня(ДатаОтчета),ЧасОтчета,ПрошлаяДата1,ПрошлаяДата2,ПрошлаяДата3,МассивСКЮБрендовДляКассы,ДатаПоследнегоОбновления);
	
	
	Если ТаблицаДанныхПланПоКЗ.Количество()=0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось получить данные по факту продаж!!! Выполнение отчета невозможно!"; 
		СообщениеПользователю.Сообщить();
		возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеРозницы.КЗ КАК КЗ,
	               |	ДанныеРозницы.ФактНаТекДату КАК ФактНаТекДату,
	               |	ДанныеРозницы.ФактНаДату1 КАК ФактНаДату1,
	               |	ДанныеРозницы.ФактНаДату2 КАК ФактНаДату2,
	               |	ДанныеРозницы.ФактНаДату3 КАК ФактНаДату3
	               |ПОМЕСТИТЬ ДанныеПоФакту
	               |ИЗ
	               |	&ДанныеРозницы КАК ДанныеРозницы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеОфиса.КЗ КАК КЗ,
	               |	ДанныеОфиса.ПланНаТекДату КАК ПланНаТекДату,
	               |	ДанныеОфиса.ПланНаДату1 КАК ПланНаДату1,
	               |	ДанныеОфиса.ПланНаДату2 КАК ПланНаДату2,
	               |	ДанныеОфиса.ПланНаДату3 КАК ПланНаДату3
	               |ПОМЕСТИТЬ ДанныеПоПлану
	               |ИЗ
	               |	&ДанныеОфиса КАК ДанныеОфиса
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеПоФакту.КЗ КАК КЗ,
	               |	ДанныеПоФакту.ФактНаТекДату КАК ФактНаТекДату,
	               |	ДанныеПоФакту.ФактНаДату1 КАК ФактНаДату1,
	               |	ДанныеПоФакту.ФактНаДату2 КАК ФактНаДату2,
	               |	ДанныеПоФакту.ФактНаДату3 КАК ФактНаДату3,
	               |	0 КАК ПланНаТекДату,
	               |	0 КАК ПланНаДату1,
	               |	0 КАК ПланНаДату2,
	               |	0 КАК ПланНаДату3
	               |ПОМЕСТИТЬ ОбъединДанные
	               |ИЗ
	               |	ДанныеПоФакту КАК ДанныеПоФакту
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ДанныеПоПлану.КЗ,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ДанныеПоПлану.ПланНаТекДату,
	               |	ДанныеПоПлану.ПланНаДату1,
	               |	ДанныеПоПлану.ПланНаДату2,
	               |	ДанныеПоПлану.ПланНаДату3
	               |ИЗ
	               |	ДанныеПоПлану КАК ДанныеПоПлану
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединДанные.КЗ КАК КЗ,
	               |	СУММА(ОбъединДанные.ФактНаТекДату) КАК ФактНаТекДату,
	               |	СУММА(ОбъединДанные.ФактНаДату1) КАК ФактНаДату1,
	               |	СУММА(ОбъединДанные.ФактНаДату2) КАК ФактНаДату2,
	               |	СУММА(ОбъединДанные.ФактНаДату3) КАК ФактНаДату3,
	               |	СУММА(ОбъединДанные.ПланНаТекДату) КАК ПланНаТекДату,
	               |	СУММА(ОбъединДанные.ПланНаДату1) КАК ПланНаДату1,
	               |	СУММА(ОбъединДанные.ПланНаДату2) КАК ПланНаДату2,
	               |	СУММА(ОбъединДанные.ПланНаДату3) КАК ПланНаДату3
	               |ПОМЕСТИТЬ ГруппДанные
	               |ИЗ
	               |	ОбъединДанные КАК ОбъединДанные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединДанные.КЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГруппДанные.КЗ КАК КЗ,
	               |	ГруппДанные.ФактНаТекДату КАК ФактНаТекДату,
	               |	ГруппДанные.ФактНаДату1 КАК ФактНаДату1,
	               |	ГруппДанные.ФактНаДату2 КАК ФактНаДату2,
	               |	ГруппДанные.ФактНаДату3 КАК ФактНаДату3,
	               |	ГруппДанные.ПланНаТекДату КАК ПланНаТекДату,
	               |	ГруппДанные.ПланНаДату1 КАК ПланНаДату1,
	               |	ГруппДанные.ПланНаДату2 КАК ПланНаДату2,
	               |	ГруппДанные.ПланНаДату3 КАК ПланНаДату3,
	               |	ВЫБОР
	               |		КОГДА ГруппДанные.ПланНаДату1 <> 0
	               |			ТОГДА ГруппДанные.ФактНаДату1 / ГруппДанные.ПланНаДату1
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПроцентВыполнения1,
	               |	ВЫБОР
	               |		КОГДА ГруппДанные.ПланНаДату2 <> 0
	               |			ТОГДА ГруппДанные.ФактНаДату2 / ГруппДанные.ПланНаДату2
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПроцентВыполнения2,
	               |	ВЫБОР
	               |		КОГДА ГруппДанные.ПланНаДату3 <> 0
	               |			ТОГДА ГруппДанные.ФактНаДату3 / ГруппДанные.ПланНаДату3
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПроцентВыполнения3
	               |ПОМЕСТИТЬ СПроцентамиВыполнения
	               |ИЗ
	               |	ГруппДанные КАК ГруппДанные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СПроцентамиВыполнения.КЗ КАК КЗ,
	               |	(СПроцентамиВыполнения.ПроцентВыполнения1 + СПроцентамиВыполнения.ПроцентВыполнения2 + СПроцентамиВыполнения.ПроцентВыполнения3) / 3 КАК СреднийПроцентВыполнения
	               |ПОМЕСТИТЬ СредниеПроцентыВыполнения
	               |ИЗ
	               |	СПроцентамиВыполнения КАК СПроцентамиВыполнения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГруппДанные.КЗ КАК КонсультационнаяЗона,
	               |	ГруппДанные.ФактНаТекДату КАК ФактНаТекДату,
	               |	ГруппДанные.ФактНаДату1 КАК ФактНаДату1,
	               |	ГруппДанные.ФактНаДату2 КАК ФактНаДату2,
	               |	ГруппДанные.ФактНаДату3 КАК ФактНаДату3,
	               |	ГруппДанные.ПланНаТекДату * ЕСТЬNULL(СредниеПроцентыВыполнения.СреднийПроцентВыполнения, 0) КАК ПланНаТекВремя,
	               |	ГруппДанные.ПланНаТекДату КАК ПланНаТекДату,
	               |	ГруппДанные.ПланНаДату1 КАК ПланНаДату1,
	               |	ГруппДанные.ПланНаДату2 КАК ПланНаДату2,
	               |	ГруппДанные.ПланНаДату3 КАК ПланНаДату3,
	               |	СредниеПроцентыВыполнения.СреднийПроцентВыполнения КАК СреднийПроцентВыполнения
	               |ИЗ
	               |	ГруппДанные КАК ГруппДанные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СредниеПроцентыВыполнения КАК СредниеПроцентыВыполнения
	               |		ПО ГруппДанные.КЗ = СредниеПроцентыВыполнения.КЗ";
	
	Запрос.УстановитьПараметр("ДанныеРозницы",ТаблицаДанныхФактПоКЗ);				   
	Запрос.УстановитьПараметр("ДанныеОфиса",ТаблицаДанныхПланПоКЗ);				   
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();				   
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетКонсультационныеЗоны");   //СхемаКомпоновкиДанных;   	
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанных);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатОтчетаПоПланФактКз);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//Изменение названий полей
	Для НомСтр = 1 по 10 цикл
         Для НомКол = 1 по 20 цикл
             СтарТекст = РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст;
			 //Если СтрНайти(СтарТекст, "План на тек время") > 0 тогда 
			 //    РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = "План на " + строка(ЧасОтчета) + "-00";
			 //КонецЕсли;

			 //Если СтрНайти(СтарТекст, "Факт на тек дату") > 0 тогда 
			 //    РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = "Факт на " + строка(ЧасОтчета) + "-00";
			 //КонецЕсли;
			 //
			 //Если СтрНайти(СтарТекст, "Отклонение1") > 0 тогда 
			 //    РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = Формат(ПрошлаяДата1, "ДФ=dd.MM.yyyy")+",%";
			 //КонецЕсли;
			 //
			 //Если СтрНайти(СтарТекст, "Отклонение2") > 0 тогда 
			 //    РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = Формат(ПрошлаяДата2, "ДФ=dd.MM.yyyy")+",%";
			 //КонецЕсли;
			 //
			 //Если СтрНайти(СтарТекст, "Отклонение3") > 0 тогда 
			 //    РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = Формат(ПрошлаяДата3, "ДФ=dd.MM.yyyy")+",%";
			 //КонецЕсли;
			 
			 Если Найти(СтарТекст, "План на тек время") > 0 тогда 
			     РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = "План на " + строка(ЧасОтчета) + "-00";
			 КонецЕсли;

			 Если Найти(СтарТекст, "Факт на тек дату") > 0 тогда 
			     РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = "Факт на " + строка(ЧасОтчета) + "-00";
			 КонецЕсли;
			 
			 Если Найти(СтарТекст, "Отклонение1") > 0 тогда 
			     РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = Формат(ПрошлаяДата1, "ДФ=dd.MM.yyyy")+",%";
			 КонецЕсли;
			 
			 Если Найти(СтарТекст, "Отклонение2") > 0 тогда 
			     РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = Формат(ПрошлаяДата2, "ДФ=dd.MM.yyyy")+",%";
			 КонецЕсли;
			 
			 Если Найти(СтарТекст, "Отклонение3") > 0 тогда 
			     РезультатОтчетаПоПланФактКз.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = Формат(ПрошлаяДата3, "ДФ=dd.MM.yyyy")+",%";
			 КонецЕсли;
			 
		 КонецЦикла;
	КонецЦикла;	 
	
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПланФактКЗ(Команда)
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		ДатаПоследнегоОбновления = "";
		СформироватьПланФактКЗНаСервере(Магазин,ДатаПоследнегоОбновления);
		Элементы.РезультатОтчетаПланФактКз.Заголовок = "Результат отчета план факт по консультационным зонам на " + Строка(ДатаПоследнегоОбновления);
	Иначе
		Сообщить("Не заполнен магазин!!! Выполнение отчета невозможно!!!");
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДанныхПланПоКЗ(КодМагазина,ДатаОтчета,ПрошлаяДата1,ПрошлаяДата2,ПрошлаяДата3,МассивСКЮБрендовДляКассы)
	
	РезТаблица = Новый ТаблицаЗначений;
	Резтаблица.Колонки.Добавить("КЗ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(20)));
	Резтаблица.Колонки.Добавить("ПланНаТекДату", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("ПланНаДату1", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("ПланНаДату2", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("ПланНаДату3", Новый ОписаниеТипов("Число"));
	
	СоединениеУТ = Новый COMОбъект("V83.COMConnector");
	ИмяСервера = "cl-as-01";
	ИмяБазы = "office";
	ПользБазы  = "Administrator";
	ПарольБазы = "zaq123";   
	//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
	СоединениеУТ.PoolTimeout = 60;
	MaxConnections = 10 ;
	PoolCapacity = 10;
	Попытка  
		БазаУТ = СоединениеУТ.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
		//Розница = СоединениеРозница.Connect(СтрокаПодключения);
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		СоединениеУТ = "";
		Соединение = "";
		Возврат РезТаблица;
	КонецПопытки;
	ПодразделениеЗП = БазаУТ.Справочники.Подразделения.НайтиПоКоду(КодМагазина).ПодразделениеЗП;
	ПоказательКасса = БазаУТ.Справочники.Показатели.НайтиПоНаименованию("Касса План (ТО)");
	ПоказательДекор = БазаУТ.Справочники.Показатели.НайтиПоНаименованию("Декор План (ТО)");
	ПоказательКрема = БазаУТ.Справочники.Показатели.НайтиПоНаименованию("Крема План (ТО)");
	ПоказательВолосы = БазаУТ.Справочники.Показатели.НайтиПоНаименованию("Волосы План (ТО)");
	
	ЗапросУТ = БазаУТ.NewObject("Запрос");
	
	ЗапросУТ.Текст ="ВЫБРАТЬ
			|	ДополнительныеПоказатели.Период,
			|	ДополнительныеПоказатели.Подразделение,
			|	ДополнительныеПоказатели.Показатель,
			|	ДополнительныеПоказатели.Значение
			|ПОМЕСТИТЬ ДанныеПоМагазину
			|ИЗ
			|	РегистрСведений.ДополнительныеПоказатели КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период >= &Дата3
			|	И ДополнительныеПоказатели.Подразделение = &ПодразделениеЗП
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	""КЗ Касса"" КАК Показатель,
			|	ДополнительныеПоказатели.Значение КАК ПланКассаТекДата,
			|	0 КАК ПланДата1,
			|	0 КАК ПланДата2,
			|	0 КАК ПланДата3
			|ПОМЕСТИТЬ ВсеДанные
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &ТекДата
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКасса
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Касса"",
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата1
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКасса
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Касса"",
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата2
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКасса
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Касса"",
			|	0,
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата3
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКасса
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Декор"",
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &ТекДата
			|	И ДополнительныеПоказатели.Показатель = &ПоказательДекор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Декор"",
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата1
			|	И ДополнительныеПоказатели.Показатель = &ПоказательДекор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Декор"",
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата2
			|	И ДополнительныеПоказатели.Показатель = &ПоказательДекор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Декор"",
			|	0,
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата3
			|	И ДополнительныеПоказатели.Показатель = &ПоказательДекор
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Крема"",
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &ТекДата
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКрема
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Крема"",
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата1
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКрема
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Крема"",
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата2
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКрема
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Крема"",
			|	0,
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата3
			|	И ДополнительныеПоказатели.Показатель = &ПоказательКрема
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Волосы"",
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &ТекДата
			|	И ДополнительныеПоказатели.Показатель = &ПоказательВолосы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Волосы"",
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата1
			|	И ДополнительныеПоказатели.Показатель = &ПоказательВолосы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Волосы"",
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение,
			|	0
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата2
			|	И ДополнительныеПоказатели.Показатель = &ПоказательВолосы
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""КЗ Волосы"",
			|	0,
			|	0,
			|	0,
			|	ДополнительныеПоказатели.Значение
			|ИЗ
			|	ДанныеПоМагазину КАК ДополнительныеПоказатели
			|ГДЕ
			|	ДополнительныеПоказатели.Период = &Дата3
			|	И ДополнительныеПоказатели.Показатель = &ПоказательВолосы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВсеДанные.Показатель КАК КЗ,
			|	СУММА(ВсеДанные.ПланКассаТекДата) КАК ПланНаТекДату,
			|	СУММА(ВсеДанные.ПланДата1) КАК ПланНаДату1,
			|	СУММА(ВсеДанные.ПланДата2) КАК ПланНаДату2,
			|	СУММА(ВсеДанные.ПланДата3) КАК ПланНаДату3
			|ИЗ
			|	ВсеДанные КАК ВсеДанные
			|
			|СГРУППИРОВАТЬ ПО
			|	ВсеДанные.Показатель";
	
	ЗапросУТ.УстановитьПараметр("ПодразделениеЗП",ПодразделениеЗП);
	ЗапросУТ.УстановитьПараметр("ПоказательКасса",ПоказательКасса);	
	ЗапросУТ.УстановитьПараметр("ПоказательДекор",ПоказательДекор);
	ЗапросУТ.УстановитьПараметр("ПоказательКрема",ПоказательКрема);	
	ЗапросУТ.УстановитьПараметр("ПоказательВолосы",ПоказательВолосы);	
	
	ЗапросУТ.УстановитьПараметр("ТекДата",НачалоДня(ДатаОтчета));	
	ЗапросУТ.УстановитьПараметр("Дата1",ПрошлаяДата1);
	ЗапросУТ.УстановитьПараметр("Дата2",ПрошлаяДата2);	
	ЗапросУТ.УстановитьПараметр("Дата3",ПрошлаяДата3);	
	
	Выборка = ЗапросУТ.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = РезТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
	КонецЦикла;	
	
	// Номенклатура брендов для КЗ Касса
	МассивБрендов = БазаУТ.NewObject("Массив");
	
	МассивБрендов.Добавить(БазаУТ.Справочники.Контрагенты.НайтиПоКоду("03930"));
	МассивБрендов.Добавить(БазаУТ.Справочники.Контрагенты.НайтиПоКоду("01377"));
	МассивБрендов.Добавить(БазаУТ.Справочники.Контрагенты.НайтиПоКоду("05425"));
	МассивБрендов.Добавить(БазаУТ.Справочники.Контрагенты.НайтиПоКоду("05815"));
	МассивБрендов.Добавить(БазаУТ.Справочники.Контрагенты.НайтиПоКоду("05846"));

	ЗапросУТ.Текст ="ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗначенияСвойствОбъектов.Объект.Код КАК КодНоменклатуры
	|		ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект ССЫЛКА Справочник.Номенклатура И ЗначенияСвойствОбъектов.Свойство = &СвойствоБренд
	|	И ЗначенияСвойствОбъектов.Значение В (&МассивБрендов)";
	
	ЗапросУТ.УстановитьПараметр("СвойствоБренд",БазаУТ.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("000000001"));	
	ЗапросУТ.УстановитьПараметр("МассивБрендов",МассивБрендов);
	
	Выборка = ЗапросУТ.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСКЮБрендовДляКассы.Добавить(Выборка.КодНоменклатуры);
	КонецЦикла;	
	
	СоединениеУТ = "";
	
	БазаУТ = "";
	
	возврат РезТаблица;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуДанныхФактПоКЗ(КодМагазина,ДатаОтчета,ЧасОтчета,ПрошлаяДата1,ПрошлаяДата2,ПрошлаяДата3,МассивСКЮБрендовДляКассы,ДатаПоследнегоОбновления)

	РезТаблица = Новый ТаблицаЗначений;
	Резтаблица.Колонки.Добавить("КЗ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(20)));
	Резтаблица.Колонки.Добавить("ФактНаТекДату", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("ФактНаДату1", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("ФактНаДату2", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("ФактНаДату3", Новый ОписаниеТипов("Число"));
	
	СоединениеРозница = Новый COMОбъект("V83.COMConnector");
	ИмяСервера = "cl-as-03";
	ИмяБазы = "roznica";
	ПользБазы  = "Почтальон";
	ПарольБазы = "zaq123";   
	//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
	СоединениеРозница.PoolTimeout = 60;
	MaxConnections = 10 ;
	PoolCapacity = 10;
	Попытка  
		Розница = СоединениеРозница.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
		//Розница = СоединениеРозница.Connect(СтрокаПодключения);
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	КонецПопытки;
	МассивРозницы = Розница.NewObject("Массив");
	
	Для каждого ЭлМассива Из МассивСКЮБрендовДляКассы Цикл
		МассивРозницы.Добавить(ЭлМассива);
	КонецЦикла;	
	
	ЗапросРозница = Розница.NewObject("Запрос");
	ЗапросРозница.УстановитьПараметр("НачалоПериодаТекДата",ДатаОтчета);
	ЗапросРозница.УстановитьПараметр("КонецПериодаТекдата",ДатаОтчета + ЧасОтчета*3600); 
	ЗапросРозница.УстановитьПараметр("НачалоПериодаДата1",ПрошлаяДата1);
	ЗапросРозница.УстановитьПараметр("КонецПериодаДата1",ПрошлаяДата1 + ЧасОтчета*3600); 
	ЗапросРозница.УстановитьПараметр("НачалоПериодаДата2",ПрошлаяДата2);
	ЗапросРозница.УстановитьПараметр("КонецПериодаДата2",ПрошлаяДата2 + ЧасОтчета*3600); 
	ЗапросРозница.УстановитьПараметр("НачалоПериодаДата3",ПрошлаяДата3);
	ЗапросРозница.УстановитьПараметр("КонецПериодаДата3",ПрошлаяДата3 + ЧасОтчета*3600); 
	
	ЗапросРозница.УстановитьПараметр("КодыНоменклатурБрендов",МассивРозницы); 
	
	МассивДопСКЮДляПрикассы = Новый Массив;  // Дополнительные 4 СКЮ для прикассы
	МассивДопСКЮДляПрикассы.Добавить(Розница.Справочники.Номенклатура.НайтиПоКоду("138172"));
	МассивДопСКЮДляПрикассы.Добавить(Розница.Справочники.Номенклатура.НайтиПоКоду("151757"));
	МассивДопСКЮДляПрикассы.Добавить(Розница.Справочники.Номенклатура.НайтиПоКоду("151760"));
	МассивДопСКЮДляПрикассы.Добавить(Розница.Справочники.Номенклатура.НайтиПоКоду("138174"));
	
	МассивДопСКЮПрикассыРозницы = Розница.NewObject("Массив");
	
	Для каждого ЭлМассива Из МассивДопСКЮДляПрикассы Цикл
		МассивДопСКЮПрикассыРозницы.Добавить(ЭлМассива);
	КонецЦикла;	
	
	ЗапросРозница.УстановитьПараметр("ГруппаВолосы",Розница.Справочники.Номенклатура.НайтиПоКоду("000003"));
	ЗапросРозница.УстановитьПараметр("ГруппаДекоративнаяКосметика",Розница.Справочники.Номенклатура.НайтиПоКоду("000019")); 
	//ЗапросРозница.УстановитьПараметр("ГруппаКонсультативнаяКатегория",Розница.Справочники.Номенклатура.НайтиПоКоду("131007"));
	ЗапросРозница.УстановитьПараметр("ГруппаМаскиСаше",Розница.Справочники.Номенклатура.НайтиПоКоду("129704")); 
	ЗапросРозница.УстановитьПараметр("ГруппаПрикасса",Розница.Справочники.Номенклатура.НайтиПоКоду("087541"));
	ЗапросРозница.УстановитьПараметр("ГруппаУходЗаЛицом",Розница.Справочники.Номенклатура.НайтиПоКоду("129714")); 
	ЗапросРозница.УстановитьПараметр("ГруппаУходЗаТелом",Розница.Справочники.Номенклатура.НайтиПоКоду("129743"));
	ЗапросРозница.УстановитьПараметр("МассивДопСКЮДляПрикассы",МассивДопСКЮПрикассыРозницы);
	
	ЗапросРозница.УстановитьПараметр("КодМагазина",КодМагазина); 
	
	ЗапросРозница.Текст = "ВЫБРАТЬ
				|	Номенклатура.Ссылка КАК Номенклатура
				|ПОМЕСТИТЬ НоменклатураКассы
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	(Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппаПрикасса)
				|			ИЛИ Номенклатура.Код В (&КодыНоменклатурБрендов) ИЛИ Номенклатура.Ссылка В (&МассивДопСКЮДляПрикассы))
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Номенклатура.Ссылка КАК Номенклатура
				|ПОМЕСТИТЬ НоменклатураДекор
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаДекоративнаяКосметика)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Номенклатура.Ссылка КАК Номенклатура
				|ПОМЕСТИТЬ НоменклатураКрема
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	(Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппаУходЗаЛицом)
				|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппаУходЗаТелом)
				|			ИЛИ Номенклатура.Ссылка В ИЕРАРХИИ (&ГруппаМаскиСаше))
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Номенклатура.Ссылка КАК Номенклатура
				|ПОМЕСТИТЬ НоменклатураВолосы
				|ИЗ
				|	Справочник.Номенклатура КАК Номенклатура
				|ГДЕ
				|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппаВолосы)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	""КЗ Касса"" КАК КЗ,
				|	ПродажиОбороты.СуммаОборот КАК ФактНаТекДату,
				|	0 КАК ФактНаДату1,
				|	0 КАК ФактНаДату2,
				|	0 КАК ФактНаДату3
				|ПОМЕСТИТЬ ВсеДанные
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаТекДата,
				|			&КонецПериодаТекдата,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКассы.Номенклатура
				|					ИЗ
				|						НоменклатураКассы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Касса"",
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата1,
				|			&КонецПериодаДата1,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКассы.Номенклатура
				|					ИЗ
				|						НоменклатураКассы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Касса"",
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата2,
				|			&КонецПериодаДата2,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКассы.Номенклатура
				|					ИЗ
				|						НоменклатураКассы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Касса"",
				|	0,
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата3,
				|			&КонецПериодаДата3,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКассы.Номенклатура
				|					ИЗ
				|						НоменклатураКассы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Декор"",
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаТекДата,
				|			&КонецПериодаТекдата,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураДекор.Номенклатура
				|					ИЗ
				|						НоменклатураДекор)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Декор"",
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата1,
				|			&КонецПериодаДата1,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураДекор.Номенклатура
				|					ИЗ
				|						НоменклатураДекор)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Декор"",
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата2,
				|			&КонецПериодаДата2,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураДекор.Номенклатура
				|					ИЗ
				|						НоменклатураДекор)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Декор"",
				|	0,
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата3,
				|			&КонецПериодаДата3,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураДекор.Номенклатура
				|					ИЗ
				|						НоменклатураДекор)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Крема"",
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаТекДата,
				|			&КонецПериодаТекдата,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКрема.Номенклатура
				|					ИЗ
				|						НоменклатураКрема)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Крема"",
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата1,
				|			&КонецПериодаДата1,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКрема.Номенклатура
				|					ИЗ
				|						НоменклатураКрема)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Крема"",
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата2,
				|			&КонецПериодаДата2,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКрема.Номенклатура
				|					ИЗ
				|						НоменклатураКрема)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Крема"",
				|	0,
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата3,
				|			&КонецПериодаДата3,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураКрема.Номенклатура
				|					ИЗ
				|						НоменклатураКрема)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Волосы"",
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаТекДата,
				|			&КонецПериодаТекдата,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураВолосы.Номенклатура
				|					ИЗ
				|						НоменклатураВолосы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Волосы"",
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата1,
				|			&КонецПериодаДата1,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураВолосы.Номенклатура
				|					ИЗ
				|						НоменклатураВолосы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Волосы"",
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот,
				|	0
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата2,
				|			&КонецПериодаДата2,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураВолосы.Номенклатура
				|					ИЗ
				|						НоменклатураВолосы)) КАК ПродажиОбороты
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	""КЗ Волосы"",
				|	0,
				|	0,
				|	0,
				|	ПродажиОбороты.СуммаОборот
				|ИЗ
				|	РегистрНакопления.Продажи.Обороты(
				|			&НачалоПериодаДата3,
				|			&КонецПериодаДата3,
				|			Период,
				|			Подразделение.Код = &КодМагазина
				|				И Номенклатура В
				|					(ВЫБРАТЬ
				|						НоменклатураВолосы.Номенклатура
				|					ИЗ
				|						НоменклатураВолосы)) КАК ПродажиОбороты
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВсеДанные.КЗ,
				|	СУММА(ВсеДанные.ФактНаТекДату) КАК ФактНаТекДату,
				|	СУММА(ВсеДанные.ФактНаДату1) КАК ФактНаДату1,
				|	СУММА(ВсеДанные.ФактНаДату2) КАК ФактНаДату2,
				|	СУММА(ВсеДанные.ФактНаДату3) КАК ФактНаДату3
				|ИЗ
				|	ВсеДанные КАК ВсеДанные
				|
				|СГРУППИРОВАТЬ ПО
				|	ВсеДанные.КЗ";
	
	Выборка = ЗапросРозница.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = РезТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
	КонецЦикла;	
	
	ЗапросРозница = Розница.NewObject("Запрос");
	ЗапросРозница.УстановитьПараметр("НачДата",НачалоМесяца(НачалоМесяца(ДатаОтчета)-1));
	ЗапросРозница.УстановитьПараметр("КодМагазина",КодМагазина); 
	
	ЗапросРозница.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЧекККМ.Дата КАК Дата
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Подразделение.Код = &КодМагазина
	|	И ЧекККМ.Дата >= &НачДата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Выборка = ЗапросРозница.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДатаПоследнегоОбновления = Формат(Выборка.Дата,"")+"(время последнего чека)";	
	Иначе
		ДатаПоследнегоОбновления = "<Дата последнего обновления неопределена!Обратитесь в поддержку!>"
	КонецЕсли;
	
	СоединениеРозница = "";
	Соединение = "";
	
	возврат РезТаблица;
	
КонецФункции	

&НаСервере
Процедура СформироватьДинамикуПродажНаСервере(ДатаНачала,ДатаОкончания,Магазин)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Отчет"); //ДанныеФормыВЗначение("Отчет");
	
	РезультатДинамикиВыручки.Очистить();
	РезультатДинамикиКоличестваЧеков.Очистить();
	РезультатДинамикиПосетителей.Очистить();
	РезультатДинамикиСреднегоЧека.Очистить();
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	
	//ДатаОкончания = ТекущаяДата();
	//ДатаНачала = НачалоМесяца(ДатаОкончания);
	ТаблицаДанныхРозницы = ПолучитьТаблицуДанныхРозницы(ДатаНачала,ДатаОкончания,ТекПользователь,1);
	ТаблицаДанныхСчетчиков = ПолучитьТаблицуДанныхСчетчиков(ДатаНачала,ДатаОкончания,1,Магазин);
	
	Если ТаблицаДанныхРозницы.Количество()=0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось получить данные по чекам!!! Выполнение отчета невозможно!"; 
		СообщениеПользователю.Сообщить();
		возврат;
	КонецЕсли;
	ТаблицаДанныхРозницы.Свернуть("Дата,Час","КвоШт,Сумма,КвоЧеков,СуммаВозврата");
	ТаблицаДанныхСчетчиков.Свернуть("Дата,Час","КвоПосетителей");
	
	ТаблицаДанныхРозницы.Колонки.Добавить("ДатаПредставление");
	ТаблицаДанныхРозницы.Колонки.Добавить("ЧасПредставление");
	// Корректировка названий часов и дат
	Для каждого СтрокаДанныхРозницы Из ТаблицаДанныхРозницы Цикл
		СтрокаДанныхРозницы.ДатаПредставление = Формат(СтрокаДанныхРозницы.Дата,"ДФ=dd.MM") + "("+Формат(СтрокаДанныхРозницы.Дата,"ДФ=ддд")+")";
		СтрокаДанныхРозницы.ЧасПредставление = Формат(СтрокаДанныхРозницы.Час,"ЧЦ=2; ЧДЦ=; ЧВН=") + "-"+Формат(СтрокаДанныхРозницы.Час+1,"ЧЦ=2; ЧДЦ=; ЧВН=");
	КонецЦикла;	
	
		// Корректировка названий часов и дат
	ТаблицаДанныхСчетчиков.Колонки.Добавить("ДатаПредставление");
	ТаблицаДанныхСчетчиков.Колонки.Добавить("ЧасПредставление");
		
	Для каждого СтрокаДанныхСчетчиков Из ТаблицаДанныхСчетчиков Цикл
		СтрокаДанныхСчетчиков.ДатаПредставление = Формат(СтрокаДанныхСчетчиков.Дата,"ДФ=dd.MM") + "("+Формат(СтрокаДанныхСчетчиков.Дата,"ДФ=ддд")+")";
		СтрокаДанныхСчетчиков.ЧасПредставление = Формат(СтрокаДанныхСчетчиков.Час,"ЧЦ=2; ЧДЦ=; ЧВН=") + "-"+Формат(СтрокаДанныхСчетчиков.Час+1,"ЧЦ=2; ЧДЦ=; ЧВН=");
	КонецЦикла;	

	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетДинамикаПродаж");   //СхемаКомпоновкиДанных;   	
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанныхРозницы);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатДинамикиВыручки);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//-------Вывод среднего Чека
	Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[1].Настройки;; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанныхРозницы);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатДинамикиСреднегоЧека);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	//-------Вывод количества чеков
	Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[2].Настройки;; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанныхРозницы);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатДинамикиКоличестваЧеков);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//-------Вывод количества посетителей
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетДинамикаПосетителей");   //СхемаКомпоновкиДанных;   	
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТаблицаДанных",ТаблицаДанныхСчетчиков);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезультатДинамикиПосетителей);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДинамикуПродаж(Команда)
	
	Если ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) И ЗначениеЗаполнено(ПериодОтчета.ДатаОкончания) И ЗначениеЗаполнено(Магазин) Тогда
		СформироватьДинамикуПродажНаСервере(ПериодОтчета.ДатаНачала,ПериодОтчета.ДатаОкончания,Магазин);
	Иначе
		Сообщить("Не заполнен магазин!!! Выполнение отчета невозможно!!!");
	КонецЕсли;	

КонецПроцедуры

#Область ОтчетБонусныеКарты

&НаКлиенте
Процедура СформироватьОтчетБК(Команда)
	СформироватьОтчетБКНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетБКНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Отчет");
	Если ЗначениеЗаполнено(ПериодОтчета.ДатаНачала) И ЗначениеЗаполнено(ПериодОтчета.ДатаОкончания) Тогда
		ТабБКЧек = ПолучитьБКизЧековойСтатистики(ПериодОтчета.ДатаНачала,ПериодОтчета.ДатаОкончания);
	Иначе
		Сообщить("Не заполнены параметры!!! Выполнение отчета невозможно!!!");
	КонецЕсли;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЧековой.КодУТ,
		|	ДанныеЧековой.Магазин,
		|	ДанныеЧековой.Дата,
		|	ДанныеЧековой.Виртуальная,
		|	ДанныеЧековой.Пластик,
		|	ДанныеЧековой.ВсегоЧеков,
		|	ДанныеЧековой.ЧекиСБонуснойКартой
		|ПОМЕСТИТЬ ДанЧековой
		|ИЗ
		|	&ДанныеЧековой КАК ДанныеЧековой
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанЧековой.КодУТ,
		//|	ДанЧековой.Магазин ,
		|	ДанЧековой.Дата,
		|	ДанЧековой.Виртуальная,
		|	ДанЧековой.Пластик,
		|	ДанЧековой.ВсегоЧеков,
		|	ДанЧековой.ЧекиСБонуснойКартой,
		|	Подразделения.Ссылка КАК Магазин
		|ИЗ
		|	ДанЧековой КАК ДанЧековой
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Подразделения КАК Подразделения
		|		ПО ДанЧековой.КодУТ = Подразделения.КодПодразделенияУТ
		|		И (НЕ Подразделения.ПометкаУдаления)";
	
	Запрос.УстановитьПараметр("ДанныеЧековой", ТабБКЧек);
	
	ТабБК = Запрос.Выполнить().Выгрузить();
		
	
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("МакетСтатистикиБК");   //СхемаКомпоновкиДанных;   	
	
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию; //СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;	
	ВнешниеНаборыДанных.Вставить("ТабБК",ТабБК);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(РезОтчетаБК);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	

КонецПроцедуры

Функция ПолучитьБКизЧековойСтатистики(ДатаНачала, ДатаОкончания)
	РезОтчетаБК.Очистить();
	РезТаблица = Новый ТаблицаЗначений;
	СоединениеРозница = Новый COMОбъект("V83.COMConnector");
	ИмяСервера = "cl-as-03";
	ИмяБазы = "roznica";
	ПользБазы  = "Почтальон";
	ПарольБазы = "zaq123";     
	//СтрокаПодключения = Константы.СтрокаПодключенияКРознице.Получить();
	СоединениеРозница.PoolTimeout = 60;
	MaxConnections = 10 ;
	PoolCapacity = 10;
	Попытка  
		БазаРозница = СоединениеРозница.Connect("Srvr="""+СокрЛП(ИмяСервера)+""";Ref="""+СокрЛП(ИмяБазы)+""";usr="""+ПользБазы+""";pwd="""+ПарольБазы+"""");
		//Розница = СоединениеРозница.Connect(СтрокаПодключения);
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = ОписаниеОшибки(); 
		СообщениеПользователю.Сообщить();
		СоединениеУТ = "";
		Соединение = "";
		Возврат Ложь;
	КонецПопытки;
	///////////
	Резтаблица.Колонки.Добавить("КодУТ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(5)));
	Резтаблица.Колонки.Добавить("Магазин", Новый ОписаниеТипов("Число"));
	Резтаблица.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	Резтаблица.Колонки.Добавить("Виртуальная", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(5,2)));
	Резтаблица.Колонки.Добавить("Пластик", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(5,2)));
	Резтаблица.Колонки.Добавить("ВсегоЧеков", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(5,2)));
	Резтаблица.Колонки.Добавить("ЧекиСБонуснойКартой", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(5,2)));
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	СпискоДоступныхПодразделений = ПолучитьСписокДоступныхПодразделенийПользователя(ТекПользователь,Магазин);
	Если СпискоДоступныхПодразделений = Неопределено Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не удалось определить вашу должность в компании.Выполнение отчета невозможно!!!"; 
		СообщениеПользователю.Сообщить();
		СоединениеРозница = "";
		Соединение = "";
		Возврат РезТаблица;
	Иначе
		МассивРозницы = БазаРозница.NewObject("Массив");
		Для каждого ЭлМассива Из СпискоДоступныхПодразделений Цикл
			МассивРозницы.Добавить(ЭлМассива);
		КонецЦикла;	
	КонецЕсли;

	БазаРозница = БазаРозница.NewObject("Запрос");	
	БазаРозница.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
						|	ПродажиОбороты.Регистратор
						|ПОМЕСТИТЬ ВсеЧекиСПС
						|ИЗ
						|	РегистрНакопления.Продажи.Обороты(
						|			&НачалоПериода,
						|			&КонецПериода,
						|			Регистратор,
						|			ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Продажа)
						|				И Подразделение.Код В (&Код)
						|				И Номенклатура В
						|					(ВЫБРАТЬ
						|						Номенклатура.Ссылка
						|					ИЗ
						|						Справочник.Номенклатура КАК Номенклатура
						|					ГДЕ
						|						Номенклатура.Родитель.Код = ""081497"")) КАК ПродажиОбороты
						|;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ПродажиОбороты.Регистратор,
						|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПродажиОбороты.Номенклатура.Родитель) КАК КвоРодителей
						|ПОМЕСТИТЬ ЧекиКвоРодителей
						|ИЗ
						|	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ) КАК ПродажиОбороты
						|ГДЕ
						|	ПродажиОбороты.Регистратор В
						|			(ВЫБРАТЬ
						|				ВсеЧекиСПС.Регистратор
						|			ИЗ
						|				ВсеЧекиСПС)

						|СГРУППИРОВАТЬ ПО
						|	ПродажиОбороты.Регистратор
						|;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ РАЗЛИЧНЫЕ
						|	ЧекиКвоРодителей.Регистратор.Подразделение.Код КАК КодПодразделения,
						|	ЧекиКвоРодителей.Регистратор КАК Регистратор
						|ПОМЕСТИТЬ ВсеЧекиТолькоСПС
						|ИЗ
						|	ЧекиКвоРодителей КАК ЧекиКвоРодителей
						|ГДЕ
						|	ЧекиКвоРодителей.КвоРодителей = 1
						|;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	НАЧАЛОПЕРИОДА(ЗарегистрированныеБонусныеКарты.ДатаРегистрации, ДЕНЬ) КАК Дата,
						|	ЗарегистрированныеБонусныеКарты.Подразделение.НомерМагазина КАК Магазин,
						|	СУММА(ВЫБОР
						|			КОГДА ЗарегистрированныеБонусныеКарты.ШК_БонуснойКарты ПОДОБНО ""2500%""
						|				ТОГДА 1
						|			ИНАЧЕ 0
						|		КОНЕЦ) КАК Пластик,
						|	СУММА(ВЫБОР
						|			КОГДА ЗарегистрированныеБонусныеКарты.ШК_БонуснойКарты ПОДОБНО ""2500%""
						|				ТОГДА 0
						|			ИНАЧЕ 1
						|		КОНЕЦ) КАК Виртуальная
						|ПОМЕСТИТЬ ЗарегистрированныеКарты
						|ИЗ
						|	РегистрСведений.ЗарегистрированныеБонусныеКарты КАК ЗарегистрированныеБонусныеКарты
						|ГДЕ
						|	ЗарегистрированныеБонусныеКарты.ДатаРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
						|	И ЗарегистрированныеБонусныеКарты.Подразделение.Код В(&Код)
						|СГРУППИРОВАТЬ ПО
						|	ЗарегистрированныеБонусныеКарты.Подразделение.НомерМагазина,
						|	НАЧАЛОПЕРИОДА(ЗарегистрированныеБонусныеКарты.ДатаРегистрации, ДЕНЬ)
						|;
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ) КАК Дата,
						|	ЧекККМ.Подразделение.НомерМагазина,
						|	СУММА(1) КАК ВсегоЧеков,
						|	СУММА(ВЫБОР
						|			КОГДА ЧекККМ.BPMonline_ШК <> """"
						|				ТОГДА 1
						|			ИНАЧЕ 0
						|		КОНЕЦ) КАК ЧекиСБонуснойКартой,
						|	ЧекККМ.Подразделение.Код КАК КодУТ
						|ПОМЕСТИТЬ ВсеЧеки
						|ИЗ
						|	Документ.ЧекККМ КАК ЧекККМ
						|ГДЕ
						|	ЧекККМ.Дата МЕЖДУ &НачалоПериода И &КонецПериода
						|	И ЧекККМ.Проведен = ИСТИНА
						|	И ЧекККМ.Подразделение.Код В(&Код)
						|	И ЧекККМ.ВидОперацииЧекаККМ = ЗНАЧЕНИЕ(Перечисление.ВидОперацииЧекаККМ.Продажа)
						|	И ЧекККМ.СостояниеЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СостояниеЧекаККМ.Закрыт)
						|	И НЕ ЧекККМ.Ссылка В
						|				(ВЫБРАТЬ
						|					ВсеЧекиТолькоСПС.Регистратор
						|				ИЗ
						|					ВсеЧекиТолькоСПС)

						|СГРУППИРОВАТЬ ПО
						|	ЧекККМ.Подразделение.НомерМагазина,
						|	НАЧАЛОПЕРИОДА(ЧекККМ.Дата, ДЕНЬ),
						|	ЧекККМ.Подразделение.Код
						|;
						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВсеЧеки.Дата,
						|	ВсеЧеки.ПодразделениеНомерМагазина КАК Магазин,
						|	ВсеЧеки.КодУТ,
						|	ВсеЧеки.ВсегоЧеков,
						|	ВсеЧеки.ЧекиСБонуснойКартой,
						|	ЕСТЬNULL(ЗарегистрированныеКарты.Пластик, 0) КАК Пластик,
						|	ЕСТЬNULL(ЗарегистрированныеКарты.Виртуальная, 0) КАК Виртуальная
						|ИЗ
						|	ВсеЧеки КАК ВсеЧеки
						|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеКарты КАК ЗарегистрированныеКарты
						|		ПО ВсеЧеки.Дата = ЗарегистрированныеКарты.Дата
						|			И ВсеЧеки.ПодразделениеНомерМагазина = ЗарегистрированныеКарты.Магазин";

	
	БазаРозница.УстановитьПараметр("Код",МассивРозницы);
	БазаРозница.УстановитьПараметр("НачалоПериода",ДатаНачала);
	БазаРозница.УстановитьПараметр("КонецПериода",ДатаОкончания);
	
	Выборка = БазаРозница.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаТаблицы = РезТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы,Выборка);
	КонецЦикла;	
	
	СоединениеРозница = "";
	Соединение = "";
	
	Возврат РезТаблица;
	
КонецФункции	

#КонецОбласти



