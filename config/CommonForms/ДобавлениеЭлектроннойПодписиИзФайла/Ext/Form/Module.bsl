
&НаКлиенте
Перем ОписаниеДанных Экспорт;

&НаКлиенте
Перем ФормаОбъекта Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ЗаголовокДанных) Тогда
		Элементы.ПредставлениеДанных.Заголовок = Параметры.ЗаголовокДанных;
	Иначе
		Элементы.ПредставлениеДанных.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	КонецЕсли;
	
	ПредставлениеДанных = Параметры.ПредставлениеДанных;
	Элементы.ПредставлениеДанных.Гиперссылка = Параметры.ПредставлениеДанныхОткрывается;
	
	Если Не ЗначениеЗаполнено(ПредставлениеДанных) Тогда
		Элементы.ПредставлениеДанных.Видимость = Ложь;
	КонецЕсли;
	
	Если Не Параметры.ПоказатьКомментарий Тогда
		Элементы.Подписи.Шапка = Ложь;
		Элементы.ПодписиКомментарий.Видимость = Ложь;
	КонецЕсли;
	
	
	МенеджерКриптографииНаСервереОписаниеОшибки = Новый Структура;
	ОбщиеНастройки = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки();
	
	Если ОбщиеНастройки.ПроверятьЭлектронныеПодписиНаСервере
	 Или ОбщиеНастройки.СоздаватьЭлектронныеПодписиНаСервере Тогда
		
		ЭлектроннаяПодписьСлужебный.МенеджерКриптографии("",
			Ложь, МенеджерКриптографииНаСервереОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщиеНастройки = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки();
	
	Если ОбщиеНастройки.ПроверятьЭлектронныеПодписиНаСервере
	 Или ОбщиеНастройки.СоздаватьЭлектронныеПодписиНаСервере Тогда
		
		Если ЗначениеЗаполнено(МенеджерКриптографииНаСервереОписаниеОшибки) Тогда
			ОписаниеОшибки = Новый Структура;
			ЭлектроннаяПодписьСлужебныйКлиент.МенеджерКриптографии("",
				Ложь, ОписаниеОшибки);
			
			Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
				ЭлектроннаяПодписьСлужебныйКлиент.ПоказатьОшибкуОбращенияКПрограмме(
					НСтр("ru = 'Требуется программа электронной подписи и шифрования'"),
					"", ОписаниеОшибки, МенеджерКриптографииНаСервереОписаниеОшибки);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ЭлектроннаяПодписьСлужебныйКлиент.МенеджерКриптографии("") = Неопределено Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеДанныхНажатие(Элемент, СтандартнаяОбработка)
	
	ЭлектроннаяПодписьСлужебныйКлиент.ПредставлениеДанныхНажатие(ЭтотОбъект,
		Элемент, СтандартнаяОбработка, ОписаниеДанных);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыПодписи

&НаКлиенте
Процедура ПодписиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ВыбратьФайл(Истина)
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписиПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбратьФайл();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Подписи.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбрано ни одного файла подписи'"));
		Возврат;
	КонецЕсли;
	
	Если Не ОписаниеДанных.Свойство("Объект") Тогда
		ОписаниеДанных.Вставить("Подписи", МассивПодписей());
		Закрыть(Истина);
	КонецЕсли;
	
	Если ТипЗнч(ОписаниеДанных.Объект) = Тип("ОписаниеОповещения") Тогда
		ОписаниеДанных.Вставить("Подписи", МассивПодписей());
		Попытка
			ВыполнитьОбработкуОповещения(ОписаниеДанных.Объект, ОписаниеДанных);
		Исключение
			ОписаниеДанных.Удалить("Подписи");
			ВызватьИсключение;
		КонецПопытки;
	Иначе
		ИдентификаторФормы = Неопределено;
		Если ТипЗнч(ФормаОбъекта) = Тип("УправляемаяФорма") Тогда
			ИдентификаторФормы = ФормаОбъекта.УникальныйИдентификатор;
		ИначеЕсли ТипЗнч(ФормаОбъекта) = Тип("УникальныйИдентификатор") Тогда
			ИдентификаторФормы = ФормаОбъекта;
		КонецЕсли;
		ВерсияОбъекта = Неопределено;
		ОписаниеДанных.Свойство("ВерсияОбъекта", ВерсияОбъекта);
		МассивПодписей = Неопределено;
		ДобавитьПодпись(ОписаниеДанных.Объект, ВерсияОбъекта, МассивПодписей);
		ОписаниеДанных.Вставить("Подписи", МассивПодписей);
		ОповеститьОбИзменении(ОписаниеДанных.Объект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПредставлениеДанных) Тогда
		ЭлектроннаяПодписьКлиент.ИнформироватьОПодписанииОбъекта(ПредставлениеДанных,, Истина);
	КонецЕсли;
	
	Закрыть(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодписиПутьКФайлу.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подписи.ПутьКФайлу");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл(ДобавитьНовуюСтроку = Ложь)
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		ОбработкаПродолжения = Новый ОписаниеОповещения(
			"ВыбратьФайлПриНачалеПомещенияФайла", ЭтотОбъект, ДобавитьНовуюСтроку);
		
		НачатьПомещениеФайла(ОбработкаПродолжения, , , , УникальныйИдентификатор);
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = НСтр("ru = 'Выберите файл электронной подписи'");
	Диалог.Фильтр = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Файлы подписи (*.%1)|*.%1|Все файлы(*.*)|*.*'"),
		ЭлектроннаяПодписьКлиентСервер.ПерсональныеНастройки().РасширениеДляФайловПодписи);
	
	Если Не ДобавитьНовуюСтроку Тогда
		Диалог.ПолноеИмяФайла = Элементы.Подписи.ТекущиеДанные.ПутьКФайлу;
	КонецЕсли;
	
	ПомещенныеФайлы = Новый Массив;
	Если Не ПоместитьФайлы(, ПомещенныеФайлы, Диалог, Ложь, УникальныйИдентификатор) Тогда
		Возврат;
	КонецЕсли;
	
	Файл = Новый Файл(ПомещенныеФайлы[0].Имя);
	ИмяФайла = Файл.Имя;
	
	ВыбратьФайлПослеПомещенияФайла(ПомещенныеФайлы[0].Хранение, ИмяФайла, ДобавитьНовуюСтроку);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлПриНачалеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ДобавитьНовуюСтроку) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ВыбратьФайлПослеПомещенияФайла(Адрес, ВыбранноеИмяФайла, ДобавитьНовуюСтроку);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлПослеПомещенияФайла(Адрес, ИмяФайла, ДобавитьНовуюСтроку)
	
	ОшибкаНаКлиенте = Новый Структура;
	ОшибкаНаСервере = Новый Структура;
	ДанныеПодписи = Неопределено;
	
	Если ДобавитьСтрокуНаСервере(Адрес, ИмяФайла, ДобавитьНовуюСтроку, ОшибкаНаСервере, ДанныеПодписи) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерКриптографии = ЭлектроннаяПодписьСлужебныйКлиент.МенеджерКриптографии("", Ложь, ОшибкаНаКлиенте);
	Если МенеджерКриптографии = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СвойстваПодписи = СвойстваПодписи(МенеджерКриптографии, ДанныеПодписи, ИмяФайла);
	Если ТипЗнч(СвойстваПодписи) = Тип("Строка") Тогда
		ОшибкаНаКлиенте.Вставить("ОписаниеОшибки", СвойстваПодписи);
		
		ЭлектроннаяПодписьСлужебныйКлиент.ПоказатьОшибкуОбращенияКПрограмме(
			НСтр("ru = 'Не удалось получить подпись из файла'"),
			"", ОшибкаНаКлиенте, ОшибкаНаСервере);
		Возврат;
	КонецЕсли;
	
	Если ДобавитьНовуюСтроку Тогда
		ТекущиеДанные = Подписи.Добавить();
	Иначе
		ТекущиеДанные = Элементы.Подписи.ТекущиеДанные;
	КонецЕсли;
	
	ТекущиеДанные.ПутьКФайлу = ИмяФайла;
	ТекущиеДанные.АдресСвойствПодписи = ПоместитьВоВременноеХранилище(СвойстваПодписи, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуНаСервере(Адрес, ИмяФайла, ДобавитьНовуюСтроку, ОшибкаНаСервере, ДанныеПодписи)
	
	ДанныеПодписи = ПолучитьИзВременногоХранилища(Адрес);
	ОбщиеНастройки = ЭлектроннаяПодписьКлиентСервер.ОбщиеНастройки();
	
	Если Не ОбщиеНастройки.ПроверятьЭлектронныеПодписиНаСервере
	   И Не ОбщиеНастройки.СоздаватьЭлектронныеПодписиНаСервере Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	МенеджерКриптографии = ЭлектроннаяПодписьСлужебный.МенеджерКриптографии("", Ложь, ОшибкаНаСервере);
	Если МенеджерКриптографии = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СвойстваПодписи = СвойстваПодписи(МенеджерКриптографии, ДанныеПодписи, ИмяФайла);
	Если ТипЗнч(СвойстваПодписи) = Тип("Строка") Тогда
		ОшибкаНаСервере.Вставить("ОписаниеОшибки", СвойстваПодписи);
		Возврат Ложь;
	КонецЕсли;
	
	Если ДобавитьНовуюСтроку Тогда
		ТекущиеДанные = Подписи.Добавить();
	Иначе
		ТекущиеДанные = Подписи.НайтиПоИдентификатору(Элементы.Подписи.ТекущаяСтрока);
	КонецЕсли;
	
	ТекущиеДанные.ПутьКФайлу = ИмяФайла;
	ТекущиеДанные.АдресСвойствПодписи = ПоместитьВоВременноеХранилище(СвойстваПодписи, УникальныйИдентификатор);
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СвойстваПодписи(МенеджерКриптографии, ДанныеПодписи, ИмяФайла)
	
	Попытка
		Сертификаты = МенеджерКриптографии.ПолучитьСертификатыИзПодписи(ДанныеПодписи);
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При получении сертификатов из файла подписи произошла ошибка:
			           |%1'"),
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
		Возврат Ложь;
	КонецПопытки;
	
	Если Сертификаты.Количество() = 0 Тогда
		Возврат НСтр("ru = 'В файле подписи нет ни одного сертификата.'");
	КонецЕсли;
	
	Сертификат = Сертификаты[0];
	СвойстваСертификата = ЭлектроннаяПодписьКлиентСервер.ЗаполнитьСтруктуруСертификата(Сертификат);
	
	СвойстваПодписи = Новый Структура;
	СвойстваПодписи.Вставить("Подпись",             ДанныеПодписи);
	СвойстваПодписи.Вставить("УстановившийПодпись", ПользователиКлиентСервер.АвторизованныйПользователь());
	СвойстваПодписи.Вставить("Комментарий",         "");
	СвойстваПодписи.Вставить("ИмяФайлаПодписи",     ИмяФайла);
	СвойстваПодписи.Вставить("ДатаПодписи",         Дата('00010101')); // Устанавливается перед записью.
	// Производные свойства:
	СвойстваПодписи.Вставить("Сертификат",          Сертификат.Выгрузить());
	СвойстваПодписи.Вставить("Отпечаток",           СвойстваСертификата.Отпечаток);
	СвойстваПодписи.Вставить("КомуВыданСертификат", СвойстваСертификата.КомуВыдан);
	
	Возврат СвойстваПодписи;
	
КонецФункции

&НаСервере
Функция МассивПодписей()
	
	МассивПодписей = Новый Массив;
	
	Для каждого Строка Из Подписи Цикл
		
		СвойстваПодписи = ПолучитьИзВременногоХранилища(Строка.АдресСвойствПодписи);
		СвойстваПодписи.Вставить("Комментарий", Строка.Комментарий);
		
		МассивПодписей.Добавить(ПоместитьВоВременноеХранилище(СвойстваПодписи,
			УникальныйИдентификатор));
	КонецЦикла;
	
	Возврат МассивПодписей;
	
КонецФункции

&НаСервере
Процедура ДобавитьПодпись(СсылкаНаОбъект, ВерсияОбъекта, МассивПодписей)
	
	МассивПодписей = МассивПодписей();
	
	ЭлектроннаяПодпись.ДобавитьПодпись(СсылкаНаОбъект,
		МассивПодписей, УникальныйИдентификатор, ВерсияОбъекта);
	
КонецПроцедуры

#КонецОбласти
