
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Для нового объекта выполняем код инициализации формы в ПриСозданииНаСервере.
	// Для существующего - в ПриЧтенииНаСервере.
	Если Объект.Ссылка.Пустая() Тогда
		ИнициализацияФормы();
	КонецЕсли;
	Если РольДоступна("ПолныеПрава") Тогда
		Элементы.ОтменаСтатусов.Видимость=Истина;
		Элементы.Выполнена.Видимость = Истина;
		Элементы.НеВыполнима.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//БизнесПроцессыИЗадачиКлиент.ФормаЗадачиОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	//ОбновитьОтображениеДанных();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОткрытьФормуЗадачиНажатие(Элемент)
	
	ПоказатьЗначение(,Объект.Ссылка);
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаИсполненияПриИзменении(Элемент)
	
	Если Объект.ДатаИсполнения = НачалоДня(Объект.ДатаИсполнения) Тогда
		Объект.ДатаИсполнения = КонецДня(Объект.ДатаИсполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаСервере
Процедура ОтметкаВыполненияВДокОсновании(ВыполненаЛи) 
	ОбъектЗадача = РеквизитФормыВЗначение("Объект");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезультатыПроверкиМагазинаРезультаты.НомерСтроки
		|ИЗ
		|	Документ.РезультатыПроверкиМагазинаРД.Результаты КАК РезультатыПроверкиМагазинаРезультаты
		|ГДЕ
		|	РезультатыПроверкиМагазинаРезультаты.Ссылка = &Ссылка
		|	И РезультатыПроверкиМагазинаРезультаты.ЗадачаУправляющему = &ЗадачаУправляющему
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РезультатыПроверкиМагазинаРезультаты.НомерСтроки
		|ИЗ
		|	Документ.РезультатыПроверкиМагазинаДАиК.Результаты КАК РезультатыПроверкиМагазинаРезультаты
		|ГДЕ
		|	РезультатыПроверкиМагазинаРезультаты.Ссылка = &Ссылка
		|	И РезультатыПроверкиМагазинаРезультаты.ЗадачаУправляющему = &ЗадачаУправляющему
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛистОбратнойСвязиHRРезультаты.НомерСтроки
		|ИЗ
		|	Документ.ЛистОбратнойСвязиHR.Результаты КАК ЛистОбратнойСвязиHRРезультаты
		|ГДЕ
		|	ЛистОбратнойСвязиHRРезультаты.Ссылка = &Ссылка
		|	И ЛистОбратнойСвязиHRРезультаты.ЗадачаУправляющему = &ЗадачаУправляющему";
	
	Запрос.УстановитьПараметр("Ссылка", ОбъектЗадача.ДокОснование);
	Запрос.УстановитьПараметр("ЗадачаУправляющему", ОбъектЗадача.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбъектДокОснование =  ОбъектЗадача.ДокОснование.ПолучитьОбъект();
		Если ВыполненаЛи=1 Тогда
			ОбъектДокОснование.Результаты[ВыборкаДетальныеЗаписи.НомерСтроки-1].ОтметкаОбИсполнении=Перечисления.СтатусыВыполнения.Выполнено;
			ОбъектДокОснование.Результаты[ВыборкаДетальныеЗаписи.НомерСтроки-1].КомментарийИсполнителя = ОбъектЗадача.КомментарийИсполнителя;
		ИначеЕсли ВыполненаЛи=2 Тогда
			ОбъектДокОснование.Результаты[ВыборкаДетальныеЗаписи.НомерСтроки-1].ОтметкаОбИсполнении=Перечисления.СтатусыВыполнения.НеВыполнима;
			ОбъектДокОснование.Результаты[ВыборкаДетальныеЗаписи.НомерСтроки-1].КомментарийИсполнителя = ОбъектЗадача.КомментарийИсполнителя;
		ИначеЕсли ВыполненаЛи=3 Тогда
			ОбъектДокОснование.Результаты[ВыборкаДетальныеЗаписи.НомерСтроки-1].ОтметкаОбИсполнении=Перечисления.СтатусыВыполнения.НеВыполнено;
			ОбъектДокОснование.Результаты[ВыборкаДетальныеЗаписи.НомерСтроки-1].КомментарийИсполнителя = "";
		КонецЕсли;
		ОбъектДокОснование.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры


// РезультатВыполнения 
//1 - Выполнено
//2 - НеВыполнима
//3 - НеВыполнено
&НаСервере
Процедура ЗаписьНовогоСтатуса(РезультатВыполнения)
	ОбъектЗадача = РеквизитФормыВЗначение("Объект");
	Если РезультатВыполнения=1 Тогда
	    ОбъектЗадача.РезультатВыполнения = Перечисления.СтатусыВыполнения.Выполнено;
		Если ОбъектЗадача.КомментарийИсполнителя <> "" Тогда
			ОбъектЗадача.РезультатВыполненияСтрокой =ОбъектЗадача.РезультатВыполненияСтрокой + Символы.ПС+"Комментарий: "+ОбъектЗадача.КомментарийИсполнителя;
		Иначе
			ОбъектЗадача.РезультатВыполненияСтрокой = Строка(Перечисления.СтатусыВыполнения.Выполнено);
		КонецЕсли;
	ИначеЕсли РезультатВыполнения=2 Тогда
		ОбъектЗадача.РезультатВыполнения = Перечисления.СтатусыВыполнения.НеВыполнима;
		ОбъектЗадача.РезультатВыполненияСтрокой = Строка(Перечисления.СтатусыВыполнения.НеВыполнима) +Символы.ПС+ "По причине: "+ОбъектЗадача.КомментарийИсполнителя;
	ИначеЕсли РезультатВыполнения=3 Тогда
		ОбъектЗадача.РезультатВыполнения = Перечисления.СтатусыВыполнения.НеВыполнено;
		ОбъектЗадача.РезультатВыполненияСтрокой = Строка(Перечисления.СтатусыВыполнения.НеВыполнено);	
	КонецЕсли;
	ОбъектЗадача.Записать();
	ЗначениеВРеквизитФормы(ОбъектЗадача,"Объект");
КонецПроцедуры


&НаКлиенте
Процедура ВыполненаВыполнить(Команда)

	ЗаписьНовогоСтатуса(1);
	//Прочитать();
	Если БизнесПроцессыИЗадачиКлиент.ЗадачаВыполнить(ЭтотОбъект) Тогда
		ОтметкаВыполненияВДокОсновании(1);
	КонецЕсли;
	Элементы.НеВыполнима.Доступность = Ложь;
	Элементы.Выполнена.Доступность = Ложь;

КонецПроцедуры


&НаКлиенте
Процедура НеВыполнима(Команда)
	Если Элементы.КомментарийИсполнителя.ТекстРедактирования = "" Тогда
		Сообщить("Необходимо указать причину не выполнения задачи  в поле ""Комментарий исполнителя"". Статус не изменен");
		Возврат;
	КонецЕсли;
	ЗаписьНовогоСтатуса(2);
	//Прочитать();
	Если БизнесПроцессыИЗадачиКлиент.ЗадачаВыполнить(ЭтотОбъект,Ложь) Тогда
		ОтметкаВыполненияВДокОсновании(2);
	КонецЕсли;
	Элементы.НеВыполнима.Доступность = Ложь;
	Элементы.Выполнена.Доступность = Ложь;
КонецПроцедуры


&НаКлиенте
Процедура ОтменаСтатусов(Команда)
	ЗаписьНовогоСтатуса(3);
	//Прочитать();
	Если БизнесПроцессыИЗадачиКлиент.ОтменаВыполнить(ЭтотОбъект) Тогда
		ОтметкаВыполненияВДокОсновании(3);
	КонецЕсли;
	Элементы.НеВыполнима.Доступность = Истина;
	Элементы.Выполнена.Доступность = Истина;
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализацияФормы()
	
	ОбъектЗадача = РеквизитФормыВЗначение("Объект");
	
	Если (ОбъектЗадача.Автор <> ПользователиКлиентСервер.ТекущийПользователь()) И (ОбъектЗадача.Исполнитель <> ПользователиКлиентСервер.ТекущийПользователь()) Тогда
		Элементы.Выполнена.Видимость = Ложь;
		Элементы.НеВыполнима.Видимость = Ложь;
	КонецЕсли;
	//Доступность кнопок если задач уже закрыта
	Если ОбъектЗадача.РезультатВыполнения <> Перечисления.СтатусыВыполнения.НеВыполнено Тогда
		Элементы.НеВыполнима.Доступность = Ложь;
		Элементы.Выполнена.Доступность = Ложь; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.БизнесПроцесс) Тогда
		ПараметрыФормы = БизнесПроцессыИЗадачиВызовСервера.ФормаВыполненияЗадачи(Объект.Ссылка);
		ЕстьФормаЗадачи = ПараметрыФормы.Свойство("ИмяФормы");
		Элементы.ГруппаФормаВыполнения.Видимость = ЕстьФормаЗадачи;
	Иначе
		Элементы.ГруппаФормаВыполнения.Видимость = Ложь;
	КонецЕсли;
	НачальныйПризнакВыполнения = Объект.Выполнена;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Важность = Перечисления.ВариантыВажностиЗадачи.Обычная;
		Объект.СрокИсполнения = ТекущаяДатаСеанса();
	КонецЕсли;
	
	//Элементы.Предмет.Гиперссылка = Объект.Предмет <> Неопределено И НЕ Объект.Предмет.Пустая();
	//ПредметСтрокой = ОбщегоНазначения.ПредметСтрокой(Объект.Предмет);	
	
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокНачалаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	Элементы.ДатаИсполненияВремя.Видимость = ИспользоватьДатуИВремяВСрокахЗадач;
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.СрокИсполнения);
	БизнесПроцессыИЗадачиСервер.УстановитьФорматДаты(Элементы.Дата);
	
	БизнесПроцессыИЗадачиСервер.ФормаЗадачиПриСозданииНаСервере(ЭтотОбъект, Объект, 
		Элементы.ГруппаСостояние, Элементы.ДатаИсполнения);
	
КонецПроцедуры	


#КонецОбласти
