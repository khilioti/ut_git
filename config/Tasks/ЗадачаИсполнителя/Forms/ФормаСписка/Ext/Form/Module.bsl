
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ТекстЗаголовкаФормы;
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	МоиЗадачи = Истина;
	Если РольДоступна("РД") ИЛИ РольДоступна("HR") ИЛИ РольДоступна("ДАиК") Тогда
		Элементы.МоиЗадачи.Заголовок = "Мои назначенные задачи";
		Проверяющий = Истина;
	КонецЕсли;
	
	Если РольДоступна("УправляющиеМагазинами") Тогда
		Управляющий = Истина;
	КонецЕсли;
	
	Если (НЕ РольДоступна("РД")) И (НЕ РольДоступна("HR")) И (НЕ РольДоступна("ДАиК")) И (НЕ РольДоступна("УправляющиеМагазинами")) Тогда
	    Элементы.МоиЗадачи.Видимость=Ложь;
		МоиЗадачи = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗаголовокФормы", ТекстЗаголовкаФормы) И
		НЕ ПустаяСтрока(ТекстЗаголовкаФормы) Тогда
		Заголовок = ТекстЗаголовкаФормы;
		АвтоЗаголовок = Ложь;			
	КонецЕсли;
	
	Если Параметры.Свойство("БизнесПроцесс") Тогда
		СтрокаБизнесПроцесса = Параметры.БизнесПроцесс;
		СтрокаЗадачи = Параметры.Задача;
		Элементы.ГруппаЗаголовок.Видимость = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьЗадачи") Тогда
		ПоказыватьЗадачи = Параметры.ПоказыватьЗадачи;
	Иначе
		ПоказыватьЗадачи = 0;
	КонецЕсли;
	
	Если Параметры.Свойство("ВидимостьОтборов") Тогда
		Элементы.ГруппаОтбор.Видимость = Параметры.ВидимостьОтборов;
	Иначе	
		//ПоАвтору = Пользователи.ТекущийПользователь();
	КонецЕсли;
	УстановитьОтбор();
	
	Если Параметры.Свойство("БлокировкаОкнаВладельца") Тогда
		РежимОткрытияОкна = Параметры.БлокировкаОкнаВладельца;
	КонецЕсли;
		
	ИспользоватьДатуИВремяВСрокахЗадач = ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	Элементы.СрокИсполнения.Формат = ?(ИспользоватьДатуИВремяВСрокахЗадач, "ДЛФ=DT", "ДЛФ=D");
	Элементы.ДатаИсполнения.Формат = ?(ИспользоватьДатуИВремяВСрокахЗадач, "ДЛФ=DT", "ДЛФ=D");
	
	//БизнесПроцессыИЗадачиСервер.УстановитьОформлениеЗадач(Список);
	
	// Установка отбора динамического списка.
	//ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	//	Список, "ПометкаУдаления", Ложь, ВидСравненияКомпоновкиДанных.Равно, , Ложь,
	//	РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ЗадачаИсполнителя" Тогда
		ОбновитьСписокЗадачНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)

	//ИмяНастройки = ?(Параметры.Свойство("БизнесПроцесс"), "ФормаСпискаБП", "ФормаСписка");
	//НастройкиОтбора = ОбщегоНазначения.ХранилищеСистемныхНастроекЗагрузить("Задачи.ЗадачаИсполнителя.Формы.ФормаСписка", ИмяНастройки);
	//Если НастройкиОтбора = Неопределено Тогда 
	//	Настройки.Очистить();
	//	Возврат;
	//КонецЕсли;
	//
	//Для Каждого Элемент Из НастройкиОтбора Цикл
	//	Настройки.Вставить(Элемент.Ключ, Элемент.Значение);
	//КонецЦикла;
	//УстановитьОтборСписка(Список, НастройкиОтбора);
	УстановитьОтбор();
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	ИмяНастроек = ?(Элементы.ГруппаЗаголовок.Видимость, "ФормаСпискаБП", "ФормаСписка");
	ОбщегоНазначения.ХранилищеСистемныхНастроекСохранить("Задачи.ЗадачаИсполнителя.Формы.ФормаСписка", ИмяНастроек, Настройки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоИсполнителюПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ПоАвторуПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЗадачиПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПринятьКИсполнению(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ПринятьЗадачиКИсполнению(Элементы.Список.ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПринятиеКИсполнению(Команда)
	
	БизнесПроцессыИЗадачиКлиент.ОтменитьПринятиеЗадачКИсполнению(Элементы.Список.ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЗадач(Команда)
	
	ОбновитьСписокЗадачНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБизнесПроцесс(Команда)
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	КонецЕсли;
	Если Элементы.Список.ТекущиеДанные.БизнесПроцесс = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'У выбранной задачи не указан бизнес-процесс.'"));
		Возврат;
	КонецЕсли;
	ПоказатьЗначение(, Элементы.Список.ТекущиеДанные.БизнесПроцесс);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПредметЗадачи(Команда)
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'"));
		Возврат;
	КонецЕсли;
	Если Элементы.Список.ТекущиеДанные.Предмет = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'У выбранной задачи не указан предмет.'"));
		Возврат;
	КонецЕсли;
	ПоказатьЗначение(, Элементы.Список.ТекущиеДанные.Предмет);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	БизнесПроцессыИЗадачиКлиент.СписокЗадачПередНачаломДобавления(ЭтотОбъект, Элемент, Отказ, Копирование, 
		Родитель, Группа);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтбор2()
	
	ПараметрыОтбора = Новый Соответствие();
	Если РольДоступна("УправляющиеМагазинами") Тогда
		ПараметрыОтбора.Вставить("ПоАвтору", ПоАвтору);
		Если МоиЗадачи=Ложь Тогда
			ПараметрыОтбора.Вставить("ПоИсполнителю", ПоИсполнителю);
		Иначе
			ПараметрыОтбора.Вставить("ПоИсполнителю", ПользователиКлиентСервер.ТекущийПользователь());
		КонецЕсли;
	КонецЕсли;
	Если РольДоступна("HR") ИЛИ РольДоступна("РД") ИЛИ РольДоступна("ДАиК") Тогда
		ПараметрыОтбора.Вставить("ПоИсполнителю", ПоИсполнителю);
		Если МоиЗадачи=Ложь Тогда
			ПараметрыОтбора.Вставить("ПоАвтору", ПоАвтору);
		Иначе
			ПараметрыОтбора.Вставить("ПоАвтору", ПользователиКлиентСервер.ТекущийПользователь());
		КонецЕсли;
	КонецЕсли;
	
	Если РольДоступна("УправляющиеМагазинами") Тогда
		 ПараметрыОтбора.Вставить("ОтделПостановщикЗадачи",ОтделПостановщикЗадачи);
	КонецЕсли;
		
	ПараметрыОтбора.Вставить("ПоказыватьЗадачи", ПоказыватьЗадачи);
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры	


&НаСервере
Процедура УстановитьОтбор()
	
	ПараметрыОтбора = Новый Соответствие;
	
	Если ПоказыватьЗадачи = 1 Тогда
		ПараметрыОтбора.Вставить("РезультатВыполнения",Перечисления.СтатусыВыполнения.Выполнено);
	ИначеЕсли ПоказыватьЗадачи = 2 Тогда
		ПараметрыОтбора.Вставить("РезультатВыполнения",Перечисления.СтатусыВыполнения.НеВыполнено);
	ИначеЕсли ПоказыватьЗадачи = 3 Тогда
		ПараметрыОтбора.Вставить("РезультатВыполнения",Перечисления.СтатусыВыполнения.НеВыполнима);
	КонецЕсли;
	
	Если Управляющий Тогда
		Если МоиЗадачи Тогда
			ПараметрыОтбора.Вставить("Исполнитель",ПользователиКлиентСервер.ТекущийПользователь());
		Иначе
			Если ПоИсполнителю <> Справочники.Пользователи.ПустаяСсылка() Тогда
				ПараметрыОтбора.Вставить("Исполнитель",ПоИсполнителю);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ПоИсполнителю <> Справочники.Пользователи.ПустаяСсылка() Тогда
			ПараметрыОтбора.Вставить("Исполнитель",ПоИсполнителю);
		КонецЕсли;
	КонецЕсли;
	
	Если Проверяющий Тогда
		Если МоиЗадачи Тогда
			ПараметрыОтбора.Вставить("Автор",ПользователиКлиентСервер.ТекущийПользователь());
		Иначе
			Если ПоАвтору <> Справочники.Пользователи.ПустаяСсылка() Тогда
				ПараметрыОтбора.Вставить("Автор",ПоАвтору);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если ПоАвтору <> Справочники.Пользователи.ПустаяСсылка() Тогда
			ПараметрыОтбора.Вставить("Автор",ПоАвтору);
		КонецЕсли;
	КонецЕсли;
	
	Если Элементы.ПодгруппаМоиЗадачи.Видимость Тогда
		Если ОтделПостановщикЗадачи = 1 Тогда
			ПараметрыОтбора.Вставить("Наименование","РД");
		ИначеЕсли ОтделПостановщикЗадачи = 2 Тогда
			ПараметрыОтбора.Вставить("Наименование","HR");
		ИначеЕсли ОтделПостановщикЗадачи = 3 Тогда
			ПараметрыОтбора.Вставить("Наименование","ДАиК");
		КонецЕсли;
	КонецЕсли;
	Список.Отбор.Элементы.Очистить();
	Элементы.Список.Обновить();
	Если ПараметрыОтбора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	Для Каждого парам из ПараметрыОтбора Цикл
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(парам.Ключ);
		Если парам.Ключ = "Наименование" Тогда
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
		Иначе
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		ЭлементОтбора.ПравоеЗначение = парам.Значение;
	КонецЦикла;
	
	//
	//ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"))
	
КонецПроцедуры	


&НаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Автор", ПараметрыОтбора["ПоАвтору"],,, ПараметрыОтбора["ПоАвтору"] <> Неопределено И Не ПараметрыОтбора["ПоАвтору"].Пустая());
	
	Если ПараметрыОтбора["ПоИсполнителю"] = Неопределено Или ПараметрыОтбора["ПоИсполнителю"].Пустая() Тогда
		Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", NULL);
	Иначе	
		Список.Параметры.УстановитьЗначениеПараметра("Исполнитель", ПараметрыОтбора["ПоИсполнителю"]);
	КонецЕсли;
	
	Если ПараметрыОтбора["ПоказыватьЗадачи"] = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "РезультатВыполнения", Истина,,,Ложь);
	ИначеЕсли ПараметрыОтбора["ПоказыватьЗадачи"] = 1 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "РезультатВыполнения", Перечисления.СтатусыВыполнения.Выполнено,,,Истина);
	ИначеЕсли ПараметрыОтбора["ПоказыватьЗадачи"] = 2 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "РезультатВыполнения", Перечисления.СтатусыВыполнения.НеВыполнено,,,Истина);
	ИначеЕсли ПараметрыОтбора["ПоказыватьЗадачи"] = 3 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "РезультатВыполнения", Перечисления.СтатусыВыполнения.НеВыполнима,,,Истина);
	КонецЕсли;	

	Если ПараметрыОтбора["ОтделПостановщикЗадачи"] = 0 Тогда 
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Наименование", "Указание",,,Ложь);
	ИначеЕсли ПараметрыОтбора["ОтделПостановщикЗадачи"] = 1 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Наименование", "РД", ВидСравненияКомпоновкиДанных.Содержит,,Истина);
	ИначеЕсли ПараметрыОтбора["ОтделПостановщикЗадачи"] = 2 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Наименование", "HR", ВидСравненияКомпоновкиДанных.Содержит,,Истина);
	ИначеЕсли ПараметрыОтбора["ОтделПостановщикЗадачи"] = 3 Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Наименование", "ДАиК", ВидСравненияКомпоновкиДанных.Содержит,,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗадачНаСервере()
	
	БизнесПроцессыИЗадачиСервер.УстановитьОформлениеЗадач(Список);
	Элементы.Список.Обновить();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СменаКнопок();
	Элементы.отВсех.ЦветТекста = Новый Цвет(255, 0, 0);
КонецПроцедуры

&НаКлиенте
Процедура МоиЗадачи(Команда)
	МоиЗадачи=Истина;
	СменаКнопок();
КонецПроцедуры

&НаКлиенте
Процедура ВсеЗадачи(Команда)
	МоиЗадачи=Ложь;
	СменаКнопок();
КонецПроцедуры

&НаКлиенте 
Процедура СменаКнопок()
	Элементы.МоиЗадачи.ЦветТекста = ?(МоиЗадачи,Новый Цвет(255, 0, 0),Новый Цвет(77, 77, 77));
	Элементы.ВсеЗадачи.ЦветТекста = ?(МоиЗадачи,Новый Цвет(77, 77, 77),Новый Цвет(255, 0, 0));
	Элементы.ПодгруппаМоиЗадачи.Видимость = (МоиЗадачи И Управляющий);
	Если МоиЗадачи Тогда
		Если Управляющий Тогда
			Элементы.ПоИсполнителю.Видимость = Ложь;
			Элементы.ПоАвтору.Видимость = Истина;
		Иначе
			Элементы.ПоИсполнителю.Видимость = Истина;
			Элементы.ПоАвтору.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.ПоИсполнителю.Видимость = Истина;
		Элементы.ПоАвтору.Видимость = Истина;
	КонецЕсли;
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура отВсех(Команда)
	ОтделПостановщикЗадачи = 0;
	Элементы.отВсех.ЦветТекста = Новый Цвет(255, 0, 0);
	Элементы.отРД.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отHR.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отДАиК.ЦветТекста = Новый Цвет(77, 77, 77);
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура отРД(Команда)
	ОтделПостановщикЗадачи = 1;
	Элементы.отВсех.ЦветТекста =Новый Цвет(77, 77, 77);
	Элементы.отРД.ЦветТекста = Новый Цвет(255, 0, 0);
	Элементы.отHR.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отДАиК.ЦветТекста = Новый Цвет(77, 77, 77);
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура отHR(Команда)
	ОтделПостановщикЗадачи = 2;
	Элементы.отВсех.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отРД.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отHR.ЦветТекста = Новый Цвет(255, 0, 0);
	Элементы.отДАиК.ЦветТекста = Новый Цвет(77, 77, 77);
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура отДАиК(Команда)
	ОтделПостановщикЗадачи = 3;
	Элементы.отВсех.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отРД.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отHR.ЦветТекста = Новый Цвет(77, 77, 77);
	Элементы.отДАиК.ЦветТекста = Новый Цвет(255, 0, 0);
	УстановитьОтбор();
КонецПроцедуры

#КонецОбласти
