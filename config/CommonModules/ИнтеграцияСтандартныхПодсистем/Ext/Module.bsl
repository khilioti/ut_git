////////////////////////////////////////////////////////////////////////////////
// Интеграция подсистем друг с другом.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Интеграция с подсистемой "Запрет редактирования реквизитов объектов".

// Определить объекты метаданных, в модулях менеджеров которых ограничивается возможность редактирования реквизитов
// с помощью экспортной функции ПолучитьБлокируемыеРеквизитыОбъекта.
//
// Параметры:
//   Объекты - Соответствие - в качестве ключа указать полное имя объекта метаданных,
//                            подключенного к подсистеме "Запрет редактирования реквизитов объектов". 
//                            В качестве значения - пустую строку.
//
Процедура ПриОпределенииОбъектовСЗаблокированнымиРеквизитами(Объекты) Экспорт 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Объекты.Вставить(Метаданные.Справочники["ВидыКонтактнойИнформации"].ПолноеИмя(), "");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		Объекты.Вставить(Метаданные.ПланыВидовХарактеристик["ДополнительныеРеквизитыИСведения"].ПолноеИмя(), "");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интеграция с подсистемой "Групповое изменение объектов".

// Определить объекты метаданных, в модулях менеджеров которых ограничивается возможность 
// редактирования реквизитов при групповом изменении.
//
// Параметры:
//   Объекты - Соответствие - в качестве ключа указать полное имя объекта метаданных,
//                            подключенного к подсистеме "Групповое изменение объектов". 
//                            Дополнительно в значении могут быть перечислены имена экспортных функций:
//                            "РеквизитыНеРедактируемыеВГрупповойОбработке",
//                            "РеквизитыРедактируемыеВГрупповойОбработке".
//                            Каждое имя должно начинаться с новой строки.
//                            Если указана пустая строка, значит в модуле менеджера определены обе функции.
//
Процедура ПриОпределенииОбъектовСРедактируемымиРеквизитами(Объекты) Экспорт 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.БазоваяФункциональность") Тогда
		Объекты.Вставить(Метаданные.Справочники["ИдентификаторыОбъектовМетаданных"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Анкетирование") Тогда
		Объекты.Вставить(Метаданные.Документы["Анкета"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Документы["НазначениеОпросов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.ПланыВидовХарактеристик["ВопросыДляАнкетирования"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ВариантыОтветовАнкет"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ВопросыШаблонаАнкеты"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ШаблоныАнкет"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Банки") Тогда
		Объекты.Вставить(Метаданные.Справочники["КлассификаторБанковРФ"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.БизнесПроцессыИЗадачи") Тогда
		Объекты.Вставить(Метаданные.БизнесПроцессы["Задание"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Задачи["ЗадачаИсполнителя"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.ПланыВидовХарактеристик["ОбъектыАдресацииЗадач"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ГруппыИсполнителейЗадач"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["РолиИсполнителей"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") Тогда
		Объекты.Вставить(Метаданные.Документы["Встреча"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Документы["ТелефонныйЗвонок"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Документы["ЗапланированноеВзаимодействие"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Документы["ЭлектронноеПисьмоВходящее"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Документы["ЭлектронноеПисьмоИсходящее"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Документы["СообщениеSMS"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ВстречаПрисоединенныеФайлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ЗакладкиВзаимодействий"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ЗапланированноеВзаимодействиеПрисоединенныеФайлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ПапкиЭлектронныхПисем"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ПравилаОбработкиЭлектроннойПочты"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["СообщениеSMSПрисоединенныеФайлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["СтроковыеКонтактыВзаимодействий"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ТелефонныйЗвонокПрисоединенныеФайлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ЭлектронноеПисьмоВходящееПрисоединенныеФайлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ЭлектронноеПисьмоИсходящееПрисоединенныеФайлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Валюты") Тогда
		Объекты.Вставить(Метаданные.Справочники["Валюты"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВариантыОтчетов") Тогда
		Объекты.Вставить(Метаданные.Справочники["ВариантыОтчетов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ПользовательскиеНастройкиОтчетов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ПредопределенныеВариантыОтчетов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки") Тогда
		Объекты.Вставить(Метаданные.Справочники["ДополнительныеОтчетыИОбработки"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
		
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЗаметкиПользователя") Тогда
		Объекты.Вставить(Метаданные.Справочники["Заметки"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		Объекты.Вставить(Метаданные.Справочники["ВидыКонтактнойИнформации"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ОбменДанными") Тогда
		Объекты.Вставить(Метаданные.Справочники["СценарииОбменовДанными"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Организации") Тогда
		Объекты.Вставить(Метаданные.Справочники["Организации"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Пользователи") Тогда
		Объекты.Вставить(Метаданные.Справочники["ВнешниеПользователи"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ГруппыВнешнихПользователей"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["Пользователи"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		Объекты.Вставить(Метаданные.Справочники["ПапкиФайлов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["Файлы"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РассылкаОтчетов") Тогда
		Объекты.Вставить(Метаданные.Справочники["РассылкиОтчетов"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		Объекты.Вставить(Метаданные.Справочники["УчетныеЗаписиЭлектроннойПочты"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
		
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		Объекты.Вставить(Метаданные.Справочники["ВерсииФайлов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		Объекты.Вставить(Метаданные.ПланыВидовХарактеристик["ДополнительныеРеквизитыИСведения"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ЗначенияСвойствОбъектов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ЗначенияСвойствОбъектовИерархия"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["НаборыДополнительныхРеквизитовИСведений"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
		
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ОбменСообщениями") Тогда
		Объекты.Вставить(Метаданные.Справочники["СообщенияСистемы"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		Объекты.Вставить(Метаданные.Справочники["ГруппыДоступа"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["ПрофилиГруппДоступа"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ФайловыеФункции") Тогда
		Объекты.Вставить(Метаданные.Справочники["ТомаХраненияФайлов"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		Объекты.Вставить(Метаданные.Справочники["ПрограммыЭлектроннойПодписиИШифрования"].ПолноеИмя(), "РеквизитыРедактируемыеВГрупповойОбработке");
		Объекты.Вставить(Метаданные.Справочники["СертификатыКлючейЭлектроннойПодписиИШифрования"].ПолноеИмя(), "РеквизитыНеРедактируемыеВГрупповойОбработке");
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Интеграция с подсистемой "Загрузка данных из файла".

// Определить список справочников, доступных для загрузки с помощью подсистемы "Загрузка данных из файла".
//
// Параметры:
//  Обработчики - ТаблицаЗначений - список справочников, в которые возможна загрузка данных.
//      * ПолноеИмя          - Строка - полное имя справочника (как в метаданных).
//      * Представление      - Строка - представление справочника в списке выбора.
//      * ПрикладнаяЗагрузка - Булево - если Истина, значит справочник использует собственный алгоритм загрузки и
//                                      в модуле менеджера справочника определены функции.
//
Процедура ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники) Экспорт
	
	СтандартныеПодсистемыСервер.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейСлужебный = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформациейСлужебный");
		МодульУправлениеКонтактнойИнформациейСлужебный.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Валюты") Тогда
		МодульРаботаСКурсамиВалют = ОбщегоНазначения.ОбщийМодуль("РаботаСКурсамиВалют");
		МодульРаботаСКурсамиВалют.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Пользователи") Тогда
		МодульПользователиСлужебный = ОбщегоНазначения.ОбщийМодуль("ПользователиСлужебный");
		МодульПользователиСлужебный.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.БизнесПроцессыИЗадачи") Тогда
		МодульБизнесПроцессыИЗадачиСервер = ОбщегоНазначения.ОбщийМодуль("БизнесПроцессыИЗадачиСервер");
		МодульБизнесПроцессыИЗадачиСервер.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Банки") Тогда
		МодульРаботаСБанками = ОбщегоНазначения.ОбщийМодуль("РаботаСБанками");
		МодульРаботаСБанками.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.ОчередьЗаданий") Тогда
		МодульОчередьЗаданийСлужебный = ОбщегоНазначения.ОбщийМодуль("ОчередьЗаданийСлужебный");
		МодульОчередьЗаданийСлужебный.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаВМоделиСервиса.БазоваяФункциональностьВМоделиСервиса") Тогда
		МодульРаботаВМоделиСервиса = ОбщегоНазначения.ОбщийМодуль("РаботаВМоделиСервиса");
		МодульРаботаВМоделиСервиса.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВариантыОтчетов") Тогда
		МодульВариантыОтчетов = ОбщегоНазначения.ОбщийМодуль("ВариантыОтчетов");
		МодульВариантыОтчетов.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		МодульЭлектроннаяПодписьСлужебный = ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодписьСлужебный");
		МодульЭлектроннаяПодписьСлужебный.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;

	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Взаимодействия") Тогда
		МодульВзаимодействия = ОбщегоНазначения.ОбщийМодуль("Взаимодействия");
		МодульВзаимодействия.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ФайловыеФункции") Тогда
		МодульФайловыеФункцииСлужебный = ОбщегоНазначения.ОбщийМодуль("ФайловыеФункцииСлужебный");
		МодульФайловыеФункцииСлужебный.ПриОпределенииСправочниковДляЗагрузкиДанных(ЗагружаемыеСправочники);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

