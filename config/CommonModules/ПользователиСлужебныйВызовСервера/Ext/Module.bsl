////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Проверяет, что объект информационной базы используется в качестве объекта авторизации
// какого-нибудь внешнего пользователя, кроме заданного внешнего пользователя (если задан).
//
Функция ОбъектАвторизацииИспользуется(Знач СсылкаНаОбъектАвторизации,
                                      Знач СсылкаНаТекущегоВнешнегоПользователя,
                                      НайденныйВнешнийПользователь = Неопределено,
                                      ЕстьПравоДобавленияВнешнегоПользователя = Ложь,
                                      ТекстОшибки = "") Экспорт
	
	Возврат ПользователиСлужебный.ОбъектАвторизацииИспользуется(
				СсылкаНаОбъектАвторизации,
				СсылкаНаТекущегоВнешнегоПользователя,
				НайденныйВнешнийПользователь,
				ЕстьПравоДобавленияВнешнегоПользователя,
				ТекстОшибки);
	
КонецФункции


Функция ПроверкаЗаполненияСоотвСотрудникаУТекПользователя() Экспорт
	//ПользовательСсылка = ТекущийПользователь();
	ПользовательСсылка = ?(ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь),
	          ПараметрыСеанса.ТекущийПользователь,
	          ПараметрыСеанса.ТекущийВнешнийПользователь);

	
	Возврат ЗначениеЗаполнено(ПользовательСсылка.СоотвСотрудник);
		
КонецФункции

#КонецОбласти

Функция ВыводСменыПароля() Экспорт	
	Возврат Справочники.Пользователи.НайтиПоНаименованию(ПользователиИнформационнойБазы.ТекущийПользователь().Имя).ПервыйЗапуск;	
КонецФункции
